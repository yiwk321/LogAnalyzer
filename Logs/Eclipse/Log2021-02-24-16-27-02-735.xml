<Events startTimestamp="1614202022735" logVersion="1.0.0.202102091426">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="816" date="Wed Feb 24 16:27:06 EST 2021" docOffset="2297" starttimestamp="1614202022735" timestamp="3872" />
  <Command __id="24" _type="PauseCommand" date="Wed Feb 24 16:27:13 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="10418">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1246]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="23" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="10418" />
  <Command __id="25" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="10420" />
  <Command __id="26" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="10429" />
  <Command __id="27" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="10430" />
  <Command __id="28" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="10569" />
  <Command __id="29" _type="FindCommand" caseSensitive="false" date="Wed Feb 24 16:27:13 EST 2021" forward="true" matchWord="false" offset="2297" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614202022735" timestamp="10851" wrapSearch="true">
    <searchString><![CDATA[= null)]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="30" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="11038" />
  <Command __id="31" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="11166" />
  <Command __id="32" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:13 EST 2021" starttimestamp="1614202022735" timestamp="11167" />
  <Command __id="33" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11388" />
  <Command __id="34" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11389" />
  <Command __id="35" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11562" />
  <Command __id="36" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11562" />
  <Command __id="37" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11720" />
  <Command __id="38" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11721" />
  <Command __id="39" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11848" />
  <Command __id="40" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="11849" />
  <Command __id="41" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="12106" />
  <Command __id="42" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="12108" />
  <Command __id="43" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="12248" />
  <Command __id="44" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:14 EST 2021" starttimestamp="1614202022735" timestamp="12249" />
  <Command __id="45" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:15 EST 2021" starttimestamp="1614202022735" timestamp="12404" />
  <Command __id="46" _type="ShellCommand" date="Wed Feb 24 16:27:15 EST 2021" starttimestamp="1614202022735" timestamp="12758" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="48" _type="PauseCommand" date="Wed Feb 24 16:27:17 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="14363">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1605]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="47" _type="MoveCaretCommand" caretOffset="2634" date="Wed Feb 24 16:27:17 EST 2021" docOffset="4115" starttimestamp="1614202022735" timestamp="14363" />
  <Command __id="49" _type="MoveCaretCommand" caretOffset="2521" date="Wed Feb 24 16:27:17 EST 2021" docOffset="4002" starttimestamp="1614202022735" timestamp="15109" />
  <Command __id="51" _type="InsertStringCommand" date="Wed Feb 24 16:27:18 EST 2021" starttimestamp="1614202022735" timestamp="15367" timestamp2="15367">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="53" _type="InsertStringCommand" date="Wed Feb 24 16:27:18 EST 2021" starttimestamp="1614202022735" timestamp="15869" timestamp2="15869">
    <data><![CDATA[|]]></data>
  </Command>
  <Command __id="55" _type="InsertStringCommand" date="Wed Feb 24 16:27:18 EST 2021" starttimestamp="1614202022735" timestamp="15981" timestamp2="15981">
    <data><![CDATA[|]]></data>
  </Command>
  <Command __id="57" _type="InsertStringCommand" date="Wed Feb 24 16:27:18 EST 2021" starttimestamp="1614202022735" timestamp="16126" timestamp2="16126">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="59" _type="PauseCommand" date="Wed Feb 24 16:27:21 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="18644">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2518]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="60" _type="InsertStringCommand" date="Wed Feb 24 16:27:21 EST 2021" starttimestamp="1614202022735" timestamp="18651" timestamp2="18651">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="61" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:27:21 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="19143" />
  <Command __id="65" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:27:23 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="20846" />
  <Command __id="67" _type="InsertStringCommand" date="Wed Feb 24 16:27:23 EST 2021" starttimestamp="1614202022735" timestamp="20869" timestamp2="20869">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="69" _type="InsertStringCommand" date="Wed Feb 24 16:27:23 EST 2021" starttimestamp="1614202022735" timestamp="21101" timestamp2="21101">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="70" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:27:23 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="21134" />
  <Command __id="76" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:27:24 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="21995" />
  <Command __id="78" _type="InsertStringCommand" date="Wed Feb 24 16:27:24 EST 2021" starttimestamp="1614202022735" timestamp="22017" timestamp2="22017">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="80" _type="InsertStringCommand" date="Wed Feb 24 16:27:25 EST 2021" starttimestamp="1614202022735" timestamp="22325" timestamp2="22325">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="81" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:27:25 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="22355" />
  <Command __id="83" _type="PauseCommand" date="Wed Feb 24 16:27:26 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="23416">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="85" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:27:26 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="23668" />
  <Command __id="87" _type="InsertStringCommand" date="Wed Feb 24 16:27:26 EST 2021" starttimestamp="1614202022735" timestamp="23803" timestamp2="23803">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="89" _type="InsertStringCommand" date="Wed Feb 24 16:27:27 EST 2021" starttimestamp="1614202022735" timestamp="24322" timestamp2="24322">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="91" _type="InsertStringCommand" date="Wed Feb 24 16:27:27 EST 2021" starttimestamp="1614202022735" timestamp="24569" timestamp2="24569">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="93" _type="InsertStringCommand" date="Wed Feb 24 16:27:27 EST 2021" starttimestamp="1614202022735" timestamp="24704" timestamp2="24704">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="95" _type="InsertStringCommand" date="Wed Feb 24 16:27:27 EST 2021" starttimestamp="1614202022735" timestamp="25125" timestamp2="25125">
    <data><![CDATA[:]]></data>
  </Command>
  <Command __id="97" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Feb 24 16:27:28 EST 2021" starttimestamp="1614202022735" timestamp="25869" />
  <Command __id="99" _type="InsertStringCommand" date="Wed Feb 24 16:27:28 EST 2021" starttimestamp="1614202022735" timestamp="26060" timestamp2="26060">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="110" _type="PauseCommand" date="Wed Feb 24 16:27:34 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="31930">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2756]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="109" _type="RunCommand" date="Wed Feb 24 16:27:34 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="31930" type="Run" />
  <Command __id="111" _type="RunCommand" date="Wed Feb 24 16:27:34 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="31932" type="Run" />
  <Command __id="112" _type="RunCommand" date="Wed Feb 24 16:27:34 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="32069" type="Run" />
  <Command __id="113" _type="RunCommand" date="Wed Feb 24 16:27:34 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="32122" type="Run" />
  <Command __id="114" _type="RunCommand" date="Wed Feb 24 16:27:35 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="32341" type="Run" />
  <Command __id="115" _type="RunCommand" date="Wed Feb 24 16:27:35 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="33005" type="Run" />
  <Command __id="117" _type="PauseCommand" date="Wed Feb 24 16:27:42 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="39769">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6764]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="118" _type="MoveCaretCommand" caretOffset="1264" date="Wed Feb 24 16:27:42 EST 2021" docOffset="1561" starttimestamp="1614202022735" timestamp="39997" />
  <Command __id="120" _type="PauseCommand" date="Wed Feb 24 16:27:43 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="41246">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="119" _type="MoveCaretCommand" caretOffset="1226" date="Wed Feb 24 16:27:43 EST 2021" docOffset="1523" starttimestamp="1614202022735" timestamp="41246" />
  <Command __id="122" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Wed Feb 24 16:27:44 EST 2021" starttimestamp="1614202022735" timestamp="42040" />
  <Command __id="123" _type="MoveCaretCommand" caretOffset="1164" date="Wed Feb 24 16:27:45 EST 2021" docOffset="1461" starttimestamp="1614202022735" timestamp="42493" />
  <Command __id="125" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Wed Feb 24 16:27:45 EST 2021" starttimestamp="1614202022735" timestamp="42663" />
  <Command __id="126" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Feb 24 16:27:46 EST 2021" starttimestamp="1614202022735" timestamp="43553" />
  <Command __id="127" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:46 EST 2021" starttimestamp="1614202022735" timestamp="43636" />
  <Command __id="128" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:27:46 EST 2021" starttimestamp="1614202022735" timestamp="43720" />
  <Command __id="129" _type="RunCommand" date="Wed Feb 24 16:27:46 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="43772" type="Run" />
  <Command __id="130" _type="RunCommand" date="Wed Feb 24 16:27:46 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="43773" type="Run" />
  <Command __id="131" _type="ShellCommand" date="Wed Feb 24 16:27:46 EST 2021" starttimestamp="1614202022735" timestamp="43869" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="133" _type="MoveCaretCommand" caretOffset="7929" date="Wed Feb 24 16:27:47 EST 2021" docOffset="9410" starttimestamp="1614202022735" timestamp="44272" />
  <Command __id="140" _type="PauseCommand" date="Wed Feb 24 16:27:50 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="48264">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2939]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="139" _type="RunCommand" date="Wed Feb 24 16:27:50 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="48264" type="Run" />
  <Command __id="141" _type="RunCommand" date="Wed Feb 24 16:27:51 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="48265" type="Run" />
  <Command __id="142" _type="RunCommand" date="Wed Feb 24 16:27:51 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="48369" type="Run" />
  <Command __id="143" _type="RunCommand" date="Wed Feb 24 16:27:51 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="48410" type="Run" />
  <Command __id="144" _type="RunCommand" date="Wed Feb 24 16:27:51 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="48618" type="Run" />
  <Command __id="145" _type="RunCommand" date="Wed Feb 24 16:27:51 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="49252" type="Run" />
  <Command __id="146" _type="ConsoleOutput" date="Wed Feb 24 16:27:52 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="49449" type="ConsoleOutput">
    <outputString><![CDATA[Reading 16
Reading 17
Reading 18
Reading 19
Reading 20
Reading 21
Reading 22
Reading 23
Reading 24
Reading 26
Reading 27
Reading 28
Reading 29
Reading 30
Reading 31
Reading 32
Reading 33
Reading pd1
Reading pd2
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="185" _type="PauseCommand" date="Wed Feb 24 16:30:11 EST 2021" range="10s-20s" starttimestamp="1614202022735" timestamp="188804">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17010]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="184" _type="ShellCommand" date="Wed Feb 24 16:30:11 EST 2021" starttimestamp="1614202022735" timestamp="188804" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="187" _type="PauseCommand" date="Wed Feb 24 16:30:33 EST 2021" range="20s-30s" starttimestamp="1614202022735" timestamp="210460">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[21656]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="186" _type="MoveCaretCommand" caretOffset="1156" date="Wed Feb 24 16:30:33 EST 2021" docOffset="2637" starttimestamp="1614202022735" timestamp="210460" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Wed Feb 24 16:27:06 EST 2021" docASTNodeCount="6179" docActiveCodeLength="35259" docExpressionCount="4282" docLength="37725" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="3660">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\AExperimentalReplayer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.concurrent.CountDownLatch;
import analyzer.Analyzer;
import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import fluorite.commands.ConsoleInput;
import fluorite.commands.ConsoleOutputCommand;
import fluorite.commands.CopyCommand;
import fluorite.commands.Delete;
import fluorite.commands.EHExceptionCommand;
import fluorite.commands.EHICommand;
import fluorite.commands.ExceptionCommand;
import fluorite.commands.GetHelpCommand;
import fluorite.commands.InsertStringCommand;
import fluorite.commands.PasteCommand;
import fluorite.commands.PauseCommand;
import fluorite.commands.Replace;
import fluorite.commands.RequestHelpCommand;
import fluorite.commands.RunCommand;
import fluorite.commands.ShellCommand;
import fluorite.commands.WebCommand;
import jdk.internal.jline.internal.InputStreamReader;

public class AExperimentalReplayer extends AReplayer{
	private Map<String, List<List<EHICommand>>> data;
	private static final int THREAD_LIM = 6;
	private static final String TIMESTAMP = "C:\\Users\\Zhizhou\\Desktop\\timestamp for each participant.csv";
	private Map<String, Long[]> timestamps = new HashMap<>();
	
	public AExperimentalReplayer(Analyzer anAnalyzer) {
		super(anAnalyzer);
		analyzer = anAnalyzer;
		data = new HashMap<>();
		System.setProperty("http.agent", "Chrome");
	}
	
	public void readTimestamp() {
		try {
			SimpleDateFormat df = new SimpleDateFormat("HH:mm");
			File timestampFile = new File(TIMESTAMP);
			CSVReader cr = new CSVReader(new FileReader(timestampFile));
			cr.readNext();
			String[] token = null;
			while ((token = cr.readNext()) != null) {
				long startTime = df.parse(token[4]).getTime();
				if (startTime < 10*3600*1000) {
					startTime += 12*3600*1000;
				}
				long endTime = df.parse(token[5]).getTime();
				if (endTime < 10*3600*1000) {
					endTime += 12*3600*1000;
				}
				Long[] times = {startTime, endTime};
				timestamps.put(token[0], times);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void createPauseCommandLogs(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.out.println("Class Folder does not exist");
			System.exit(0);
		}
		File[] students = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		latch = new CountDownLatch(students.length);
		for (int j = 0; j < students.length; j++) {
			File studentFolder  = students[j];
			File logFolder = new File(studentFolder,"Eclipse");
			if (!logFolder.exists()) {
				latch.countDown();
				continue;
			}
			System.out.println("Reading " + studentFolder.getName());
			File[] logs = new File(logFolder.getPath()).listFiles(new FileFilter() {
				public boolean accept(File pathname) {
					return pathname.getName().startsWith("Log") && pathname.getName().endsWith(".xml");
				}
			});
			Thread thread = new Thread(new Runnable() {
				public void run() {
					if (logs == null) {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
						return;
					}
//					if (!studentFolder.getName().equals("16")) {
//						synchronized (this) {
//							threadCount--;
//						}
//						latch.countDown();
//						return;
//					}
					try {
						File browser = new File(studentFolder, "Browser");
						List<EHICommand> webCommands = null;
						Iterator<EHICommand> webCommandIterator = null;
						if (browser.exists() && browser.listFiles().length != 0) {
							webCommands = readWebCommands(browser.listFiles()[0]);
							if (webCommands != null) {
								webCommandIterator = webCommands.iterator();
							}
						}
						EHICommand webCommand = null;
						for (File file : logs) {
							
							long startTimestamp = getLogFileCreationTime(file);
							long logStartTimestamp = startTimestamp;
							long endTimestamp = Long.MAX_VALUE;
							if (timestamps.containsKey(studentFolder.getName())) {
								startTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[0] - 60*ONE_MIN;
								endTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[1] - 59*ONE_MIN;
							}
							List<EHICommand> commands = readOneLogFile(file.getPath(), analyzer);
							if (commands.size() < 2) {
								continue;
							}
							List<EHICommand> newCommands = new ArrayList<>();
							EHICommand last = null;
							EHICommand cur = null;
							if (webCommand == null) {
//								webCommand = maybeAddWebCommandBeforeLogs(webCommandIterator, startTimestamp, newCommands);
								webCommand = webCommandIterator.next();
							}
							long timestamp = 0;
							if (webCommand != null) {
								timestamp = webCommand.getTimestamp() - logStartTimestamp;
							}
							for (EHICommand command : commands) {
								if (command.getTimestamp() + logStartTimestamp < startTimestamp || command.getTimestamp() + logStartTimestamp > endTimestamp) {
									continue;
								}
								command.setStartTimestamp(logStartTimestamp);
								if (cur == null) {
									cur = command;
									newCommands.add(command);
								} else {
									last = cur;
									cur = command;
//									boolean webCommandAdded = false;
//									while(webCommand != null && maybeAddWebCommand(newCommands, last, cur, webCommand, webCommandIterator, startTimestamp)) {
//										webCommandAdded = true;
//										last = webCommand;
//										try {
//											webCommand = webCommandIterator.next();
//										} catch (NoSuchElementException e) {
//											webCommand = null;
//										}
//									} 
//									if (!webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
//									}
									
//									boolean added = false;
									while (webCommand != null && timestamp >= last.getTimestamp() && timestamp <= cur.getTimestamp()) {
										webCommand.setStartTimestamp(logStartTimestamp);
										webCommand.setTimestamp(timestamp);
										maybeAddPauseCommand(newCommands, last,	webCommand);
//										webCommandAdded = true;
										if (webCommandIterator.hasNext()) {
											last = webCommand;
											webCommand = webCommandIterator.next();
											timestamp = webCommand.getTimestamp() - logStartTimestamp;
										} else {
											webCommand = null;
											break;
										}
									}
//									if (webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
////										return webCommand;
//									} else {
										maybeAddPauseCommand(newCommands, last, cur);
//									}
								}
							}
							
							String logContent = XML_START1 + getLogFileCreationTime(file) + XML_START2 + XML_VERSION + XML_START3;
							for (EHICommand c : newCommands) {
								logContent += c.persist();
							}
							logContent += XML_FILE_ENDING;
							try {
								File newLog = new File(file.getParent()+File.separator+"Rest"+File.separator+file.getName());
								if (newLog.exists()) {
									newLog.delete();
								}
								if (newCommands.size() == 0) {
									continue;
								}
								newLog.getParentFile().mkdirs();
								newLog.createNewFile();
								BufferedWriter writer = new BufferedWriter(new FileWriter(newLog, true));
								System.out.println("Writing to file " + newLog.getPath());
								writer.write(logContent);
								writer.close();
								System.out.println("Finished writing to file " + newLog.getPath());
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
						
					} catch (Exception e) {
						e.printStackTrace();
					} finally {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
					}
				}							
			});
			while(true) {
				if (threadCount > THREAD_LIM) {
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
				
				if (threadCount <= THREAD_LIM) {
					synchronized (this) {
						threadCount++;
						thread.start();
						break;
					}
				}
			}
		}
		try {
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		} finally {
			System.exit(0);
		}
	}

	public void analyzeFolder(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.exit(0);
		}
		File[] participants = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		for (int i = 0; i < participants.length; i++) {
			File participantFolder = new File(participants[i],"Eclipse");
			if (!participantFolder.exists()) {
				continue;
			}
			System.out.println("Reading student " + participantFolder.getName());
			data.put(participants[i].getName(), replayLogs(participantFolder.getPath(), analyzer));
		}
		List<List<EHICommand>> nestedCommands = data.get("26");
		for (int i = 0; i < nestedCommands.size(); i++) {
			for (EHICommand command:nestedCommands.get(i)) {
				if (command instanceof ExceptionCommand) {
					System.out.println(command);
				}
			}
		}
		createAssignData("Experiment", folder);
		createDistributionData("Experiment", folder);
		createPrevPauseDistribution("Experiment", folder);
//		createNextPauseDistribution("Experiment", folder);
		createWebStats("Experiment", folder);
		System.exit(0);
	}

	private void createAssignData(String assign, File folder) {
		File csv = new File(folder,assign+".csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"Event.csv");
		FileWriter fw2;
		int[] sum = new int[10];
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = {"Student", "Total Time Spent", "Active Time", "Rest Time", "Wall Clock Time", "Pause", "Web Visit", "Insert", "Delete", "Replace", "Copy", "Paste", "Run", "Exception", "Exception Breakdown"};
			cw.writeNext(header);

			if (csv2.exists()) {
				csv2.delete();
			}
			csv2.createNewFile();
			fw2 = new FileWriter(csv2);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header2 = {"case_id", "timestamp", "activity", "user"};
			cw2.writeNext(header2);

			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + "to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				long[] restTime = restTime(nestedCommands, FIVE_MIN, Long.MAX_VALUE);
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
				retVal.add(convertToHourMinuteSecond(restTime[0]));
				retVal.add(convertToHourMinuteSecond(wallClockTime));
				int[] numCommands = new int[9];
				List<String> breakdownList = new ArrayList<>();
				String list = "";
				for (List<EHICommand> commands : nestedCommands) {
					long lastTime = -1;
					long curTime = -1;
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);

						if (i > 0) {
							lastTime = curTime;
						}
						if (command != null) {
							curTime = command.getTimestamp() + command.getStartTimestamp();
						}
						if (lastTime - curTime > 5*60*1000) {
							writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
						}
						if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
							writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
						} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
							writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
						} else if (command instanceof InsertStringCommand || command instanceof CopyCommand ||
								command instanceof Delete ||
								command instanceof Replace || command instanceof PasteCommand || command instanceof ExceptionCommand ||
								command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
								command instanceof RequestHelpCommand || command instanceof GetHelpCommand) {
							writeOneLine(cw2, assign, curTime, getEventType(command), student);
						}
						if (command instanceof PauseCommand) {
							numCommands[0]++;
							list += "A";
						}
						if (command instanceof WebCommand) {
							numCommands[1]++;
							list += "W";
						}
						if (command instanceof InsertStringCommand) {
							numCommands[2]++;
							list += "I";
						}
						if (command instanceof Delete) {
							numCommands[3]++;
							list += "D";
						}
						if (command instanceof Replace) {
							numCommands[4]++;
							list += "R";
						}
						if (command instanceof CopyCommand) {
							numCommands[5]++;
							list += "C";
						}
						if (command instanceof PasteCommand) {
							numCommands[6]++;
							list += "P";
						}
						if (command instanceof RunCommand) {
							numCommands[7]++;
							list += "U";
						}
						if (command instanceof ExceptionCommand || command instanceof EHExceptionCommand) {
							if(isException(command)) {
								if (command instanceof EHExceptionCommand) {
									ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
									ex.setTimestamp(command.getTimestamp());
									ex.setStartTimestamp(command.getStartTimestamp());
								}
								numCommands[8]++;
								list += "E";
								if (i < commands.size()-1) {
									command = commands.get(i+1);
								} else {
									continue;
								}
								while(!(command instanceof InsertStringCommand || command instanceof Replace 
										|| command instanceof Delete 
										|| command instanceof CopyCommand || command instanceof PasteCommand)) {
									if (command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
											command instanceof RequestHelpCommand || command instanceof GetHelpCommand || command instanceof ExceptionCommand ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_LOST_FOCUS")) ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_CLOSED"))) {
										if (i > 0) {
											lastTime = curTime;
										}
										curTime = command.getTimestamp() + command.getStartTimestamp();
										if (lastTime - curTime > 5*60*1000) {
											writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
										}
										if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
											writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
										} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
											writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
										} else {
											writeOneLine(cw2, assign, curTime, getEventType(command), student);
										}
									}
									if ((command instanceof ExceptionCommand || command instanceof EHExceptionCommand) && isException(command)) {
										if (command instanceof EHExceptionCommand) {
											ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
											ex.setTimestamp(command.getTimestamp());
											ex.setStartTimestamp(command.getStartTimestamp());
											if (i > 0) {
												lastTime = curTime;
											}
											curTime = command.getTimestamp() + command.getStartTimestamp();
											if (lastTime - curTime > 5*60*1000) {
												writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
											}
											writeOneLine(cw2, assign, curTime, getEventType(ex), student);
										}
										numCommands[8]++;
										list += "E";
									}
									i++;
									if (i+1 < commands.size()) {
										command = commands.get(i+1);
									} else {
										break;
									}
								}
								breakdownList.add(countConsecutiveCommands(list));
								list = "";
							}
						}
					}
				}
				if (!list.equals("")) {
					breakdownList.add(countConsecutiveCommands(list));
				}
				for(int i = 0; i < numCommands.length; i++) {
					retVal.add(i+5, numCommands[i]+"");
					sum[i] += numCommands[i];
					if (i > 1) {
						sum[9] += numCommands[i];
					}
				}
				for(int i = 0; i < breakdownList.size(); i++) {
					retVal.add(i+14, breakdownList.get(i));
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			List<String> retVal = new ArrayList<>();
			retVal.add("Sum");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			for (int i = 0; i < sum.length; i++) {
				retVal.add(sum[i]+"");
			}
			String[] nextLine = retVal.toArray(new String[1]);
			cw.writeNext(nextLine);
			fw.close();
			cw.close();

			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void createDistributionData(String assign, File folder) {
		File csv = new File(folder,assign+"Distribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getHeader();
			cw.writeNext(header);
			
			String[] sum = new String[header.length];
			long[] restTimeSum = new long[REST.length];
			sum[0] = "Sum";
			for (int i = 1; i < sum.length; i++) {
				sum[i] = "";
			}
			int[] restSum = new int[REST.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				if (totalTime == 0) {
					continue;
				}
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(wallClockTime));

				long[] restTime = {0,0};
				for (int i = 0; i < REST.length; i++) {
					if (i < REST.length-1) {
						restTime = restTime(nestedCommands, REST[i], REST[i+1]);
					} else {
						restTime = restTime(nestedCommands, REST[i], Long.MAX_VALUE);
					}
					retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
					retVal.add(convertToHourMinuteSecond(restTime[0]));
					retVal.add(restTime[1]+"");
					retVal.add(getTime(restTime[1] == 0? 0:1.0*restTime[2]/restTime[1]));
					restSum[i] += restTime[1];
					restTimeSum[i] += restTime[2];
				}
				
				String[] days = daysSpent(nestedCommands);
				if (days != null) {
					for (int i = 0; i < days.length; i++) {
						retVal.add(days[i]);
					}
				}
				
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			int sum2 = 0;
			for (int i = 0; i < restSum.length; i++) {
				sum[4*i+5] = restSum[i]+"";
				sum2 += restSum[i];
				sum[4*i+6] = getTime(restSum[i] == 0? 0:1.0*restTimeSum[i]/restSum[i]);
			}
			sum[1] = sum2+"";
			cw.writeNext(sum);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createPrevPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"PauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] prev = {"Prev"};
			cw.writeNext(prev);
			String[] header = getPauseHeader();
			cw.writeNext(header);

			String[] nextLine = new String[header.length];
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("prevType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
//				String[] nextLine = retVal.toArray(new String[1]);
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
//			String[] nextLine = new String[header.length];
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			String[] empty = {};
			cw.writeNext(empty);
			String[] next = {"next"};
			cw.writeNext(next);
			sum = new int[PauseCommand.TYPES.length];
			sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createWebStats(String assign, File folder) {
		File csv = new File(folder,assign+"WebStats.csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"WebSearches.csv");
		FileWriter fw2;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			if (csv2.exists()) {
				csv2.delete();
			}
			csv.createNewFile();
			csv2.createNewFile();
			fw = new FileWriter(csv);
			fw2 = new FileWriter(csv2);
			CSVWriter cw = new CSVWriter(fw);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header = {"Title", "URL", "# of Visits", "Provided?"};
			String[] header2 = {"ID", "Search Word", "Title", "URL", "Sequence", "Last Page of the Search?", "Pasted Text"};
			cw.writeNext(header);
			cw2.writeNext(header2);

			Map<String, Integer> urls = new HashMap<>();
			Map<String, String> titles = new HashMap<>();
			Map<String, List<String>> searches = new LinkedHashMap<>();
			Map<String, List<String>> contents = new HashMap<>();
			for (String student : data.keySet()) {
				EHICommand lastSearch = null;
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);
						if (command instanceof WebCommand) {
							String url = command.getDataMap().get("URL");
							if (command.getAttributesMap().get("type").equals("Search")) {
								lastSearch = command;
								if (!searches.containsKey(lastSearch.getDataMap().get("keyword"))) {
									searches.put(lastSearch.getDataMap().get("keyword"), new ArrayList<>());
								}
							} 
							if (command.getAttributesMap().get("type").equals("Search Result") || command.getAttributesMap().get("type").equals("Stack Overflow")) {
								String searchWord = "null";
								if (lastSearch != null) {
									searchWord = lastSearch.getDataMap().get("keyword");
								}
								if (!searches.containsKey(searchWord)) {
									searches.put(searchWord, new ArrayList<>());
								}
								searches.get(searchWord).add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									if (!url.contains("google.com")) {
										list.add(readWebContent(url));
//										list.add(readWebContent2(url));
										contents.put(url, list);
									}
								}
							}
							if (command.getAttributesMap().get("type").contains("Provided")) {
								if (!searches.containsKey("Provided")) {
									searches.put("Provided", new ArrayList<>());
								}
								searches.get("Provided").add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									list.add(readWebContent(url));
//									list.add(readWebContent2(url));
									contents.put(url, list);
								}
							}
							urls.merge(url, 1, Integer::sum);
							titles.put(url, command.getDataMap().get("keyword"));
						}
						if (command instanceof PasteCommand) {
							outer:
							for (int j = i-1; j >= 0 && j > i-20; j--) {
								EHICommand command2 = commands.get(j);
								String pastedText = "";
								if (command2 instanceof InsertStringCommand || command2 instanceof Replace) {
									if (command2 instanceof InsertStringCommand) {
										pastedText = command2.getDataMap().get(InsertStringCommand.XML_Data_Tag);
									} else {
										pastedText = command2.getDataMap().get("insertedText");
									}
									if (pastedText.length() > 10) {
										for (String url : contents.keySet()) {
											List<String> list = contents.get(url);
											String pastedText2 = pastedText.replaceAll("\\s", "");
											if (list.get(0).contains(pastedText2)) {
												for (int k = 1; k < list.size(); k++) {
													if (list.get(k).replaceAll("\\s",  "").equals(pastedText2)) {
														break outer;
													}
												}
												list.add(pastedText);
												break outer;
											}
										}
									}
								}
							}
						}
					}
				}
				for (String s : searches.keySet()) {
					List<String> nextLine = new ArrayList<>();
					nextLine.add(student);
					nextLine.add(s);
					if (searches.get(s).size() == 0) {
						nextLine.add("No Result");
						cw2.writeNext(nextLine.toArray(new String[1]));
						continue;
					}
					for (int i = 0; i < searches.get(s).size(); i++) {
						String url = searches.get(s).get(i);
						nextLine.add(titles.get(url));
						nextLine.add(url);
						nextLine.add(i+1+"");
						nextLine.add(i == searches.get(s).size()-1 ? "Last" : "");
						if (contents.containsKey(url)) {
							List<String> list = contents.get(url);
							for (int j = 1; j < list.size(); j++) {
								nextLine.add(list.get(j));
							}
						}
						cw2.writeNext(nextLine.toArray(new String[1]));
						nextLine = new ArrayList<>();
						nextLine.add(student);
						nextLine.add("");
					}
				}
				searches.clear();
			}
			Map<String, Integer> sortedMap = new LinkedHashMap<>();
			urls.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));
			for (String s : sortedMap.keySet()) {
				String[] nextLine = {titles.get(s), s, sortedMap.get(s)+"", isProvided(s)? "Provided":""};
				cw.writeNext(nextLine);
			}
			fw.close();
			cw.close();
			
			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createNextPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"NextPauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getPauseHeader();
			cw.writeNext(header);
			
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			String[] nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private String[] getPauseHeader() {
		List<String> retVal = new ArrayList<>();
		retVal.add("ID");
		for (String s : PauseCommand.TYPES) {
			retVal.add(s);
			retVal.add("Avg. Time");
//			retVal.add("Longest Time");
//			retVal.add("Shortest Time");
		}
		return retVal.toArray(new String[1]);
	}
	
	private void writeOneLine(CSVWriter cw, String assign, long time, String type, String pid) {
		String[] nextLine = new String[4]; 
		nextLine[0] = assign + " " + pid;
		Date date = new Date(time);
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		nextLine[1] = df.format(date);
		nextLine[2] = type;
		nextLine[3] = pid;
		if (nextLine != null) {
			cw.writeNext(nextLine);
		}
	}
	
	public List<List<EHICommand>> replayLogs(String projectPath, Analyzer analyzer){
		List<List<EHICommand>> nestedCommands = analyzer.convertXMLLogToObjects(projectPath+File.separator+"Rest");
		sortNestedCommands(nestedCommands);
		return nestedCommands;
	}

	private void maybeAddPauseCommand(List<EHICommand> newCommands, EHICommand last, EHICommand cur) {
		long rest = cur.getTimestamp()-last.getTimestamp();
		if (rest >= 1*ONE_SECOND) {
			String range = "";
			if (rest < 2*ONE_SECOND) {
				range = "1s-2s";
			} else if (rest < 5*ONE_SECOND) {
				range = "2s-5s";
			} else if (rest < 10*ONE_SECOND) {
				range = "5s-10s";
			} else if (rest < 20*ONE_SECOND) {
				range = "10s-20s";
			} else if (rest < 30*ONE_SECOND) {
				range = "20s-30s";
			} else if (rest < ONE_MIN) {
				range = "30s-1m";
			} else if (rest < TWO_MIN) {
				range = "1m-2m";
			} else if (rest < FIVE_MIN) {
				range = "2m-5m";
			} else if (rest < TEN_MIN) {
				range = "5m-10m";
			} else if (rest < 3*TEN_MIN) {
				range = "10m-30m";
			} else if (rest < 6*TEN_MIN) {
				range = "30m-60m";
			} else {
				range = ">1h";
			}
			PauseCommand rCommnad = new PauseCommand(last, cur, rest, range);
			rCommnad.setStartTimestamp(last.getStartTimestamp());
			rCommnad.setTimestamp(last.getTimestamp()+1);
			newCommands.add(rCommnad);
		} 
		newCommands.add(cur);
	}
	
	private EHICommand maybeAddWebCommandBeforeLogs(Iterator<EHICommand> iterator, long startTimestamp, List<EHICommand> commands) {
		if (iterator == null) {
			return null;
		}
		EHICommand webCommand = null;
		long timestamp = 0;
		while((webCommand = iterator.next()) != null && (timestamp = webCommand.getTimestamp() - startTimestamp) < 0) {
			webCommand.setStartTimestamp(0);
			webCommand.setTimestamp(timestamp);
			commands.add(webCommand);
		}
		return webCommand;
	}

	public String readWebContent(String aURL) {
		String content = "";
		Scanner sc = null;
		try {
			URL url = new URL(aURL);
//			System.out.println("accessing webpage " + aURL);
			URLConnection con = url.openConnection();
			con.setReadTimeout(5000);
			sc = new Scanner(con.getInputStream());
			StringBuffer sb = new StringBuffer();
			while (sc.hasNext()) {
				sb.append(sc.next());
			}
			content = sb.toString();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (sc != null) {
				sc.close();
			}
		}
		if (content.equals("") && !aURL.substring(0,5).equals("https")) {
			aURL = aURL.replaceFirst("http", "https");
			return readWebContent(aURL);
		}
		
//		System.out.println("webpage content " + aURL + content);
//		return content.replaceAll("<[^>]*>", "").replaceAll("\\s", "");
		return content;
	}
	
	private boolean isProvided(String s) {
		for (String url : WebCommand.PROVIDED_URL) {
			if (s.equals(url)) {
				return true;
			}
		}
		return false;
	}
	
//	public String readWebContent2(String url){
//		try {
//			HttpURLConnection httpClient =(HttpURLConnection) new URL(url).openConnection();
//			httpClient.setRequestMethod("GET");
//			httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//			int responseCode = httpClient.getResponseCode();
//			try (BufferedReader in = new BufferedReader(
//					new InputStreamReader(httpClient.getInputStream()))) {
//				StringBuilder response = new StringBuilder();
//				String line;
//				while ((line = in.readLine()) != null) {
//					response.append(line);
//				}
//				if (response.toString().equals("") && !url.substring(0,5).equals("https")) {
//					url = url.replaceFirst("http", "https");
//					return readWebContent2(url);
//				}	
//				return response.toString();
//			}
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		return "";
//	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="50" _type="Insert" date="Wed Feb 24 16:27:18 EST 2021" docASTNodeCount="5665" docActiveCodeLength="35263" docExpressionCount="3923" docLength="37729" length="4" offset="4002" repeat="4" starttimestamp="1614202022735" timestamp="15361" timestamp2="16121">
    <text><![CDATA[ || ]]></text>
  </DocumentChange>
  <DocumentChange __id="58" _type="Insert" date="Wed Feb 24 16:27:21 EST 2021" docASTNodeCount="6181" docActiveCodeLength="35267" docExpressionCount="4284" docLength="37733" length="4" offset="4006" repeat="4" starttimestamp="1614202022735" timestamp="18644" timestamp2="20014">
    <text><![CDATA[stud]]></text>
  </DocumentChange>
  <DocumentChange __id="66" _type="Replace" date="Wed Feb 24 16:27:23 EST 2021" docASTNodeCount="6181" docActiveCodeLength="35276" docExpressionCount="4284" docLength="37742" endLine="118" insertionLength="13" int_docASTNodeCount="5665" int_docActiveCodeLength="35263" int_docExpressionCount="3923" int_docLength="37729" length="4" offset="4006" startLine="118" starttimestamp="1614202022735" timestamp="20861">
    <deletedText><![CDATA[stud]]></deletedText>
    <insertedText><![CDATA[studentFolder]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="68" _type="Insert" date="Wed Feb 24 16:27:23 EST 2021" docASTNodeCount="6183" docActiveCodeLength="35282" docExpressionCount="4286" docLength="37748" length="6" offset="4019" repeat="6" starttimestamp="1614202022735" timestamp="21096" timestamp2="21860">
    <text><![CDATA[.getna]]></text>
  </DocumentChange>
  <DocumentChange __id="77" _type="Replace" date="Wed Feb 24 16:27:24 EST 2021" docASTNodeCount="6183" docActiveCodeLength="35286" docExpressionCount="4286" docLength="37752" endLine="118" insertionLength="9" int_docASTNodeCount="6183" int_docActiveCodeLength="35277" int_docExpressionCount="4285" int_docLength="37743" length="5" offset="4020" startLine="118" starttimestamp="1614202022735" timestamp="22009">
    <deletedText><![CDATA[getna]]></deletedText>
    <insertedText><![CDATA[getName()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="79" _type="Insert" date="Wed Feb 24 16:27:25 EST 2021" docASTNodeCount="6185" docActiveCodeLength="35289" docExpressionCount="4288" docLength="37755" length="3" offset="4029" repeat="3" starttimestamp="1614202022735" timestamp="22316" timestamp2="23476">
    <text><![CDATA[.eq]]></text>
  </DocumentChange>
  <DocumentChange __id="86" _type="Replace" date="Wed Feb 24 16:27:26 EST 2021" docASTNodeCount="6186" docActiveCodeLength="35303" docExpressionCount="4289" docLength="37769" endLine="118" insertionLength="16" int_docASTNodeCount="6185" int_docActiveCodeLength="35287" int_docExpressionCount="4288" int_docLength="37753" length="2" offset="4030" startLine="118" starttimestamp="1614202022735" timestamp="23688">
    <deletedText><![CDATA[eq]]></deletedText>
    <insertedText><![CDATA[equals(anObject)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="88" _type="Replace" date="Wed Feb 24 16:27:27 EST 2021" docASTNodeCount="5475" docActiveCodeLength="35296" docExpressionCount="3795" docLength="37762" endLine="118" insertionLength="1" int_docASTNodeCount="6185" int_docActiveCodeLength="35295" int_docExpressionCount="4288" int_docLength="37761" length="8" offset="4037" startLine="118" starttimestamp="1614202022735" timestamp="24310">
    <deletedText><![CDATA[anObject]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="90" _type="Insert" date="Wed Feb 24 16:27:27 EST 2021" docASTNodeCount="5475" docActiveCodeLength="35299" docExpressionCount="3795" docLength="37765" length="3" offset="4038" repeat="3" starttimestamp="1614202022735" timestamp="24567" timestamp2="25121">
    <text><![CDATA[22:]]></text>
  </DocumentChange>
  <DocumentChange __id="96" _type="Delete" date="Wed Feb 24 16:27:28 EST 2021" docASTNodeCount="5475" docActiveCodeLength="35298" docExpressionCount="3795" docLength="37764" endLine="118" length="1" offset="4040" startLine="118" starttimestamp="1614202022735" timestamp="25865">
    <text><![CDATA[:]]></text>
  </DocumentChange>
  <DocumentChange __id="98" _type="Insert" date="Wed Feb 24 16:27:28 EST 2021" docASTNodeCount="6186" docActiveCodeLength="35299" docExpressionCount="4289" docLength="37765" length="1" offset="4040" starttimestamp="1614202022735" timestamp="26053">
    <text><![CDATA["]]></text>
  </DocumentChange>
  <DocumentChange __id="103" _type="Insert" date="Wed Feb 24 16:27:30 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35300" docExpressionCount="4290" docLength="37766" length="1" offset="4006" starttimestamp="1614202022735" timestamp="27759">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <Command __id="116" _type="DiffBasedFileOpenCommand" date="Wed Feb 24 16:27:42 EST 2021" docASTNodeCount="150" docActiveCodeLength="1197" docExpressionCount="90" docLength="2822" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="39769">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\Driver.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;

import org.json.JSONException;
import org.json.JSONObject;

import analyzer.AnAnalyzer;
import analyzer.Analyzer;

public class Driver {
	private static String classFolderPath = "E:\\testdata\\Fall2020";
	private static String experimentalClassFolderPath = "C:\\Users\\Zhizhou\\OneDrive\\UNC CH\\Junior 1st Sem\\hermes\\git\\Hermes\\Hermes\\data\\ExperimentalData";
	private static Analyzer analyzer;
	private static AReplayer replayer;
	private static int timeout = 5000;
	private static String url = "http://stackoverflow.com/questions/4186835/how-to-add-multiple-components-to-a-jframe";
	
	public static void main(String[] args) {
		analyzer = new AnAnalyzer();
//		replayer = new AReplayer(analyzer);
//		analyzer.addAnalyzerListener(replayer);	
//		replayer.createPauseCommandLogs(classFolderPath);
//		replayer.analyzeFolder(classFolderPath);
		replayer = new AExperimentalReplayer(analyzer);
		((AExperimentalReplayer)replayer).readTimestamp();
//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);
//		String s2 = ((AExperimentalReplayer)replayer).readWebContent2(url);
//		System.out.println(s1.equals(s2));
//		analyzer.addAnalyzerListener(replayer);	
//		replayer.createPauseCommandLogs(experimentalClassFolderPath);
		replayer.analyzeFolder(experimentalClassFolderPath);
//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);
//		String s2 = "";
//		System.out.println();
//		try {
//			s2 = get(url);
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		System.out.println(s1.equals(s2));
//		Date d = new Date(1379108460000L);
//		System.out.println(d);
	}
	
//	public static String get(String urlString) throws Exception{
//         HttpURLConnection httpClient =(HttpURLConnection) new URL(urlString).openConnection();
//        httpClient.setRequestMethod("GET");
//        httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//        int responseCode = httpClient.getResponseCode();
//        System.out.println("Response Code : " + responseCode);
//        try (BufferedReader in = new BufferedReader(
//                new InputStreamReader(httpClient.getInputStream()))) {
//            StringBuilder response = new StringBuilder();
//            String line;
//            while ((line = in.readLine()) != null) {
//                response.append(line);
//            }
//            System.out.println(response.toString());
//            return response.toString();
//        }
//	}
}

















]]></snapshot>
  </Command>
  <DocumentChange __id="121" _type="Insert" date="Wed Feb 24 16:27:44 EST 2021" docASTNodeCount="145" docActiveCodeLength="1143" docExpressionCount="86" docLength="2824" length="2" offset="1507" starttimestamp="1614202022735" timestamp="42014">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="124" _type="Delete" date="Wed Feb 24 16:27:45 EST 2021" docASTNodeCount="150" docActiveCodeLength="1206" docExpressionCount="90" docLength="2822" endLine="36" length="2" offset="1440" startLine="36" starttimestamp="1614202022735" timestamp="42639">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="132" _type="DiffBasedFileOpenCommand" date="Wed Feb 24 16:27:46 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35300" docExpressionCount="4290" docLength="37766" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="44073">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\AExperimentalReplayer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package logAnalyzer;¶¶import java.io.BufferedWriter;¶import java.io.File;¶import java.io.FileFilter;¶import java.io.FileNotFoundException;¶import java.io.FileReader;¶import java.io.FileWriter;¶import java.io.IOException;¶import java.net.MalformedURLException;¶import java.net.URL;¶import java.net.URLConnection;¶import java.text.DateFormat;¶import java.text.ParseException;¶import java.text.SimpleDateFormat;¶import java.util.ArrayList;¶import java.util.Comparator;¶import java.util.Date;¶import java.util.HashMap;¶import java.util.Iterator;¶import java.util.LinkedHashMap;¶import java.util.List;¶import java.util.Map;¶import java.util.Scanner;¶import java.util.concurrent.CountDownLatch;¶import analyzer.Analyzer;¶import au.com.bytecode.opencsv.CSVReader;¶import au.com.bytecode.opencsv.CSVWriter;¶import fluorite.commands.ConsoleInput;¶import fluorite.commands.ConsoleOutputCommand;¶import fluorite.commands.CopyCommand;¶import fluorite.commands.Delete;¶import fluorite.commands.EHExceptionCommand;¶import fluorite.commands.EHICommand;¶import fluorite.commands.ExceptionCommand;¶import fluorite.commands.GetHelpCommand;¶import fluorite.commands.InsertStringCommand;¶import fluorite.commands.PasteCommand;¶import fluorite.commands.PauseCommand;¶import fluorite.commands.Replace;¶import fluorite.commands.RequestHelpCommand;¶import fluorite.commands.RunCommand;¶import fluorite.commands.ShellCommand;¶import fluorite.commands.WebCommand;¶import jdk.internal.jline.internal.InputStreamReader;¶¶public class AExperimentalReplayer extends AReplayer{¶	private Map<String, List<List<EHICommand>>> data;¶	private static final int THREAD_LIM = 6;¶	private static final String TIMESTAMP = "C:\\Users\\Zhizhou\\Desktop\\timestamp for each participant.csv";¶	private Map<String, Long[]> timestamps = new HashMap<>();¶	¶	public AExperimentalReplayer(Analyzer anAnalyzer) {¶		super(anAnalyzer);¶		analyzer = anAnalyzer;¶		data = new HashMap<>();¶		System.setProperty("http.agent", "Chrome");¶	}¶	¶	public void readTimestamp() {¶		try {¶			SimpleDateFormat df = new SimpleDateFormat("HH:mm");¶			File timestampFile = new File(TIMESTAMP);¶			CSVReader cr = new CSVReader(new FileReader(timestampFile));¶			cr.readNext();¶			String[] token = null;¶			while ((token = cr.readNext()) != null) {¶				long startTime = df.parse(token[4]).getTime();¶				if (startTime < 10*3600*1000) {¶					startTime += 12*3600*1000;¶				}¶				long endTime = df.parse(token[5]).getTime();¶				if (endTime < 10*3600*1000) {¶					endTime += 12*3600*1000;¶				}¶				Long[] times = {startTime, endTime};¶				timestamps.put(token[0], times);¶			}¶		} catch (FileNotFoundException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		} catch (IOException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		} catch (ParseException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶	}¶	¶	public void createPauseCommandLogs(String classFolderPath) {¶		File folder = new File(classFolderPath);¶		if (!folder.exists()) {¶			System.out.println("Class Folder does not exist");¶			System.exit(0);¶		}¶		File[] students = folder.listFiles(new FileFilter() {¶			public boolean accept(File pathname) {¶				return pathname.isDirectory();¶			}¶		});¶		latch = new CountDownLatch(students.length);¶		for (int j = 0; j < students.length; j++) {¶			File studentFolder  = students[j];¶			File logFolder = new File(studentFolder,"Eclipse");¶			if (!logFolder.exists()) {¶				latch.countDown();¶				continue;¶			}¶			System.out.println("Reading " + studentFolder.getName());¶			File[] logs = new File(logFolder.getPath()).listFiles(new FileFilter() {¶				public boolean accept(File pathname) {¶					return pathname.getName().startsWith("Log") && pathname.getName().endsWith(".xml");¶				}¶			});¶			Thread thread = new Thread(new Runnable() {¶				public void run() {¶					if (logs == null"), Diff(INSERT," || !studentFolder.getName().equals("22")"), Diff(EQUAL,") {¶						synchronized (this) {¶							threadCount--;¶						}¶						latch.countDown();¶						return;¶					}¶//					if (!studentFolder.getName().equals("16")) {¶//						synchronized (this) {¶//							threadCount--;¶//						}¶//						latch.countDown();¶//						return;¶//					}¶					try {¶						File browser = new File(studentFolder, "Browser");¶						List<EHICommand> webCommands = null;¶						Iterator<EHICommand> webCommandIterator = null;¶						if (browser.exists() && browser.listFiles().length != 0) {¶							webCommands = readWebCommands(browser.listFiles()[0]);¶							if (webCommands != null) {¶								webCommandIterator = webCommands.iterator();¶							}¶						}¶						EHICommand webCommand = null;¶						for (File file : logs) {¶							¶							long startTimestamp = getLogFileCreationTime(file);¶							long logStartTimestamp = startTimestamp;¶							long endTimestamp = Long.MAX_VALUE;¶							if (timestamps.containsKey(studentFolder.getName())) {¶								startTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[0] - 60*ONE_MIN;¶								endTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[1] - 59*ONE_MIN;¶							}¶							List<EHICommand> commands = readOneLogFile(file.getPath(), analyzer);¶							if (commands.size() < 2) {¶								continue;¶							}¶							List<EHICommand> newCommands = new ArrayList<>();¶							EHICommand last = null;¶							EHICommand cur = null;¶							if (webCommand == null) {¶//								webCommand = maybeAddWebCommandBeforeLogs(webCommandIterator, startTimestamp, newCommands);¶								webCommand = webCommandIterator.next();¶							}¶							long timestamp = 0;¶							if (webCommand != null) {¶								timestamp = webCommand.getTimestamp() - logStartTimestamp;¶							}¶							for (EHICommand command : commands) {¶								if (command.getTimestamp() + logStartTimestamp < startTimestamp || command.getTimestamp() + logStartTimestamp > endTimestamp) {¶									continue;¶								}¶								command.setStartTimestamp(logStartTimestamp);¶								if (cur == null) {¶									cur = command;¶									newCommands.add(command);¶								} else {¶									last = cur;¶									cur = command;¶//									boolean webCommandAdded = false;¶//									while(webCommand != null && maybeAddWebCommand(newCommands, last, cur, webCommand, webCommandIterator, startTimestamp)) {¶//										webCommandAdded = true;¶//										last = webCommand;¶//										try {¶//											webCommand = webCommandIterator.next();¶//										} catch (NoSuchElementException e) {¶//											webCommand = null;¶//										}¶//									} ¶//									if (!webCommandAdded) {¶//										maybeAddPauseCommand(newCommands, last, cur);¶//									}¶									¶//									boolean added = false;¶									while (webCommand != null && timestamp >= last.getTimestamp() && timestamp <= cur.getTimestamp()) {¶										webCommand.setStartTimestamp(logStartTimestamp);¶										webCommand.setTimestamp(timestamp);¶										maybeAddPauseCommand(newCommands, last,	webCommand);¶//										webCommandAdded = true;¶										if (webCommandIterator.hasNext()) {¶											last = webCommand;¶											webCommand = webCommandIterator.next();¶											timestamp = webCommand.getTimestamp() - logStartTimestamp;¶										} else {¶											webCommand = null;¶											break;¶										}¶									}¶//									if (webCommandAdded) {¶//										maybeAddPauseCommand(newCommands, last, cur);¶////										return webCommand;¶//									} else {¶										maybeAddPauseCommand(newCommands, last, cur);¶//									}¶								}¶							}¶							¶							String logContent = XML_START1 + getLogFileCreationTime(file) + XML_START2 + XML_VERSION + XML_START3;¶							for (EHICommand c : newCommands) {¶								logContent += c.persist();¶							}¶							logContent += XML_FILE_ENDING;¶							try {¶								File newLog = new File(file.getParent()+File.separator+"Rest"+File.separator+file.getName());¶								if (newLog.exists()) {¶									newLog.delete();¶								}¶								if (newCommands.size() == 0) {¶									continue;¶								}¶								newLog.getParentFile().mkdirs();¶								newLog.createNewFile();¶								BufferedWriter writer = new BufferedWriter(new FileWriter(newLog, true));¶								System.out.println("Writing to file " + newLog.getPath());¶								writer.write(logContent);¶								writer.close();¶								System.out.println("Finished writing to file " + newLog.getPath());¶							} catch (IOException e) {¶								e.printStackTrace();¶							}¶						}¶						¶					} catch (Exception e) {¶						e.printStackTrace();¶					} finally {¶						synchronized (this) {¶							threadCount--;¶						}¶						latch.countDown();¶					}¶				}							¶			});¶			while(true) {¶				if (threadCount > THREAD_LIM) {¶					try {¶						Thread.sleep(1000);¶					} catch (InterruptedException e) {¶						e.printStackTrace();¶					}¶				}¶				¶				if (threadCount <= THREAD_LIM) {¶					synchronized (this) {¶						threadCount++;¶						thread.start();¶						break;¶					}¶				}¶			}¶		}¶		try {¶			latch.await();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		} finally {¶			System.exit(0);¶		}¶	}¶¶	public void analyzeFolder(String classFolderPath) {¶		File folder = new File(classFolderPath);¶		if (!folder.exists()) {¶			System.exit(0);¶		}¶		File[] participants = folder.listFiles(new FileFilter() {¶			public boolean accept(File pathname) {¶				return pathname.isDirectory();¶			}¶		});¶		for (int i = 0; i < participants.length; i++) {¶			File participantFolder = new File(participants[i],"Eclipse");¶			if (!participantFolder.exists()) {¶				continue;¶			}¶			System.out.println("Reading student " + participantFolder.getName());¶			data.put(participants[i].getName(), replayLogs(participantFolder.getPath(), analyzer));¶		}¶		List<List<EHICommand>> nestedCommands = data.get("26");¶		for (int i = 0; i < nestedCommands.size(); i++) {¶			for (EHICommand command:nestedCommands.get(i)) {¶				if (command instanceof ExceptionCommand) {¶					System.out.println(command);¶				}¶			}¶		}¶		createAssignData("Experiment", folder);¶		createDistributionData("Experiment", folder);¶		createPrevPauseDistribution("Experiment", folder);¶//		createNextPauseDistribution("Experiment", folder);¶		createWebStats("Experiment", folder);¶		System.exit(0);¶	}¶¶	private void createAssignData(String assign, File folder) {¶		File csv = new File(folder,assign+".csv");¶		FileWriter fw;¶		File csv2 = new File(folder,assign+"Event.csv");¶		FileWriter fw2;¶		int[] sum = new int[10];¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] header = {"Student", "Total Time Spent", "Active Time", "Rest Time", "Wall Clock Time", "Pause", "Web Visit", "Insert", "Delete", "Replace", "Copy", "Paste", "Run", "Exception", "Exception Breakdown"};¶			cw.writeNext(header);¶¶			if (csv2.exists()) {¶				csv2.delete();¶			}¶			csv2.createNewFile();¶			fw2 = new FileWriter(csv2);¶			CSVWriter cw2 = new CSVWriter(fw2);¶			String[] header2 = {"case_id", "timestamp", "activity", "user"};¶			cw2.writeNext(header2);¶¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + "to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				retVal.add(student);¶				long totalTime = totalTimeSpent(nestedCommands);¶				long[] restTime = restTime(nestedCommands, FIVE_MIN, Long.MAX_VALUE);¶				long wallClockTime = wallClockTime(nestedCommands);¶				retVal.add(convertToHourMinuteSecond(totalTime));¶				retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));¶				retVal.add(convertToHourMinuteSecond(restTime[0]));¶				retVal.add(convertToHourMinuteSecond(wallClockTime));¶				int[] numCommands = new int[9];¶				List<String> breakdownList = new ArrayList<>();¶				String list = "";¶				for (List<EHICommand> commands : nestedCommands) {¶					long lastTime = -1;¶					long curTime = -1;¶					for (int i = 0; i < commands.size(); i++) {¶						EHICommand command = commands.get(i);¶¶						if (i > 0) {¶							lastTime = curTime;¶						}¶						if (command != null) {¶							curTime = command.getTimestamp() + command.getStartTimestamp();¶						}¶						if (lastTime - curTime > 5*60*1000) {¶							writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);¶						}¶						if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {¶							writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);¶						} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {¶							writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);¶						} else if (command instanceof InsertStringCommand || command instanceof CopyCommand ||¶								command instanceof Delete ||¶								command instanceof Replace || command instanceof PasteCommand || command instanceof ExceptionCommand ||¶								command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||¶								command instanceof RequestHelpCommand || command instanceof GetHelpCommand) {¶							writeOneLine(cw2, assign, curTime, getEventType(command), student);¶						}¶						if (command instanceof PauseCommand) {¶							numCommands[0]++;¶							list += "A";¶						}¶						if (command instanceof WebCommand) {¶							numCommands[1]++;¶							list += "W";¶						}¶						if (command instanceof InsertStringCommand) {¶							numCommands[2]++;¶							list += "I";¶						}¶						if (command instanceof Delete) {¶							numCommands[3]++;¶							list += "D";¶						}¶						if (command instanceof Replace) {¶							numCommands[4]++;¶							list += "R";¶						}¶						if (command instanceof CopyCommand) {¶							numCommands[5]++;¶							list += "C";¶						}¶						if (command instanceof PasteCommand) {¶							numCommands[6]++;¶							list += "P";¶						}¶						if (command instanceof RunCommand) {¶							numCommands[7]++;¶							list += "U";¶						}¶						if (command instanceof ExceptionCommand || command instanceof EHExceptionCommand) {¶							if(isException(command)) {¶								if (command instanceof EHExceptionCommand) {¶									ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");¶									ex.setTimestamp(command.getTimestamp());¶									ex.setStartTimestamp(command.getStartTimestamp());¶								}¶								numCommands[8]++;¶								list += "E";¶								if (i < commands.size()-1) {¶									command = commands.get(i+1);¶								} else {¶									continue;¶								}¶								while(!(command instanceof InsertStringCommand || command instanceof Replace ¶										|| command instanceof Delete ¶										|| command instanceof CopyCommand || command instanceof PasteCommand)) {¶									if (command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||¶											command instanceof RequestHelpCommand || command instanceof GetHelpCommand || command instanceof ExceptionCommand ||¶											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_LOST_FOCUS")) ||¶											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_CLOSED"))) {¶										if (i > 0) {¶											lastTime = curTime;¶										}¶										curTime = command.getTimestamp() + command.getStartTimestamp();¶										if (lastTime - curTime > 5*60*1000) {¶											writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);¶										}¶										if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {¶											writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);¶										} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {¶											writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);¶										} else {¶											writeOneLine(cw2, assign, curTime, getEventType(command), student);¶										}¶									}¶									if ((command instanceof ExceptionCommand || command instanceof EHExceptionCommand) && isException(command)) {¶										if (command instanceof EHExceptionCommand) {¶											ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");¶											ex.setTimestamp(command.getTimestamp());¶											ex.setStartTimestamp(command.getStartTimestamp());¶											if (i > 0) {¶												lastTime = curTime;¶											}¶											curTime = command.getTimestamp() + command.getStartTimestamp();¶											if (lastTime - curTime > 5*60*1000) {¶												writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);¶											}¶											writeOneLine(cw2, assign, curTime, getEventType(ex), student);¶										}¶										numCommands[8]++;¶										list += "E";¶									}¶									i++;¶									if (i+1 < commands.size()) {¶										command = commands.get(i+1);¶									} else {¶										break;¶									}¶								}¶								breakdownList.add(countConsecutiveCommands(list));¶								list = "";¶							}¶						}¶					}¶				}¶				if (!list.equals("")) {¶					breakdownList.add(countConsecutiveCommands(list));¶				}¶				for(int i = 0; i < numCommands.length; i++) {¶					retVal.add(i+5, numCommands[i]+"");¶					sum[i] += numCommands[i];¶					if (i > 1) {¶						sum[9] += numCommands[i];¶					}¶				}¶				for(int i = 0; i < breakdownList.size(); i++) {¶					retVal.add(i+14, breakdownList.get(i));¶				}¶				String[] nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			List<String> retVal = new ArrayList<>();¶			retVal.add("Sum");¶			retVal.add("");¶			retVal.add("");¶			retVal.add("");¶			retVal.add("");¶			for (int i = 0; i < sum.length; i++) {¶				retVal.add(sum[i]+"");¶			}¶			String[] nextLine = retVal.toArray(new String[1]);¶			cw.writeNext(nextLine);¶			fw.close();¶			cw.close();¶¶			fw2.close();¶			cw2.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	private void createDistributionData(String assign, File folder) {¶		File csv = new File(folder,assign+"Distribution.csv");¶		FileWriter fw;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] header = getHeader();¶			cw.writeNext(header);¶			¶			String[] sum = new String[header.length];¶			long[] restTimeSum = new long[REST.length];¶			sum[0] = "Sum";¶			for (int i = 1; i < sum.length; i++) {¶				sum[i] = "";¶			}¶			int[] restSum = new int[REST.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				retVal.add(student);¶				long totalTime = totalTimeSpent(nestedCommands);¶				if (totalTime == 0) {¶					continue;¶				}¶				long wallClockTime = wallClockTime(nestedCommands);¶				retVal.add(convertToHourMinuteSecond(totalTime));¶				retVal.add(convertToHourMinuteSecond(wallClockTime));¶¶				long[] restTime = {0,0};¶				for (int i = 0; i < REST.length; i++) {¶					if (i < REST.length-1) {¶						restTime = restTime(nestedCommands, REST[i], REST[i+1]);¶					} else {¶						restTime = restTime(nestedCommands, REST[i], Long.MAX_VALUE);¶					}¶					retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));¶					retVal.add(convertToHourMinuteSecond(restTime[0]));¶					retVal.add(restTime[1]+"");¶					retVal.add(getTime(restTime[1] == 0? 0:1.0*restTime[2]/restTime[1]));¶					restSum[i] += restTime[1];¶					restTimeSum[i] += restTime[2];¶				}¶				¶				String[] days = daysSpent(nestedCommands);¶				if (days != null) {¶					for (int i = 0; i < days.length; i++) {¶						retVal.add(days[i]);¶					}¶				}¶				¶				String[] nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			int sum2 = 0;¶			for (int i = 0; i < restSum.length; i++) {¶				sum[4*i+5] = restSum[i]+"";¶				sum2 += restSum[i];¶				sum[4*i+6] = getTime(restSum[i] == 0? 0:1.0*restTimeSum[i]/restSum[i]);¶			}¶			sum[1] = sum2+"";¶			cw.writeNext(sum);¶			fw.close();¶			cw.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private void createPrevPauseDistribution(String assign, File folder) {¶		File csv = new File(folder,assign+"PauseDistribution.csv");¶		FileWriter fw;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] prev = {"Prev"};¶			cw.writeNext(prev);¶			String[] header = getPauseHeader();¶			cw.writeNext(header);¶¶			String[] nextLine = new String[header.length];¶			int[] sum = new int[PauseCommand.TYPES.length];¶			long[] sumPause = new long[sum.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				int[] numCommmands = new int[sum.length];¶				long[] pauseTimes = new long[sum.length];¶				retVal.add(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (EHICommand command : commands) {¶						if (command instanceof PauseCommand) {¶							for (int i = 0; i < sum.length; i++) {¶								if (command.getDataMap().get("prevType").equals(PauseCommand.TYPES[i])) {¶									numCommmands[i]++;¶									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); ¶									break;¶								}¶							}¶						}¶					}¶				}¶				for (int i = 0; i < sum.length; i++) {¶					retVal.add(numCommmands[i]+"");¶					if (numCommmands[i] == 0) {¶						retVal.add("0");¶					} else {¶						retVal.add(pauseTimes[i]/numCommmands[i]+"");¶					}¶					sum[i] += numCommmands[i];¶					sumPause[i] += pauseTimes[i];¶				}¶//				String[] nextLine = retVal.toArray(new String[1]);¶				nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶//			String[] nextLine = new String[header.length];¶			nextLine = new String[header.length];¶			nextLine[0] = "Sum";¶			for (int i = 0; i < sum.length; i++) {¶				nextLine[1+i*2] = sum[i]+"";¶				if (sum[i] == 0) {¶					nextLine[2+i*2] = 0+"";¶				} else {¶					nextLine[2+i*2] = sumPause[i]/sum[i]+"";¶				}¶			}¶			cw.writeNext(nextLine);¶			¶			String[] empty = {};¶			cw.writeNext(empty);¶			String[] next = {"next"};¶			cw.writeNext(next);¶			sum = new int[PauseCommand.TYPES.length];¶			sumPause = new long[sum.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				int[] numCommmands = new int[sum.length];¶				long[] pauseTimes = new long[sum.length];¶				retVal.add(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (EHICommand command : commands) {¶						if (command instanceof PauseCommand) {¶							for (int i = 0; i < sum.length; i++) {¶								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {¶									numCommmands[i]++;¶									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); ¶									break;¶								}¶							}¶						}¶					}¶				}¶				for (int i = 0; i < sum.length; i++) {¶					retVal.add(numCommmands[i]+"");¶					if (numCommmands[i] == 0) {¶						retVal.add("0");¶					} else {¶						retVal.add(pauseTimes[i]/numCommmands[i]+"");¶					}¶					sum[i] += numCommmands[i];¶					sumPause[i] += pauseTimes[i];¶				}¶				nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			nextLine = new String[header.length];¶			nextLine[0] = "Sum";¶			for (int i = 0; i < sum.length; i++) {¶				nextLine[1+i*2] = sum[i]+"";¶				if (sum[i] == 0) {¶					nextLine[2+i*2] = 0+"";¶				} else {¶					nextLine[2+i*2] = sumPause[i]/sum[i]+"";¶				}¶			}¶			cw.writeNext(nextLine);¶			¶			fw.close();¶			cw.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private void createWebStats(String assign, File folder) {¶		File csv = new File(folder,assign+"WebStats.csv");¶		FileWriter fw;¶		File csv2 = new File(folder,assign+"WebSearches.csv");¶		FileWriter fw2;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			if (csv2.exists()) {¶				csv2.delete();¶			}¶			csv.createNewFile();¶			csv2.createNewFile();¶			fw = new FileWriter(csv);¶			fw2 = new FileWriter(csv2);¶			CSVWriter cw = new CSVWriter(fw);¶			CSVWriter cw2 = new CSVWriter(fw2);¶			String[] header = {"Title", "URL", "# of Visits", "Provided?"};¶			String[] header2 = {"ID", "Search Word", "Title", "URL", "Sequence", "Last Page of the Search?", "Pasted Text"};¶			cw.writeNext(header);¶			cw2.writeNext(header2);¶¶			Map<String, Integer> urls = new HashMap<>();¶			Map<String, String> titles = new HashMap<>();¶			Map<String, List<String>> searches = new LinkedHashMap<>();¶			Map<String, List<String>> contents = new HashMap<>();¶			for (String student : data.keySet()) {¶				EHICommand lastSearch = null;¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (int i = 0; i < commands.size(); i++) {¶						EHICommand command = commands.get(i);¶						if (command instanceof WebCommand) {¶							String url = command.getDataMap().get("URL");¶							if (command.getAttributesMap().get("type").equals("Search")) {¶								lastSearch = command;¶								if (!searches.containsKey(lastSearch.getDataMap().get("keyword"))) {¶									searches.put(lastSearch.getDataMap().get("keyword"), new ArrayList<>());¶								}¶							} ¶							if (command.getAttributesMap().get("type").equals("Search Result") || command.getAttributesMap().get("type").equals("Stack Overflow")) {¶								String searchWord = "null";¶								if (lastSearch != null) {¶									searchWord = lastSearch.getDataMap().get("keyword");¶								}¶								if (!searches.containsKey(searchWord)) {¶									searches.put(searchWord, new ArrayList<>());¶								}¶								searches.get(searchWord).add(url);¶								if (!contents.containsKey(url)) {¶									List<String> list = new ArrayList<>();¶									if (!url.contains("google.com")) {¶										list.add(readWebContent(url));¶//										list.add(readWebContent2(url));¶										contents.put(url, list);¶									}¶								}¶							}¶							if (command.getAttributesMap().get("type").contains("Provided")) {¶								if (!searches.containsKey("Provided")) {¶									searches.put("Provided", new ArrayList<>());¶								}¶								searches.get("Provided").add(url);¶								if (!contents.containsKey(url)) {¶									List<String> list = new ArrayList<>();¶									list.add(readWebContent(url));¶//									list.add(readWebContent2(url));¶									contents.put(url, list);¶								}¶							}¶							urls.merge(url, 1, Integer::sum);¶							titles.put(url, command.getDataMap().get("keyword"));¶						}¶						if (command instanceof PasteCommand) {¶							outer:¶							for (int j = i-1; j >= 0 && j > i-20; j--) {¶								EHICommand command2 = commands.get(j);¶								String pastedText = "";¶								if (command2 instanceof InsertStringCommand || command2 instanceof Replace) {¶									if (command2 instanceof InsertStringCommand) {¶										pastedText = command2.getDataMap().get(InsertStringCommand.XML_Data_Tag);¶									} else {¶										pastedText = command2.getDataMap().get("insertedText");¶									}¶									if (pastedText.length() > 10) {¶										for (String url : contents.keySet()) {¶											List<String> list = contents.get(url);¶											String pastedText2 = pastedText.replaceAll("\\s", "");¶											if (list.get(0).contains(pastedText2)) {¶												for (int k = 1; k < list.size(); k++) {¶													if (list.get(k).replaceAll("\\s",  "").equals(pastedText2)) {¶														break outer;¶													}¶												}¶												list.add(pastedText);¶												break outer;¶											}¶										}¶									}¶								}¶							}¶						}¶					}¶				}¶				for (String s : searches.keySet()) {¶					List<String> nextLine = new ArrayList<>();¶					nextLine.add(student);¶					nextLine.add(s);¶					if (searches.get(s).size() == 0) {¶						nextLine.add("No Result");¶						cw2.writeNext(nextLine.toArray(new String[1]));¶						continue;¶					}¶					for (int i = 0; i < searches.get(s).size(); i++) {¶						String url = searches.get(s).get(i);¶						nextLine.add(titles.get(url));¶						nextLine.add(url);¶						nextLine.add(i+1+"");¶						nextLine.add(i == searches.get(s).size()-1 ? "Last" : "");¶						if (contents.containsKey(url)) {¶							List<String> list = contents.get(url);¶							for (int j = 1; j < list.size(); j++) {¶								nextLine.add(list.get(j));¶							}¶						}¶						cw2.writeNext(nextLine.toArray(new String[1]));¶						nextLine = new ArrayList<>();¶						nextLine.add(student);¶						nextLine.add("");¶					}¶				}¶				searches.clear();¶			}¶			Map<String, Integer> sortedMap = new LinkedHashMap<>();¶			urls.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));¶			for (String s : sortedMap.keySet()) {¶				String[] nextLine = {titles.get(s), s, sortedMap.get(s)+"", isProvided(s)? "Provided":""};¶				cw.writeNext(nextLine);¶			}¶			fw.close();¶			cw.close();¶			¶			fw2.close();¶			cw2.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private void createNextPauseDistribution(String assign, File folder) {¶		File csv = new File(folder,assign+"NextPauseDistribution.csv");¶		FileWriter fw;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] header = getPauseHeader();¶			cw.writeNext(header);¶			¶			int[] sum = new int[PauseCommand.TYPES.length];¶			long[] sumPause = new long[sum.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				int[] numCommmands = new int[sum.length];¶				long[] pauseTimes = new long[sum.length];¶				retVal.add(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (EHICommand command : commands) {¶						if (command instanceof PauseCommand) {¶							for (int i = 0; i < sum.length; i++) {¶								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {¶									numCommmands[i]++;¶									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); ¶									break;¶								}¶							}¶						}¶					}¶				}¶				for (int i = 0; i < sum.length; i++) {¶					retVal.add(numCommmands[i]+"");¶					if (numCommmands[i] == 0) {¶						retVal.add("0");¶					} else {¶						retVal.add(pauseTimes[i]/numCommmands[i]+"");¶					}¶					sum[i] += numCommmands[i];¶					sumPause[i] += pauseTimes[i];¶				}¶				String[] nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			String[] nextLine = new String[header.length];¶			nextLine[0] = "Sum";¶			for (int i = 0; i < sum.length; i++) {¶				nextLine[1+i*2] = sum[i]+"";¶				if (sum[i] == 0) {¶					nextLine[2+i*2] = 0+"";¶				} else {¶					nextLine[2+i*2] = sumPause[i]/sum[i]+"";¶				}¶			}¶			cw.writeNext(nextLine);¶			fw.close();¶			cw.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private String[] getPauseHeader() {¶		List<String> retVal = new ArrayList<>();¶		retVal.add("ID");¶		for (String s : PauseCommand.TYPES) {¶			retVal.add(s);¶			retVal.add("Avg. Time");¶//			retVal.add("Longest Time");¶//			retVal.add("Shortest Time");¶		}¶		return retVal.toArray(new String[1]);¶	}¶	¶	private void writeOneLine(CSVWriter cw, String assign, long time, String type, String pid) {¶		String[] nextLine = new String[4]; ¶		nextLine[0] = assign + " " + pid;¶		Date date = new Date(time);¶		DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");¶		nextLine[1] = df.format(date);¶		nextLine[2] = type;¶		nextLine[3] = pid;¶		if (nextLine != null) {¶			cw.writeNext(nextLine);¶		}¶	}¶	¶	public List<List<EHICommand>> replayLogs(String projectPath, Analyzer analyzer){¶		List<List<EHICommand>> nestedCommands = analyzer.convertXMLLogToObjects(projectPath+File.separator+"Rest");¶		sortNestedCommands(nestedCommands);¶		return nestedCommands;¶	}¶¶	private void maybeAddPauseCommand(List<EHICommand> newCommands, EHICommand last, EHICommand cur) {¶		long rest = cur.getTimestamp()-last.getTimestamp();¶		if (rest >= 1*ONE_SECOND) {¶			String range = "";¶			if (rest < 2*ONE_SECOND) {¶				range = "1s-2s";¶			} else if (rest < 5*ONE_SECOND) {¶				range = "2s-5s";¶			} else if (rest < 10*ONE_SECOND) {¶				range = "5s-10s";¶			} else if (rest < 20*ONE_SECOND) {¶				range = "10s-20s";¶			} else if (rest < 30*ONE_SECOND) {¶				range = "20s-30s";¶			} else if (rest < ONE_MIN) {¶				range = "30s-1m";¶			} else if (rest < TWO_MIN) {¶				range = "1m-2m";¶			} else if (rest < FIVE_MIN) {¶				range = "2m-5m";¶			} else if (rest < TEN_MIN) {¶				range = "5m-10m";¶			} else if (rest < 3*TEN_MIN) {¶				range = "10m-30m";¶			} else if (rest < 6*TEN_MIN) {¶				range = "30m-60m";¶			} else {¶				range = ">1h";¶			}¶			PauseCommand rCommnad = new PauseCommand(last, cur, rest, range);¶			rCommnad.setStartTimestamp(last.getStartTimestamp());¶			rCommnad.setTimestamp(last.getTimestamp()+1);¶			newCommands.add(rCommnad);¶		} ¶		newCommands.add(cur);¶	}¶	¶	private EHICommand maybeAddWebCommandBeforeLogs(Iterator<EHICommand> iterator, long startTimestamp, List<EHICommand> commands) {¶		if (iterator == null) {¶			return null;¶		}¶		EHICommand webCommand = null;¶		long timestamp = 0;¶		while((webCommand = iterator.next()) != null && (timestamp = webCommand.getTimestamp() - startTimestamp) < 0) {¶			webCommand.setStartTimestamp(0);¶			webCommand.setTimestamp(timestamp);¶			commands.add(webCommand);¶		}¶		return webCommand;¶	}¶¶	public String readWebContent(String aURL) {¶		String content = "";¶		Scanner sc = null;¶		try {¶			URL url = new URL(aURL);¶//			System.out.println("accessing webpage " + aURL);¶			URLConnection con = url.openConnection();¶			con.setReadTimeout(5000);¶			sc = new Scanner(con.getInputStream());¶			StringBuffer sb = new StringBuffer();¶			while (sc.hasNext()) {¶				sb.append(sc.next());¶			}¶			content = sb.toString();¶		} catch (MalformedURLException e) {¶			e.printStackTrace();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} finally {¶			if (sc != null) {¶				sc.close();¶			}¶		}¶		if (content.equals("") && !aURL.substring(0,5).equals("https")) {¶			aURL = aURL.replaceFirst("http", "https");¶			return readWebContent(aURL);¶		}¶		¶//		System.out.println("webpage content " + aURL + content);¶//		return content.replaceAll("<[^>]*>", "").replaceAll("\\s", "");¶		return content;¶	}¶	¶	private boolean isProvided(String s) {¶		for (String url : WebCommand.PROVIDED_URL) {¶			if (s.equals(url)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	¶//	public String readWebContent2(String url){¶//		try {¶//			HttpURLConnection httpClient =(HttpURLConnection) new URL(url).openConnection();¶//			httpClient.setRequestMethod("GET");¶//			httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");¶//			int responseCode = httpClient.getResponseCode();¶//			try (BufferedReader in = new BufferedReader(¶//					new InputStreamReader(httpClient.getInputStream()))) {¶//				StringBuilder response = new StringBuilder();¶//				String line;¶//				while ((line = in.readLine()) != null) {¶//					response.append(line);¶//				}¶//				if (response.toString().equals("") && !url.substring(0,5).equals("https")) {¶//					url = url.replaceFirst("http", "https");¶//					return readWebContent2(url);¶//				}	¶//				return response.toString();¶//			}¶//		} catch (Exception e) {¶//			// TODO: handle exception¶//			e.printStackTrace();¶//		}¶//		return "";¶//	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.concurrent.CountDownLatch;
import analyzer.Analyzer;
import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import fluorite.commands.ConsoleInput;
import fluorite.commands.ConsoleOutputCommand;
import fluorite.commands.CopyCommand;
import fluorite.commands.Delete;
import fluorite.commands.EHExceptionCommand;
import fluorite.commands.EHICommand;
import fluorite.commands.ExceptionCommand;
import fluorite.commands.GetHelpCommand;
import fluorite.commands.InsertStringCommand;
import fluorite.commands.PasteCommand;
import fluorite.commands.PauseCommand;
import fluorite.commands.Replace;
import fluorite.commands.RequestHelpCommand;
import fluorite.commands.RunCommand;
import fluorite.commands.ShellCommand;
import fluorite.commands.WebCommand;
import jdk.internal.jline.internal.InputStreamReader;

public class AExperimentalReplayer extends AReplayer{
	private Map<String, List<List<EHICommand>>> data;
	private static final int THREAD_LIM = 6;
	private static final String TIMESTAMP = "C:\\Users\\Zhizhou\\Desktop\\timestamp for each participant.csv";
	private Map<String, Long[]> timestamps = new HashMap<>();
	
	public AExperimentalReplayer(Analyzer anAnalyzer) {
		super(anAnalyzer);
		analyzer = anAnalyzer;
		data = new HashMap<>();
		System.setProperty("http.agent", "Chrome");
	}
	
	public void readTimestamp() {
		try {
			SimpleDateFormat df = new SimpleDateFormat("HH:mm");
			File timestampFile = new File(TIMESTAMP);
			CSVReader cr = new CSVReader(new FileReader(timestampFile));
			cr.readNext();
			String[] token = null;
			while ((token = cr.readNext()) != null) {
				long startTime = df.parse(token[4]).getTime();
				if (startTime < 10*3600*1000) {
					startTime += 12*3600*1000;
				}
				long endTime = df.parse(token[5]).getTime();
				if (endTime < 10*3600*1000) {
					endTime += 12*3600*1000;
				}
				Long[] times = {startTime, endTime};
				timestamps.put(token[0], times);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void createPauseCommandLogs(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.out.println("Class Folder does not exist");
			System.exit(0);
		}
		File[] students = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		latch = new CountDownLatch(students.length);
		for (int j = 0; j < students.length; j++) {
			File studentFolder  = students[j];
			File logFolder = new File(studentFolder,"Eclipse");
			if (!logFolder.exists()) {
				latch.countDown();
				continue;
			}
			System.out.println("Reading " + studentFolder.getName());
			File[] logs = new File(logFolder.getPath()).listFiles(new FileFilter() {
				public boolean accept(File pathname) {
					return pathname.getName().startsWith("Log") && pathname.getName().endsWith(".xml");
				}
			});
			Thread thread = new Thread(new Runnable() {
				public void run() {
					if (logs == null || !studentFolder.getName().equals("22")) {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
						return;
					}
//					if (!studentFolder.getName().equals("16")) {
//						synchronized (this) {
//							threadCount--;
//						}
//						latch.countDown();
//						return;
//					}
					try {
						File browser = new File(studentFolder, "Browser");
						List<EHICommand> webCommands = null;
						Iterator<EHICommand> webCommandIterator = null;
						if (browser.exists() && browser.listFiles().length != 0) {
							webCommands = readWebCommands(browser.listFiles()[0]);
							if (webCommands != null) {
								webCommandIterator = webCommands.iterator();
							}
						}
						EHICommand webCommand = null;
						for (File file : logs) {
							
							long startTimestamp = getLogFileCreationTime(file);
							long logStartTimestamp = startTimestamp;
							long endTimestamp = Long.MAX_VALUE;
							if (timestamps.containsKey(studentFolder.getName())) {
								startTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[0] - 60*ONE_MIN;
								endTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[1] - 59*ONE_MIN;
							}
							List<EHICommand> commands = readOneLogFile(file.getPath(), analyzer);
							if (commands.size() < 2) {
								continue;
							}
							List<EHICommand> newCommands = new ArrayList<>();
							EHICommand last = null;
							EHICommand cur = null;
							if (webCommand == null) {
//								webCommand = maybeAddWebCommandBeforeLogs(webCommandIterator, startTimestamp, newCommands);
								webCommand = webCommandIterator.next();
							}
							long timestamp = 0;
							if (webCommand != null) {
								timestamp = webCommand.getTimestamp() - logStartTimestamp;
							}
							for (EHICommand command : commands) {
								if (command.getTimestamp() + logStartTimestamp < startTimestamp || command.getTimestamp() + logStartTimestamp > endTimestamp) {
									continue;
								}
								command.setStartTimestamp(logStartTimestamp);
								if (cur == null) {
									cur = command;
									newCommands.add(command);
								} else {
									last = cur;
									cur = command;
//									boolean webCommandAdded = false;
//									while(webCommand != null && maybeAddWebCommand(newCommands, last, cur, webCommand, webCommandIterator, startTimestamp)) {
//										webCommandAdded = true;
//										last = webCommand;
//										try {
//											webCommand = webCommandIterator.next();
//										} catch (NoSuchElementException e) {
//											webCommand = null;
//										}
//									} 
//									if (!webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
//									}
									
//									boolean added = false;
									while (webCommand != null && timestamp >= last.getTimestamp() && timestamp <= cur.getTimestamp()) {
										webCommand.setStartTimestamp(logStartTimestamp);
										webCommand.setTimestamp(timestamp);
										maybeAddPauseCommand(newCommands, last,	webCommand);
//										webCommandAdded = true;
										if (webCommandIterator.hasNext()) {
											last = webCommand;
											webCommand = webCommandIterator.next();
											timestamp = webCommand.getTimestamp() - logStartTimestamp;
										} else {
											webCommand = null;
											break;
										}
									}
//									if (webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
////										return webCommand;
//									} else {
										maybeAddPauseCommand(newCommands, last, cur);
//									}
								}
							}
							
							String logContent = XML_START1 + getLogFileCreationTime(file) + XML_START2 + XML_VERSION + XML_START3;
							for (EHICommand c : newCommands) {
								logContent += c.persist();
							}
							logContent += XML_FILE_ENDING;
							try {
								File newLog = new File(file.getParent()+File.separator+"Rest"+File.separator+file.getName());
								if (newLog.exists()) {
									newLog.delete();
								}
								if (newCommands.size() == 0) {
									continue;
								}
								newLog.getParentFile().mkdirs();
								newLog.createNewFile();
								BufferedWriter writer = new BufferedWriter(new FileWriter(newLog, true));
								System.out.println("Writing to file " + newLog.getPath());
								writer.write(logContent);
								writer.close();
								System.out.println("Finished writing to file " + newLog.getPath());
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
						
					} catch (Exception e) {
						e.printStackTrace();
					} finally {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
					}
				}							
			});
			while(true) {
				if (threadCount > THREAD_LIM) {
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
				
				if (threadCount <= THREAD_LIM) {
					synchronized (this) {
						threadCount++;
						thread.start();
						break;
					}
				}
			}
		}
		try {
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		} finally {
			System.exit(0);
		}
	}

	public void analyzeFolder(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.exit(0);
		}
		File[] participants = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		for (int i = 0; i < participants.length; i++) {
			File participantFolder = new File(participants[i],"Eclipse");
			if (!participantFolder.exists()) {
				continue;
			}
			System.out.println("Reading student " + participantFolder.getName());
			data.put(participants[i].getName(), replayLogs(participantFolder.getPath(), analyzer));
		}
		List<List<EHICommand>> nestedCommands = data.get("26");
		for (int i = 0; i < nestedCommands.size(); i++) {
			for (EHICommand command:nestedCommands.get(i)) {
				if (command instanceof ExceptionCommand) {
					System.out.println(command);
				}
			}
		}
		createAssignData("Experiment", folder);
		createDistributionData("Experiment", folder);
		createPrevPauseDistribution("Experiment", folder);
//		createNextPauseDistribution("Experiment", folder);
		createWebStats("Experiment", folder);
		System.exit(0);
	}

	private void createAssignData(String assign, File folder) {
		File csv = new File(folder,assign+".csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"Event.csv");
		FileWriter fw2;
		int[] sum = new int[10];
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = {"Student", "Total Time Spent", "Active Time", "Rest Time", "Wall Clock Time", "Pause", "Web Visit", "Insert", "Delete", "Replace", "Copy", "Paste", "Run", "Exception", "Exception Breakdown"};
			cw.writeNext(header);

			if (csv2.exists()) {
				csv2.delete();
			}
			csv2.createNewFile();
			fw2 = new FileWriter(csv2);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header2 = {"case_id", "timestamp", "activity", "user"};
			cw2.writeNext(header2);

			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + "to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				long[] restTime = restTime(nestedCommands, FIVE_MIN, Long.MAX_VALUE);
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
				retVal.add(convertToHourMinuteSecond(restTime[0]));
				retVal.add(convertToHourMinuteSecond(wallClockTime));
				int[] numCommands = new int[9];
				List<String> breakdownList = new ArrayList<>();
				String list = "";
				for (List<EHICommand> commands : nestedCommands) {
					long lastTime = -1;
					long curTime = -1;
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);

						if (i > 0) {
							lastTime = curTime;
						}
						if (command != null) {
							curTime = command.getTimestamp() + command.getStartTimestamp();
						}
						if (lastTime - curTime > 5*60*1000) {
							writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
						}
						if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
							writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
						} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
							writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
						} else if (command instanceof InsertStringCommand || command instanceof CopyCommand ||
								command instanceof Delete ||
								command instanceof Replace || command instanceof PasteCommand || command instanceof ExceptionCommand ||
								command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
								command instanceof RequestHelpCommand || command instanceof GetHelpCommand) {
							writeOneLine(cw2, assign, curTime, getEventType(command), student);
						}
						if (command instanceof PauseCommand) {
							numCommands[0]++;
							list += "A";
						}
						if (command instanceof WebCommand) {
							numCommands[1]++;
							list += "W";
						}
						if (command instanceof InsertStringCommand) {
							numCommands[2]++;
							list += "I";
						}
						if (command instanceof Delete) {
							numCommands[3]++;
							list += "D";
						}
						if (command instanceof Replace) {
							numCommands[4]++;
							list += "R";
						}
						if (command instanceof CopyCommand) {
							numCommands[5]++;
							list += "C";
						}
						if (command instanceof PasteCommand) {
							numCommands[6]++;
							list += "P";
						}
						if (command instanceof RunCommand) {
							numCommands[7]++;
							list += "U";
						}
						if (command instanceof ExceptionCommand || command instanceof EHExceptionCommand) {
							if(isException(command)) {
								if (command instanceof EHExceptionCommand) {
									ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
									ex.setTimestamp(command.getTimestamp());
									ex.setStartTimestamp(command.getStartTimestamp());
								}
								numCommands[8]++;
								list += "E";
								if (i < commands.size()-1) {
									command = commands.get(i+1);
								} else {
									continue;
								}
								while(!(command instanceof InsertStringCommand || command instanceof Replace 
										|| command instanceof Delete 
										|| command instanceof CopyCommand || command instanceof PasteCommand)) {
									if (command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
											command instanceof RequestHelpCommand || command instanceof GetHelpCommand || command instanceof ExceptionCommand ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_LOST_FOCUS")) ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_CLOSED"))) {
										if (i > 0) {
											lastTime = curTime;
										}
										curTime = command.getTimestamp() + command.getStartTimestamp();
										if (lastTime - curTime > 5*60*1000) {
											writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
										}
										if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
											writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
										} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
											writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
										} else {
											writeOneLine(cw2, assign, curTime, getEventType(command), student);
										}
									}
									if ((command instanceof ExceptionCommand || command instanceof EHExceptionCommand) && isException(command)) {
										if (command instanceof EHExceptionCommand) {
											ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
											ex.setTimestamp(command.getTimestamp());
											ex.setStartTimestamp(command.getStartTimestamp());
											if (i > 0) {
												lastTime = curTime;
											}
											curTime = command.getTimestamp() + command.getStartTimestamp();
											if (lastTime - curTime > 5*60*1000) {
												writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
											}
											writeOneLine(cw2, assign, curTime, getEventType(ex), student);
										}
										numCommands[8]++;
										list += "E";
									}
									i++;
									if (i+1 < commands.size()) {
										command = commands.get(i+1);
									} else {
										break;
									}
								}
								breakdownList.add(countConsecutiveCommands(list));
								list = "";
							}
						}
					}
				}
				if (!list.equals("")) {
					breakdownList.add(countConsecutiveCommands(list));
				}
				for(int i = 0; i < numCommands.length; i++) {
					retVal.add(i+5, numCommands[i]+"");
					sum[i] += numCommands[i];
					if (i > 1) {
						sum[9] += numCommands[i];
					}
				}
				for(int i = 0; i < breakdownList.size(); i++) {
					retVal.add(i+14, breakdownList.get(i));
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			List<String> retVal = new ArrayList<>();
			retVal.add("Sum");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			for (int i = 0; i < sum.length; i++) {
				retVal.add(sum[i]+"");
			}
			String[] nextLine = retVal.toArray(new String[1]);
			cw.writeNext(nextLine);
			fw.close();
			cw.close();

			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void createDistributionData(String assign, File folder) {
		File csv = new File(folder,assign+"Distribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getHeader();
			cw.writeNext(header);
			
			String[] sum = new String[header.length];
			long[] restTimeSum = new long[REST.length];
			sum[0] = "Sum";
			for (int i = 1; i < sum.length; i++) {
				sum[i] = "";
			}
			int[] restSum = new int[REST.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				if (totalTime == 0) {
					continue;
				}
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(wallClockTime));

				long[] restTime = {0,0};
				for (int i = 0; i < REST.length; i++) {
					if (i < REST.length-1) {
						restTime = restTime(nestedCommands, REST[i], REST[i+1]);
					} else {
						restTime = restTime(nestedCommands, REST[i], Long.MAX_VALUE);
					}
					retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
					retVal.add(convertToHourMinuteSecond(restTime[0]));
					retVal.add(restTime[1]+"");
					retVal.add(getTime(restTime[1] == 0? 0:1.0*restTime[2]/restTime[1]));
					restSum[i] += restTime[1];
					restTimeSum[i] += restTime[2];
				}
				
				String[] days = daysSpent(nestedCommands);
				if (days != null) {
					for (int i = 0; i < days.length; i++) {
						retVal.add(days[i]);
					}
				}
				
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			int sum2 = 0;
			for (int i = 0; i < restSum.length; i++) {
				sum[4*i+5] = restSum[i]+"";
				sum2 += restSum[i];
				sum[4*i+6] = getTime(restSum[i] == 0? 0:1.0*restTimeSum[i]/restSum[i]);
			}
			sum[1] = sum2+"";
			cw.writeNext(sum);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createPrevPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"PauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] prev = {"Prev"};
			cw.writeNext(prev);
			String[] header = getPauseHeader();
			cw.writeNext(header);

			String[] nextLine = new String[header.length];
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("prevType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
//				String[] nextLine = retVal.toArray(new String[1]);
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
//			String[] nextLine = new String[header.length];
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			String[] empty = {};
			cw.writeNext(empty);
			String[] next = {"next"};
			cw.writeNext(next);
			sum = new int[PauseCommand.TYPES.length];
			sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createWebStats(String assign, File folder) {
		File csv = new File(folder,assign+"WebStats.csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"WebSearches.csv");
		FileWriter fw2;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			if (csv2.exists()) {
				csv2.delete();
			}
			csv.createNewFile();
			csv2.createNewFile();
			fw = new FileWriter(csv);
			fw2 = new FileWriter(csv2);
			CSVWriter cw = new CSVWriter(fw);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header = {"Title", "URL", "# of Visits", "Provided?"};
			String[] header2 = {"ID", "Search Word", "Title", "URL", "Sequence", "Last Page of the Search?", "Pasted Text"};
			cw.writeNext(header);
			cw2.writeNext(header2);

			Map<String, Integer> urls = new HashMap<>();
			Map<String, String> titles = new HashMap<>();
			Map<String, List<String>> searches = new LinkedHashMap<>();
			Map<String, List<String>> contents = new HashMap<>();
			for (String student : data.keySet()) {
				EHICommand lastSearch = null;
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);
						if (command instanceof WebCommand) {
							String url = command.getDataMap().get("URL");
							if (command.getAttributesMap().get("type").equals("Search")) {
								lastSearch = command;
								if (!searches.containsKey(lastSearch.getDataMap().get("keyword"))) {
									searches.put(lastSearch.getDataMap().get("keyword"), new ArrayList<>());
								}
							} 
							if (command.getAttributesMap().get("type").equals("Search Result") || command.getAttributesMap().get("type").equals("Stack Overflow")) {
								String searchWord = "null";
								if (lastSearch != null) {
									searchWord = lastSearch.getDataMap().get("keyword");
								}
								if (!searches.containsKey(searchWord)) {
									searches.put(searchWord, new ArrayList<>());
								}
								searches.get(searchWord).add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									if (!url.contains("google.com")) {
										list.add(readWebContent(url));
//										list.add(readWebContent2(url));
										contents.put(url, list);
									}
								}
							}
							if (command.getAttributesMap().get("type").contains("Provided")) {
								if (!searches.containsKey("Provided")) {
									searches.put("Provided", new ArrayList<>());
								}
								searches.get("Provided").add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									list.add(readWebContent(url));
//									list.add(readWebContent2(url));
									contents.put(url, list);
								}
							}
							urls.merge(url, 1, Integer::sum);
							titles.put(url, command.getDataMap().get("keyword"));
						}
						if (command instanceof PasteCommand) {
							outer:
							for (int j = i-1; j >= 0 && j > i-20; j--) {
								EHICommand command2 = commands.get(j);
								String pastedText = "";
								if (command2 instanceof InsertStringCommand || command2 instanceof Replace) {
									if (command2 instanceof InsertStringCommand) {
										pastedText = command2.getDataMap().get(InsertStringCommand.XML_Data_Tag);
									} else {
										pastedText = command2.getDataMap().get("insertedText");
									}
									if (pastedText.length() > 10) {
										for (String url : contents.keySet()) {
											List<String> list = contents.get(url);
											String pastedText2 = pastedText.replaceAll("\\s", "");
											if (list.get(0).contains(pastedText2)) {
												for (int k = 1; k < list.size(); k++) {
													if (list.get(k).replaceAll("\\s",  "").equals(pastedText2)) {
														break outer;
													}
												}
												list.add(pastedText);
												break outer;
											}
										}
									}
								}
							}
						}
					}
				}
				for (String s : searches.keySet()) {
					List<String> nextLine = new ArrayList<>();
					nextLine.add(student);
					nextLine.add(s);
					if (searches.get(s).size() == 0) {
						nextLine.add("No Result");
						cw2.writeNext(nextLine.toArray(new String[1]));
						continue;
					}
					for (int i = 0; i < searches.get(s).size(); i++) {
						String url = searches.get(s).get(i);
						nextLine.add(titles.get(url));
						nextLine.add(url);
						nextLine.add(i+1+"");
						nextLine.add(i == searches.get(s).size()-1 ? "Last" : "");
						if (contents.containsKey(url)) {
							List<String> list = contents.get(url);
							for (int j = 1; j < list.size(); j++) {
								nextLine.add(list.get(j));
							}
						}
						cw2.writeNext(nextLine.toArray(new String[1]));
						nextLine = new ArrayList<>();
						nextLine.add(student);
						nextLine.add("");
					}
				}
				searches.clear();
			}
			Map<String, Integer> sortedMap = new LinkedHashMap<>();
			urls.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));
			for (String s : sortedMap.keySet()) {
				String[] nextLine = {titles.get(s), s, sortedMap.get(s)+"", isProvided(s)? "Provided":""};
				cw.writeNext(nextLine);
			}
			fw.close();
			cw.close();
			
			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createNextPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"NextPauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getPauseHeader();
			cw.writeNext(header);
			
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			String[] nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private String[] getPauseHeader() {
		List<String> retVal = new ArrayList<>();
		retVal.add("ID");
		for (String s : PauseCommand.TYPES) {
			retVal.add(s);
			retVal.add("Avg. Time");
//			retVal.add("Longest Time");
//			retVal.add("Shortest Time");
		}
		return retVal.toArray(new String[1]);
	}
	
	private void writeOneLine(CSVWriter cw, String assign, long time, String type, String pid) {
		String[] nextLine = new String[4]; 
		nextLine[0] = assign + " " + pid;
		Date date = new Date(time);
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		nextLine[1] = df.format(date);
		nextLine[2] = type;
		nextLine[3] = pid;
		if (nextLine != null) {
			cw.writeNext(nextLine);
		}
	}
	
	public List<List<EHICommand>> replayLogs(String projectPath, Analyzer analyzer){
		List<List<EHICommand>> nestedCommands = analyzer.convertXMLLogToObjects(projectPath+File.separator+"Rest");
		sortNestedCommands(nestedCommands);
		return nestedCommands;
	}

	private void maybeAddPauseCommand(List<EHICommand> newCommands, EHICommand last, EHICommand cur) {
		long rest = cur.getTimestamp()-last.getTimestamp();
		if (rest >= 1*ONE_SECOND) {
			String range = "";
			if (rest < 2*ONE_SECOND) {
				range = "1s-2s";
			} else if (rest < 5*ONE_SECOND) {
				range = "2s-5s";
			} else if (rest < 10*ONE_SECOND) {
				range = "5s-10s";
			} else if (rest < 20*ONE_SECOND) {
				range = "10s-20s";
			} else if (rest < 30*ONE_SECOND) {
				range = "20s-30s";
			} else if (rest < ONE_MIN) {
				range = "30s-1m";
			} else if (rest < TWO_MIN) {
				range = "1m-2m";
			} else if (rest < FIVE_MIN) {
				range = "2m-5m";
			} else if (rest < TEN_MIN) {
				range = "5m-10m";
			} else if (rest < 3*TEN_MIN) {
				range = "10m-30m";
			} else if (rest < 6*TEN_MIN) {
				range = "30m-60m";
			} else {
				range = ">1h";
			}
			PauseCommand rCommnad = new PauseCommand(last, cur, rest, range);
			rCommnad.setStartTimestamp(last.getStartTimestamp());
			rCommnad.setTimestamp(last.getTimestamp()+1);
			newCommands.add(rCommnad);
		} 
		newCommands.add(cur);
	}
	
	private EHICommand maybeAddWebCommandBeforeLogs(Iterator<EHICommand> iterator, long startTimestamp, List<EHICommand> commands) {
		if (iterator == null) {
			return null;
		}
		EHICommand webCommand = null;
		long timestamp = 0;
		while((webCommand = iterator.next()) != null && (timestamp = webCommand.getTimestamp() - startTimestamp) < 0) {
			webCommand.setStartTimestamp(0);
			webCommand.setTimestamp(timestamp);
			commands.add(webCommand);
		}
		return webCommand;
	}

	public String readWebContent(String aURL) {
		String content = "";
		Scanner sc = null;
		try {
			URL url = new URL(aURL);
//			System.out.println("accessing webpage " + aURL);
			URLConnection con = url.openConnection();
			con.setReadTimeout(5000);
			sc = new Scanner(con.getInputStream());
			StringBuffer sb = new StringBuffer();
			while (sc.hasNext()) {
				sb.append(sc.next());
			}
			content = sb.toString();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (sc != null) {
				sc.close();
			}
		}
		if (content.equals("") && !aURL.substring(0,5).equals("https")) {
			aURL = aURL.replaceFirst("http", "https");
			return readWebContent(aURL);
		}
		
//		System.out.println("webpage content " + aURL + content);
//		return content.replaceAll("<[^>]*>", "").replaceAll("\\s", "");
		return content;
	}
	
	private boolean isProvided(String s) {
		for (String url : WebCommand.PROVIDED_URL) {
			if (s.equals(url)) {
				return true;
			}
		}
		return false;
	}
	
//	public String readWebContent2(String url){
//		try {
//			HttpURLConnection httpClient =(HttpURLConnection) new URL(url).openConnection();
//			httpClient.setRequestMethod("GET");
//			httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//			int responseCode = httpClient.getResponseCode();
//			try (BufferedReader in = new BufferedReader(
//					new InputStreamReader(httpClient.getInputStream()))) {
//				StringBuilder response = new StringBuilder();
//				String line;
//				while ((line = in.readLine()) != null) {
//					response.append(line);
//				}
//				if (response.toString().equals("") && !url.substring(0,5).equals("https")) {
//					url = url.replaceFirst("http", "https");
//					return readWebContent2(url);
//				}	
//				return response.toString();
//			}
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		return "";
//	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="190" _type="Insert" date="Wed Feb 24 16:30:35 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35308" docExpressionCount="4290" docLength="37774" length="8" offset="2343" repeat="3" starttimestamp="1614202022735" timestamp="212659" timestamp2="213198">
    <text><![CDATA[
				if]]></text>
  </DocumentChange>
  <DocumentChange __id="197" _type="Replace" date="Wed Feb 24 16:30:36 EST 2021" docASTNodeCount="6190" docActiveCodeLength="35349" docExpressionCount="4291" docLength="37815" endLine="67" insertionLength="43" int_docASTNodeCount="6187" int_docActiveCodeLength="35306" int_docExpressionCount="4290" int_docLength="37772" length="2" offset="2349" startLine="67" starttimestamp="1614202022735" timestamp="213323">
    <deletedText><![CDATA[if]]></deletedText>
    <insertedText><![CDATA[if (firstCommandAfterStart) {
					
				}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="199" _type="Replace" date="Wed Feb 24 16:30:36 EST 2021" docASTNodeCount="6190" docActiveCodeLength="35328" docExpressionCount="4291" docLength="37794" endLine="67" insertionLength="1" int_docASTNodeCount="6190" int_docActiveCodeLength="35327" int_docExpressionCount="4291" int_docLength="37793" length="22" offset="2353" startLine="67" starttimestamp="1614202022735" timestamp="213994">
    <deletedText><![CDATA[firstCommandAfterStart]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="201" _type="Insert" date="Wed Feb 24 16:30:36 EST 2021" docASTNodeCount="6190" docActiveCodeLength="35330" docExpressionCount="4291" docLength="37796" length="2" offset="2354" repeat="2" starttimestamp="1614202022735" timestamp="214037" timestamp2="214237">
    <text><![CDATA[ok]]></text>
  </DocumentChange>
  <DocumentChange __id="206" _type="Replace" date="Wed Feb 24 16:30:37 EST 2021" docASTNodeCount="6190" docActiveCodeLength="35332" docExpressionCount="4291" docLength="37798" endLine="67" insertionLength="5" int_docASTNodeCount="6190" int_docActiveCodeLength="35327" int_docExpressionCount="4291" int_docLength="37793" length="3" offset="2353" startLine="67" starttimestamp="1614202022735" timestamp="214423">
    <deletedText><![CDATA[tok]]></deletedText>
    <insertedText><![CDATA[token]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="208" _type="Insert" date="Wed Feb 24 16:30:37 EST 2021" docASTNodeCount="6194" docActiveCodeLength="35338" docExpressionCount="4295" docLength="37804" length="6" offset="2358" repeat="5" starttimestamp="1614202022735" timestamp="214996" timestamp2="217116">
    <text><![CDATA[[0].eq]]></text>
  </DocumentChange>
  <DocumentChange __id="219" _type="Replace" date="Wed Feb 24 16:30:39 EST 2021" docASTNodeCount="6195" docActiveCodeLength="35352" docExpressionCount="4296" docLength="37818" endLine="67" insertionLength="16" int_docASTNodeCount="6194" int_docActiveCodeLength="35336" int_docExpressionCount="4295" int_docLength="37802" length="2" offset="2362" startLine="67" starttimestamp="1614202022735" timestamp="217203">
    <deletedText><![CDATA[eq]]></deletedText>
    <insertedText><![CDATA[equals(anObject)]]></insertedText>
  </DocumentChange>
  <Command __id="189" _type="PauseCommand" date="Wed Feb 24 16:30:34 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="211786">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1326]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="188" _type="MoveCaretCommand" caretOffset="862" date="Wed Feb 24 16:30:34 EST 2021" docOffset="2343" starttimestamp="1614202022735" timestamp="211786" />
  <Command __id="191" _type="InsertStringCommand" date="Wed Feb 24 16:30:35 EST 2021" starttimestamp="1614202022735" timestamp="212671" timestamp2="212671">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="193" _type="InsertStringCommand" date="Wed Feb 24 16:30:35 EST 2021" starttimestamp="1614202022735" timestamp="212914" timestamp2="212914">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="194" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:30:35 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="212954" />
  <Command __id="196" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:35 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="213214" />
  <Command __id="198" _type="InsertStringCommand" date="Wed Feb 24 16:30:36 EST 2021" starttimestamp="1614202022735" timestamp="213377" timestamp2="213377">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="200" _type="InsertStringCommand" date="Wed Feb 24 16:30:36 EST 2021" starttimestamp="1614202022735" timestamp="214004" timestamp2="214004">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="202" _type="InsertStringCommand" date="Wed Feb 24 16:30:36 EST 2021" starttimestamp="1614202022735" timestamp="214039" timestamp2="214039">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="203" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:30:36 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="214079" />
  <Command __id="205" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:37 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="214414" />
  <Command __id="207" _type="InsertStringCommand" date="Wed Feb 24 16:30:37 EST 2021" starttimestamp="1614202022735" timestamp="214430" timestamp2="214430">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="209" _type="InsertStringCommand" date="Wed Feb 24 16:30:37 EST 2021" starttimestamp="1614202022735" timestamp="215003" timestamp2="215003">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="211" _type="InsertStringCommand" date="Wed Feb 24 16:30:38 EST 2021" starttimestamp="1614202022735" timestamp="215722" timestamp2="215722">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="212" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Feb 24 16:30:39 EST 2021" starttimestamp="1614202022735" timestamp="216273" />
  <Command __id="214" _type="InsertStringCommand" date="Wed Feb 24 16:30:39 EST 2021" starttimestamp="1614202022735" timestamp="216905" timestamp2="216905">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="215" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:30:39 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="216938" />
  <Command __id="218" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:39 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="217194" />
  <Command __id="220" _type="InsertStringCommand" date="Wed Feb 24 16:30:40 EST 2021" starttimestamp="1614202022735" timestamp="217288" timestamp2="217288">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="222" _type="InsertStringCommand" date="Wed Feb 24 16:30:40 EST 2021" starttimestamp="1614202022735" timestamp="218103" timestamp2="218103">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="224" _type="InsertStringCommand" date="Wed Feb 24 16:30:41 EST 2021" starttimestamp="1614202022735" timestamp="218320" timestamp2="218320">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="226" _type="InsertStringCommand" date="Wed Feb 24 16:30:41 EST 2021" starttimestamp="1614202022735" timestamp="218452" timestamp2="218452">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="227" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Feb 24 16:30:41 EST 2021" starttimestamp="1614202022735" timestamp="219068" />
  <Command __id="228" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Wed Feb 24 16:30:42 EST 2021" starttimestamp="1614202022735" timestamp="219444" />
  <Command __id="230" _type="InsertStringCommand" date="Wed Feb 24 16:30:42 EST 2021" starttimestamp="1614202022735" timestamp="220175" timestamp2="220175">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="231" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Feb 24 16:30:43 EST 2021" starttimestamp="1614202022735" timestamp="220525" />
  <Command __id="233" _type="InsertStringCommand" date="Wed Feb 24 16:30:43 EST 2021" starttimestamp="1614202022735" timestamp="221259" timestamp2="221259">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="234" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:30:44 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="221300" />
  <Command __id="236" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:44 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="221505" />
  <Command __id="238" _type="InsertStringCommand" date="Wed Feb 24 16:30:44 EST 2021" starttimestamp="1614202022735" timestamp="221539" timestamp2="221539">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="240" _type="InsertStringCommand" date="Wed Feb 24 16:30:44 EST 2021" starttimestamp="1614202022735" timestamp="221551" timestamp2="221551">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="242" _type="InsertStringCommand" date="Wed Feb 24 16:30:44 EST 2021" starttimestamp="1614202022735" timestamp="221649" timestamp2="221649">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="244" _type="InsertStringCommand" date="Wed Feb 24 16:30:44 EST 2021" starttimestamp="1614202022735" timestamp="221818" timestamp2="221818">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="246" _type="UndoCommand" date="Wed Feb 24 16:30:44 EST 2021" starttimestamp="1614202022735" timestamp="222260" />
  <Command __id="248" _type="UndoCommand" date="Wed Feb 24 16:30:45 EST 2021" starttimestamp="1614202022735" timestamp="222427" />
  <Command __id="250" _type="InsertStringCommand" date="Wed Feb 24 16:30:45 EST 2021" starttimestamp="1614202022735" timestamp="222796" timestamp2="222796">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="252" _type="InsertStringCommand" date="Wed Feb 24 16:30:45 EST 2021" starttimestamp="1614202022735" timestamp="222849" timestamp2="222849">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="253" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:30:45 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="222892" />
  <Command __id="256" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:45 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="223156" />
  <Command __id="258" _type="InsertStringCommand" date="Wed Feb 24 16:30:46 EST 2021" starttimestamp="1614202022735" timestamp="223429" timestamp2="223429">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="259" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Feb 24 16:30:46 EST 2021" start_end="START" starttimestamp="1614202022735" timestamp="223521" />
  <Command __id="261" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:46 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="223616" />
  <Command __id="263" _type="InsertStringCommand" date="Wed Feb 24 16:30:46 EST 2021" starttimestamp="1614202022735" timestamp="223667" timestamp2="223667">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="265" _type="InsertStringCommand" date="Wed Feb 24 16:30:46 EST 2021" starttimestamp="1614202022735" timestamp="223759" timestamp2="223759">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="267" _type="InsertStringCommand" date="Wed Feb 24 16:30:46 EST 2021" starttimestamp="1614202022735" timestamp="223985" timestamp2="223985">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="269" _type="InsertStringCommand" date="Wed Feb 24 16:30:46 EST 2021" starttimestamp="1614202022735" timestamp="223994" timestamp2="223994">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="271" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Feb 24 16:30:47 EST 2021" starttimestamp="1614202022735" timestamp="224411" />
  <Command __id="273" _type="InsertStringCommand" date="Wed Feb 24 16:30:47 EST 2021" starttimestamp="1614202022735" timestamp="224834" timestamp2="224834">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="275" _type="PauseCommand" date="Wed Feb 24 16:30:49 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="226845">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2011]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="274" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Wed Feb 24 16:30:49 EST 2021" starttimestamp="1614202022735" timestamp="226845" />
  <Command __id="276" _type="BreakPointCommand" date="Wed Feb 24 16:30:49 EST 2021" lineNumber="69" starttimestamp="1614202022735" timestamp="226847" type="BreakPointAdded" />
  <Command __id="278" _type="PauseCommand" date="Wed Feb 24 16:30:50 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="228232">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BreakPointCommand]]></prev>
    <pause><![CDATA[1385]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="277" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Wed Feb 24 16:30:50 EST 2021" starttimestamp="1614202022735" timestamp="228232" />
  <Command __id="279" _type="RunCommand" date="Wed Feb 24 16:30:51 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="228272" type="Debug" />
  <Command __id="280" _type="RunCommand" date="Wed Feb 24 16:30:51 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="228272" type="Debug" />
  <Command __id="281" _type="RunCommand" date="Wed Feb 24 16:30:51 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="228272" type="Run" />
  <Command __id="282" _type="ShellCommand" date="Wed Feb 24 16:30:51 EST 2021" starttimestamp="1614202022735" timestamp="229229" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="283" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Feb 24 16:30:52 EST 2021" start_end="END" starttimestamp="1614202022735" timestamp="229432" />
  <Command __id="285" _type="PauseCommand" date="Wed Feb 24 16:30:53 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="230727">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1295]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="284" _type="ShellCommand" date="Wed Feb 24 16:30:53 EST 2021" starttimestamp="1614202022735" timestamp="230727" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="286" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:30:53 EST 2021" starttimestamp="1614202022735" timestamp="230822" />
  <Command __id="287" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:30:53 EST 2021" starttimestamp="1614202022735" timestamp="230963" />
  <Command __id="288" _type="RunCommand" date="Wed Feb 24 16:30:53 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="230997" type="Run" />
  <Command __id="289" _type="RunCommand" date="Wed Feb 24 16:30:53 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="230997" type="Run" />
  <Command __id="290" _type="RunCommand" date="Wed Feb 24 16:30:53 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="231100" type="Run" />
  <Command __id="291" _type="RunCommand" date="Wed Feb 24 16:30:54 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="231386" type="Run" />
  <Command __id="292" _type="RunCommand" date="Wed Feb 24 16:30:54 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="231585" type="Run" />
  <Command __id="293" _type="RunCommand" date="Wed Feb 24 16:30:55 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="232300" type="Run" />
  <Command __id="302" _type="PauseCommand" date="Wed Feb 24 16:31:04 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="241728">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1294]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="301" _type="RunCommand" date="Wed Feb 24 16:31:04 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="241728" type="Run" />
  <Command __id="303" _type="ShellCommand" date="Wed Feb 24 16:31:05 EST 2021" starttimestamp="1614202022735" timestamp="242358" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="305" _type="PauseCommand" date="Wed Feb 24 16:31:07 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="244394">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2036]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="304" _type="ShellCommand" date="Wed Feb 24 16:31:07 EST 2021" starttimestamp="1614202022735" timestamp="244394" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="306" _type="MoveCaretCommand" caretOffset="1014" date="Wed Feb 24 16:31:07 EST 2021" docOffset="2495" starttimestamp="1614202022735" timestamp="244462" />
  <Command __id="308" _type="PauseCommand" date="Wed Feb 24 16:31:09 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="246802">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2340]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="307" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Feb 24 16:31:09 EST 2021" starttimestamp="1614202022735" timestamp="246802" />
  <Command __id="309" _type="RunCommand" date="Wed Feb 24 16:31:09 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="246802" type="Run" />
  <Command __id="311" _type="PauseCommand" date="Wed Feb 24 16:31:13 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="250356">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3554]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="310" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Feb 24 16:31:13 EST 2021" starttimestamp="1614202022735" timestamp="250356" />
  <Command __id="312" _type="RunCommand" date="Wed Feb 24 16:31:13 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="250357" type="Run" />
  <Command __id="314" _type="PauseCommand" date="Wed Feb 24 16:31:14 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="252181">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1824]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="313" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Wed Feb 24 16:31:14 EST 2021" starttimestamp="1614202022735" timestamp="252181" />
  <Command __id="315" _type="RunCommand" date="Wed Feb 24 16:31:14 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="252182" type="Run" />
  <Command __id="322" _type="PauseCommand" date="Wed Feb 24 16:31:22 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="260181">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1507]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="321" _type="RunCommand" date="Wed Feb 24 16:31:22 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="260181" type="Run" />
  <Command __id="323" _type="ShellCommand" date="Wed Feb 24 16:31:23 EST 2021" starttimestamp="1614202022735" timestamp="260522" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="325" _type="PauseCommand" date="Wed Feb 24 16:31:25 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="262838">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2316]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="324" _type="ShellCommand" date="Wed Feb 24 16:31:25 EST 2021" starttimestamp="1614202022735" timestamp="262838" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="326" _type="MoveCaretCommand" caretOffset="1145" date="Wed Feb 24 16:31:25 EST 2021" docOffset="2626" starttimestamp="1614202022735" timestamp="262906" />
  <Command __id="327" _type="MoveCaretCommand" caretOffset="1143" date="Wed Feb 24 16:31:26 EST 2021" docOffset="2624" starttimestamp="1614202022735" timestamp="263446" />
  <Command __id="329" _type="PauseCommand" date="Wed Feb 24 16:31:32 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="269935">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6489]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="328" _type="ShellCommand" date="Wed Feb 24 16:31:32 EST 2021" starttimestamp="1614202022735" timestamp="269935" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="365" _type="PauseCommand" date="Wed Feb 24 16:32:15 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="312816">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3841]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="364" _type="ShellCommand" date="Wed Feb 24 16:32:15 EST 2021" starttimestamp="1614202022735" timestamp="312816" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="383" _type="PauseCommand" date="Wed Feb 24 16:32:50 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="347963">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[5610]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="382" _type="ShellCommand" date="Wed Feb 24 16:32:50 EST 2021" starttimestamp="1614202022735" timestamp="347963" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="385" _type="PauseCommand" date="Wed Feb 24 16:33:02 EST 2021" range="10s-20s" starttimestamp="1614202022735" timestamp="360186">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12223]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="384" _type="ShellCommand" date="Wed Feb 24 16:33:02 EST 2021" starttimestamp="1614202022735" timestamp="360186" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="386" _type="MoveCaretCommand" caretOffset="920" date="Wed Feb 24 16:33:03 EST 2021" docOffset="2401" starttimestamp="1614202022735" timestamp="360283" />
  <Command __id="387" _type="ShellCommand" date="Wed Feb 24 16:33:03 EST 2021" starttimestamp="1614202022735" timestamp="361014" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="389" _type="PauseCommand" date="Wed Feb 24 16:34:04 EST 2021" range="1m-2m" starttimestamp="1614202022735" timestamp="422249">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[61235]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="388" _type="ShellCommand" date="Wed Feb 24 16:34:04 EST 2021" starttimestamp="1614202022735" timestamp="422249" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="390" _type="MoveCaretCommand" caretOffset="1121" date="Wed Feb 24 16:34:05 EST 2021" docOffset="2602" starttimestamp="1614202022735" timestamp="422310" />
  <Command __id="392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Feb 24 16:34:05 EST 2021" starttimestamp="1614202022735" timestamp="423085" />
  <Command __id="394" _type="InsertStringCommand" date="Wed Feb 24 16:34:05 EST 2021" starttimestamp="1614202022735" timestamp="423173" timestamp2="423173">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="396" _type="PauseCommand" date="Wed Feb 24 16:34:07 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="425211">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2038]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="395" _type="MoveCaretCommand" caretOffset="996" date="Wed Feb 24 16:34:07 EST 2021" docOffset="2477" starttimestamp="1614202022735" timestamp="425211" />
  <Command __id="398" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Feb 24 16:34:08 EST 2021" starttimestamp="1614202022735" timestamp="425417" />
  <Command __id="400" _type="InsertStringCommand" date="Wed Feb 24 16:34:08 EST 2021" starttimestamp="1614202022735" timestamp="425810" timestamp2="425810">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="402" _type="PauseCommand" date="Wed Feb 24 16:34:10 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="428027">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2217]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="401" _type="ShellCommand" date="Wed Feb 24 16:34:10 EST 2021" starttimestamp="1614202022735" timestamp="428027" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="404" _type="PauseCommand" date="Wed Feb 24 16:34:16 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="433589">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5562]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="403" _type="ShellCommand" date="Wed Feb 24 16:34:16 EST 2021" starttimestamp="1614202022735" timestamp="433589" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="405" _type="MoveCaretCommand" caretOffset="1134" date="Wed Feb 24 16:34:16 EST 2021" docOffset="2615" starttimestamp="1614202022735" timestamp="433646" />
  <Command __id="406" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Feb 24 16:34:17 EST 2021" starttimestamp="1614202022735" timestamp="434534" />
  <Command __id="407" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:34:17 EST 2021" starttimestamp="1614202022735" timestamp="434622" />
  <Command __id="408" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:34:17 EST 2021" starttimestamp="1614202022735" timestamp="434735" />
  <Command __id="409" _type="RunCommand" date="Wed Feb 24 16:34:17 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="434839" type="Run" />
  <Command __id="410" _type="RunCommand" date="Wed Feb 24 16:34:17 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="434839" type="Run" />
  <Command __id="412" _type="PauseCommand" date="Wed Feb 24 16:34:21 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="439246">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4407]]></pause>
    <nextType><![CDATA[Terminate]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="411" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Wed Feb 24 16:34:21 EST 2021" starttimestamp="1614202022735" timestamp="439246" />
  <Command __id="413" _type="RunCommand" date="Wed Feb 24 16:34:22 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="439287" type="Debug" />
  <Command __id="414" _type="RunCommand" date="Wed Feb 24 16:34:22 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="439287" type="Debug" />
  <Command __id="415" _type="RunCommand" date="Wed Feb 24 16:34:22 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="439287" type="Run" />
  <Command __id="417" _type="PauseCommand" date="Wed Feb 24 16:34:24 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="441807">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2520]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="416" _type="SelectTextCommand" caretOffset="920" date="Wed Feb 24 16:34:24 EST 2021" end="920" start="869" starttimestamp="1614202022735" timestamp="441807" />
  <Command __id="419" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Wed Feb 24 16:34:25 EST 2021" starttimestamp="1614202022735" timestamp="442462" />
  <Command __id="420" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:34:25 EST 2021" starttimestamp="1614202022735" timestamp="443223" />
  <Command __id="421" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Feb 24 16:34:25 EST 2021" starttimestamp="1614202022735" timestamp="443235" />
  <Command __id="422" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:34:26 EST 2021" starttimestamp="1614202022735" timestamp="443339" />
  <Command __id="424" _type="PauseCommand" date="Wed Feb 24 16:34:30 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="447972">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4633]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="423" _type="SelectTextCommand" caretOffset="2815" date="Wed Feb 24 16:34:30 EST 2021" end="2815" start="2695" starttimestamp="1614202022735" timestamp="447972" />
  <Command __id="425" _type="MoveCaretCommand" caretOffset="2850" date="Wed Feb 24 16:34:30 EST 2021" docOffset="4331" starttimestamp="1614202022735" timestamp="448259" />
  <Command __id="427" _type="PauseCommand" date="Wed Feb 24 16:34:49 EST 2021" range="10s-20s" starttimestamp="1614202022735" timestamp="466806">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18547]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="426" _type="MoveCaretCommand" caretOffset="2658" date="Wed Feb 24 16:34:49 EST 2021" docOffset="4139" starttimestamp="1614202022735" timestamp="466806" />
  <Command __id="429" _type="PauseCommand" date="Wed Feb 24 16:34:52 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="469373">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2567]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="428" _type="ShellCommand" date="Wed Feb 24 16:34:52 EST 2021" starttimestamp="1614202022735" timestamp="469373" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="430" _type="ShellCommand" date="Wed Feb 24 16:34:52 EST 2021" starttimestamp="1614202022735" timestamp="469847" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="431" _type="MoveCaretCommand" caretOffset="2673" date="Wed Feb 24 16:34:52 EST 2021" docOffset="4154" starttimestamp="1614202022735" timestamp="469894" />
  <Command __id="436" _type="PauseCommand" date="Wed Feb 24 16:34:55 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="472776">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1461]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="435" _type="RunCommand" date="Wed Feb 24 16:34:55 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="472776" type="Run" />
  <Command __id="437" _type="RunCommand" date="Wed Feb 24 16:34:55 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="472777" type="Run" />
  <Command __id="438" _type="ConsoleOutput" date="Wed Feb 24 16:34:56 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="473619" type="ConsoleOutput">
    <outputString><![CDATA[Reading 16
Reading 17
Reading 18
Reading 19
Reading 20
Reading 21
Reading 22
Reading 23
Reading 24
Reading 26
Reading 27
Reading 28
Reading 29
Reading 30
Reading 31
Reading 32
Reading 33
Reading pd1
Reading pd2
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Log2013-09-15-15-38-06-069.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading 16¶Reading 17¶Reading 18¶Reading 19¶Reading 20¶Reading 21¶Reading 22¶Reading 23¶Reading 24¶Reading 26¶Reading 27¶Reading 28¶Reading 29¶Reading 30¶Reading 31¶Reading 32¶Reading 33¶Reading pd1¶Reading pd2¶"), Diff(INSERT,"Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Log2013-09-15-15-38-06-069.xml¶")]]]></diff>
  </Command>
  <Command __id="439" _type="ShellCommand" date="Wed Feb 24 16:34:56 EST 2021" starttimestamp="1614202022735" timestamp="474236" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="440" _type="ShellCommand" date="Wed Feb 24 16:34:57 EST 2021" starttimestamp="1614202022735" timestamp="474428" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="442" _type="PauseCommand" date="Wed Feb 24 16:35:03 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="481105">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6677]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="441" _type="ShellCommand" date="Wed Feb 24 16:35:03 EST 2021" starttimestamp="1614202022735" timestamp="481105" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="444" _type="PauseCommand" date="Wed Feb 24 16:35:11 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="488641">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7536]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="443" _type="ConsoleOutput" date="Wed Feb 24 16:35:11 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="488641" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest\Log2013-09-15-15-38-06-069.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest\Log2013-09-15-15-38-06-069.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 16¶Reading 17¶Reading 18¶Reading 19¶Reading 20¶Reading 21¶Reading 22¶Reading 23¶Reading 24¶Reading 26¶Reading 27¶Reading 28¶Reading 29¶Reading 30¶Reading 31¶Reading 32¶Reading 33¶Reading pd1¶Reading pd2¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest\Log2013-09-15-15-38-06-069.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\"), Diff(INSERT,"Rest\"), Diff(EQUAL,"Log2013-09-15-15-38-06-069.xml¶")]]]></diff>
  </Command>
  <Command __id="445" _type="RunCommand" date="Wed Feb 24 16:35:11 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="488966" type="Debug" />
  <Command __id="446" _type="RunCommand" date="Wed Feb 24 16:35:11 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="488967" type="Run" />
  <Command __id="447" _type="RunCommand" date="Wed Feb 24 16:35:11 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="488967" type="Debug" />
  <Command __id="448" _type="RunCommand" date="Wed Feb 24 16:35:11 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="488967" type="Run" />
  <Command __id="450" _type="PauseCommand" date="Wed Feb 24 16:35:15 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="492740">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3773]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="449" _type="ShellCommand" date="Wed Feb 24 16:35:15 EST 2021" starttimestamp="1614202022735" timestamp="492740" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="451" _type="MoveCaretCommand" caretOffset="1170" date="Wed Feb 24 16:35:15 EST 2021" docOffset="1467" starttimestamp="1614202022735" timestamp="492851" />
  <Command __id="453" _type="PauseCommand" date="Wed Feb 24 16:35:16 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="493878">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1027]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="454" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Wed Feb 24 16:35:16 EST 2021" starttimestamp="1614202022735" timestamp="493898" />
  <Command __id="455" _type="MoveCaretCommand" caretOffset="1293" date="Wed Feb 24 16:35:17 EST 2021" docOffset="1590" starttimestamp="1614202022735" timestamp="494532" />
  <Command __id="456" _type="MoveCaretCommand" caretOffset="1237" date="Wed Feb 24 16:35:17 EST 2021" docOffset="1534" starttimestamp="1614202022735" timestamp="494939" />
  <Command __id="458" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Wed Feb 24 16:35:17 EST 2021" starttimestamp="1614202022735" timestamp="495148" />
  <Command __id="460" _type="PauseCommand" date="Wed Feb 24 16:35:19 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="496324">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1176]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="459" _type="MoveCaretCommand" caretOffset="1384" date="Wed Feb 24 16:35:19 EST 2021" docOffset="1681" starttimestamp="1614202022735" timestamp="496324" />
  <Command __id="462" _type="PauseCommand" date="Wed Feb 24 16:35:21 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="498434">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2110]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="461" _type="ShellCommand" date="Wed Feb 24 16:35:21 EST 2021" starttimestamp="1614202022735" timestamp="498434" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="463" _type="ShellCommand" date="Wed Feb 24 16:35:22 EST 2021" starttimestamp="1614202022735" timestamp="499401" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="464" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:35:22 EST 2021" starttimestamp="1614202022735" timestamp="499548" />
  <Command __id="465" _type="EclipseCommand" commandID="" date="Wed Feb 24 16:35:22 EST 2021" starttimestamp="1614202022735" timestamp="499627" />
  <Command __id="466" _type="RunCommand" date="Wed Feb 24 16:35:22 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="499658" type="Run" />
  <Command __id="467" _type="RunCommand" date="Wed Feb 24 16:35:22 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="499658" type="Run" />
  <Command __id="468" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="500518" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Rest\Log2013-09-13-14-54-59-878.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file"), Diff(INSERT,"Reading student Eclipse¶Particpant"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"22"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\Rest"), Diff(DELETE,"\Log2013-09-15-15-38-06-069.xml¶Finished writing to file"), Diff(INSERT," has 1 file(s)¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"22"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"-1"), Diff(DELETE,"5-38-06-069"), Diff(INSERT,"4-54-59-878"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="469" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="500760" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\Rest\Log2013-09-13-09-53-29-705.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Rest\Log2013-09-17-10-06-32-242.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-13-"), Diff(DELETE,"14-54-59-878"), Diff(INSERT,"09-53-29-705.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Rest\Log2013-09-17-10-06-32-242"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="470" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="500864" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\Rest\Log2013-09-12-15-05-47-820.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"3-09-53-29-705.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Rest\Log2013-09-17-10-06-32-242"), Diff(INSERT,"2-15-05-47-820"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="471" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="500935" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\Rest\Log2013-09-12-10-40-05-321.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"19"), Diff(INSERT,"20"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"19"), Diff(INSERT,"20"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-12-1"), Diff(DELETE,"5-05-47-820"), Diff(INSERT,"0-40-05-321"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="472" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501005" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\Rest\Log2013-09-16-10-05-18-718.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest\Log2013-09-15-15-38-06-069.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"2"), Diff(INSERT,"6"), Diff(EQUAL,"-10-"), Diff(DELETE,"40-05-321"), Diff(INSERT,"05-18-718.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Rest\Log2013-09-15-15-38-06-069"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="473" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501123" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Rest has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Rest\Log2013-09-14-09-48-24-508.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Rest\Log2013-09-14-10-54-43-267.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Rest has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Rest\Log2013-09-14-12-59-39-052.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Rest\Log2013-09-14-13-40-09-552.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"\Eclipse\Rest has "), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"6-10"), Diff(INSERT,"4-09-48-24-508.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Rest\Log2013"), Diff(EQUAL,"-0"), Diff(DELETE,"5"), Diff(INSERT,"9"), Diff(EQUAL,"-1"), Diff(DELETE,"8-718"), Diff(INSERT,"4-10-54-43-267"), Diff(EQUAL,".xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\Rest has "), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"-1"), Diff(DELETE,"5"), Diff(INSERT,"2-59"), Diff(EQUAL,"-3"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,"-0"), Diff(DELETE,"6-069"), Diff(INSERT,"52.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Rest\Log2013-09-14-13-40-09-552"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="474" _type="ConsoleOutput" date="Wed Feb 24 16:35:23 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501228" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Rest has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Rest\Log2013-09-18-14-39-04-982.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Rest\Log2013-09-18-15-33-03-226.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\Rest\Log2013-09-20-10-17-49-071.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\Rest has 2 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-"), Diff(INSERT,"18-"), Diff(EQUAL,"14-"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"9-"), Diff(DELETE,"48-24-508"), Diff(INSERT,"04-982"), Diff(EQUAL,".xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"4"), Diff(INSERT,"8"), Diff(EQUAL,"-1"), Diff(DELETE,"0-54-4"), Diff(INSERT,"5-33-0"), Diff(EQUAL,"3-2"), Diff(INSERT,"2"), Diff(EQUAL,"6"), Diff(DELETE,"7"), Diff(EQUAL,".xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\Rest has "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-"), Diff(DELETE,"14-12-59-39-052.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Rest\Log2013-09-14-13-40-09-552"), Diff(INSERT,"20-10-17-49-071"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="475" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501334" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\Rest\Log2013-09-20-14-30-38-379.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\Rest has "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-"), Diff(DELETE,"18"), Diff(INSERT,"20"), Diff(EQUAL,"-14-3"), Diff(DELETE,"9-04-982.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Rest\Log2013-09-18-15-33-03-226.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\Rest\Log2013-09-20-10-17-49-071"), Diff(INSERT,"0-38-379"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="476" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501402" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\Rest\Log2013-09-23-12-56-55-221.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\Rest\Log2013-09-11-15-13-48-829.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-2"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"-1"), Diff(DELETE,"4-30-38-37"), Diff(INSERT,"2-56-55-221.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\Rest\Log2013-09-11-15-13-48-82"), Diff(EQUAL,"9.xml¶")]]]></diff>
  </Command>
  <Command __id="477" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501499" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\Rest\Log2013-09-06-16-07-40-790.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\Rest\Log2013-09-13-12-11-53-568.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest\Log2015-02-12-12-35-18-862.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest\Log2015-02-12-12-57-56-864.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"29"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"29"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-"), Diff(DELETE,"23-12-56-55-221"), Diff(INSERT,"06-16-07-40-790"), Diff(EQUAL,".xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\3"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\3"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"\Eclipse\Rest\Log2013-09-1"), Diff(DELETE,"1-15-13-48-829"), Diff(INSERT,"3-12-11-53-568.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest has 2 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest\Log2015-02-12-12-35-18-862.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest\Log2015-02-12-12-57-56-864"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="478" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501576" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest has 18 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-09-23-822.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-30-44-271.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-32-16-955.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-02-09-48-45-037.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-02-09-53-58-501.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-09-47-36-829.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-09-54-11-604.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-08-45-537.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-11-06-680.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-55-07-198.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-11-01-19-061.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-11-54-18-232.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-12-11-54-779.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-12-53-09-775.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-06-57-784.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-13-24-337.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-15-38-180.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-17-08-589.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Rest has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Rest\Log2014-10-04-13-38-06-627.xml
ExceptionCommand EHException  EventLogger utility command
Writing Experiment student 22to Experiment.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"3"), Diff(INSERT,"pd"), Diff(EQUAL,"1\Eclipse\Rest has 1"), Diff(INSERT,"8"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"3"), Diff(INSERT,"pd"), Diff(EQUAL,"1\Eclipse\Rest\Log201"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"-09-"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"6-1"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"-0"), Diff(DELETE,"7-40-790.xml¶Reading student Eclipse¶Particpant"), Diff(INSERT,"9-23-822.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-30-44-271.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-32-16-955.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-02-09-48-45-037.xml¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"32"), Diff(INSERT,"pd1"), Diff(EQUAL,"\Eclipse\Rest"), Diff(DELETE," has 1 file(s)"), Diff(INSERT,"\Log2014-10-02-09-53-58-501.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-09-47-36-829.xml"), Diff(EQUAL,"¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"32"), Diff(INSERT,"pd1"), Diff(EQUAL,"\Eclipse\Rest\Log201"), Diff(DELETE,"3-09-13-12-11-53-568.xml¶Reading student Eclipse¶Particpant"), Diff(INSERT,"4-10-04-09-54-11-604.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-08-45-537.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-11-06-680.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-55-07-198.xml¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"33"), Diff(INSERT,"pd1"), Diff(EQUAL,"\Eclipse\Rest"), Diff(DELETE," has 2 file(s)"), Diff(INSERT,"\Log2014-10-04-11-01-19-061.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-11-54-18-232.xml"), Diff(EQUAL,"¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"33"), Diff(INSERT,"pd1"), Diff(EQUAL,"\Eclipse\Rest\Log201"), Diff(DELETE,"5-02-12-12-35-18-862.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Rest\Log2015-02-12-12-57-56-864.xml"), Diff(INSERT,"4-10-04-12-11-54-779.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-12-53-09-775.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-06-57-784.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-13-24-337.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-15-38-180.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-17-08-589.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Rest\Log2014-10-04-13-38-06-627.xml¶ExceptionCommand EHException  EventLogger utility command¶Writing Experiment student 22to Experiment.csv"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="479" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501673" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 22to Experiment.csv
Writing Experiment student 33to Experiment.csv
written Experiment student 33to Experiment.csv
Writing Experiment student 23to Experiment.csv
written Experiment student 23to Experiment.csv
Writing Experiment student 24to Experiment.csv
written Experiment student 24to Experiment.csv
Writing Experiment student 26to Experiment.csv
written Experiment student 26to Experiment.csv
Writing Experiment student 16to Experiment.csv
written Experiment student 16to Experiment.csv
Writing Experiment student 27to Experiment.csv
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest has 18 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-09-23-822.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-30-44-271.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-09-26-10-32-16-955.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-02-09-48-45-037.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-02-09-53-58-501.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-09-47-36-829.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-09-54-11-604.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-08-45-537.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-11-06-680.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-10-55-07-198.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-11-01-19-061.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-11-54-18-232.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-12-11-54-779.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-12-53-09-775.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-06-57-784.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-13-24-337.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-15-38-180.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Rest\Log2014-10-04-13-17-08-589.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Rest has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Rest\Log2014-10-04-13-38-06-627.xml¶ExceptionCommand EHException  EventLogger utility command"), Diff(INSERT,"written Experiment student 22to Experiment.csv¶Writing Experiment student 33to Experiment.csv¶written Experiment student 33to Experiment.csv¶Writing Experiment student 23to Experiment.csv¶written Experiment student 23to Experiment.csv¶Writing Experiment student 24to Experiment.csv¶written Experiment student 24to Experiment.csv¶Writing Experiment student 26to Experiment.csv¶written Experiment student 26to Experiment.csv¶Writing Experiment student 16to Experiment.csv¶written Experiment student 16to Experiment.csv"), Diff(EQUAL,"¶Writing Experiment student 2"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,"to Experiment.csv¶")]]]></diff>
  </Command>
  <Command __id="480" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501733" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 27to Experiment.csv
Writing Experiment student 17to Experiment.csv
written Experiment student 17to Experiment.csv
Writing Experiment student 28to Experiment.csv
written Experiment student 28to Experiment.csv
Writing Experiment student 18to Experiment.csv
written Experiment student 18to Experiment.csv
Writing Experiment student 29to Experiment.csv
written Experiment student 29to Experiment.csv
Writing Experiment student 19to Experiment.csv
written Experiment student 19to Experiment.csv
Writing Experiment student pd1to Experiment.csv
written Experiment student pd1to Experiment.csv
Writing Experiment student 30to Experiment.csv
written Experiment student 30to Experiment.csv
Writing Experiment student 20to Experiment.csv
written Experiment student 20to Experiment.csv
Writing Experiment student 31to Experiment.csv
written Experiment student 31to Experiment.csv
Writing Experiment student 21to Experiment.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student 2"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,"to Experiment.csv¶Writing Experiment student "), Diff(DELETE,"33"), Diff(INSERT,"17"), Diff(EQUAL,"to Experiment.csv¶written Experiment student "), Diff(DELETE,"33"), Diff(INSERT,"17"), Diff(EQUAL,"to Experiment.csv¶Writing Experiment student 2"), Diff(DELETE,"3"), Diff(INSERT,"8"), Diff(EQUAL,"to Experiment.csv¶written Experiment student 2"), Diff(DELETE,"3"), Diff(INSERT,"8to Experiment.csv¶Writing Experiment student 18to Experiment.csv¶written Experiment student 18"), Diff(EQUAL,"to Experiment.csv¶Writing Experiment student 2"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"to Experiment.csv¶written Experiment student 2"), Diff(DELETE,"4"), Diff(INSERT,"9to Experiment.csv¶Writing Experiment student 19to Experiment.csv¶written Experiment student 19to Experiment.csv¶Writing Experiment student pd1to Experiment.csv¶written Experiment student pd1to Experiment.csv¶Writing Experiment student 30to Experiment.csv¶written Experiment student 30"), Diff(EQUAL,"to Experiment.csv¶Writing Experiment student 2"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"to Experiment.csv¶written Experiment student 2"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"to Experiment.csv¶Writing Experiment student "), Diff(INSERT,"3"), Diff(EQUAL,"1"), Diff(DELETE,"6"), Diff(EQUAL,"to Experiment.csv¶written Experiment student "), Diff(INSERT,"3"), Diff(EQUAL,"1"), Diff(DELETE,"6"), Diff(EQUAL,"to Experiment.csv¶Writing Experiment student 2"), Diff(DELETE,"7"), Diff(INSERT,"1"), Diff(EQUAL,"to Experiment.csv¶")]]]></diff>
  </Command>
  <Command __id="481" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501801" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 21to Experiment.csv
Writing Experiment student 32to Experiment.csv
written Experiment student 32to Experiment.csv
Writing Experiment student pd2to Experiment.csv
written Experiment student pd2to Experiment.csv
Writing Experiment student 22 to ExperimentDistribution.csv
written Experiment student 22to ExperimentDistribution.csv
Writing Experiment student 33 to ExperimentDistribution.csv
written Experiment student 33to ExperimentDistribution.csv
Writing Experiment student 23 to ExperimentDistribution.csv
written Experiment student 23to ExperimentDistribution.csv
Writing Experiment student 24 to ExperimentDistribution.csv
written Experiment student 24to ExperimentDistribution.csv
Writing Experiment student 26 to ExperimentDistribution.csv
written Experiment student 26to ExperimentDistribution.csv
Writing Experiment student 16 to ExperimentDistribution.csv
written Experiment student 16to ExperimentDistribution.csv
Writing Experiment student 27 to ExperimentDistribution.csv
written Experiment student 27to ExperimentDistribution.csv
Writing Experiment student 17 to ExperimentDistribution.csv
written Experiment student 17to ExperimentDistribution.csv
Writing Experiment student 28 to ExperimentDistribution.csv
written Experiment student 28to ExperimentDistribution.csv
Writing Experiment student 18 to ExperimentDistribution.csv
written Experiment student 18to ExperimentDistribution.csv
Writing Experiment student 29 to ExperimentDistribution.csv
written Experiment student 29to ExperimentDistribution.csv
Writing Experiment student 19 to ExperimentDistribution.csv
written Experiment student 19to ExperimentDistribution.csv
Writing Experiment student pd1 to ExperimentDistribution.csv
written Experiment student pd1to ExperimentDistribution.csv
Writing Experiment student 30 to ExperimentDistribution.csv
written Experiment student 30to ExperimentDistribution.csv
Writing Experiment student 20 to ExperimentDistribution.csv
written Experiment student 20to ExperimentDistribution.csv
Writing Experiment student 31 to ExperimentDistribution.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student 2"), Diff(DELETE,"7"), Diff(INSERT,"1to Experiment.csv¶Writing Experiment student 32to Experiment.csv¶written Experiment student 32to Experiment.csv¶Writing Experiment student pd2to Experiment.csv¶written Experiment student pd2to Experiment.csv¶Writing Experiment student 22 to ExperimentDistribution.csv¶written Experiment student 22"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student "), Diff(DELETE,"17"), Diff(INSERT,"33 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student "), Diff(DELETE,"17"), Diff(INSERT,"33"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student 2"), Diff(DELETE,"8"), Diff(INSERT,"3 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student 2"), Diff(DELETE,"8"), Diff(INSERT,"3"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student "), Diff(DELETE,"18"), Diff(INSERT,"24 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student "), Diff(DELETE,"18"), Diff(INSERT,"24"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student 2"), Diff(DELETE,"9"), Diff(INSERT,"6 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student 2"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student 1"), Diff(DELETE,"9"), Diff(INSERT,"6 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student 1"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student "), Diff(DELETE,"pd1"), Diff(INSERT,"27 to ExperimentDistribution.csv¶written Experiment student 27to ExperimentDistribution.csv¶Writing Experiment student 17 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student "), Diff(DELETE,"pd1"), Diff(INSERT,"17to ExperimentDistribution.csv¶Writing Experiment student 28 to ExperimentDistribution.csv¶written Experiment student 28"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student "), Diff(DELETE,"30"), Diff(INSERT,"18 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student "), Diff(DELETE,"30"), Diff(INSERT,"18"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student 2"), Diff(DELETE,"0"), Diff(INSERT,"9 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student 2"), Diff(DELETE,"0"), Diff(INSERT,"9to ExperimentDistribution.csv¶Writing Experiment student 19 to ExperimentDistribution.csv¶written Experiment student 19"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student "), Diff(DELETE,"31"), Diff(INSERT,"pd1 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student "), Diff(DELETE,"31"), Diff(INSERT,"pd1to ExperimentDistribution.csv¶Writing Experiment student 30 to ExperimentDistribution.csv¶written Experiment student 30"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student 2"), Diff(DELETE,"1"), Diff(INSERT,"0 to ExperimentDistribution.csv¶written Experiment student 20to ExperimentDistribution.csv¶Writing Experiment student 31 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶")]]]></diff>
  </Command>
  <Command __id="482" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501859" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 31to ExperimentDistribution.csv
Writing Experiment student 21 to ExperimentDistribution.csv
written Experiment student 21to ExperimentDistribution.csv
Writing Experiment student 32 to ExperimentDistribution.csv
written Experiment student 32to ExperimentDistribution.csv
Writing Experiment student pd2 to ExperimentDistribution.csv
written Experiment student pd2to ExperimentDistribution.csv
Writing Experiment student 22 to ExperimentPauseDistribution.csv
written Experiment student 22to ExperimentPauseDistribution.csv
Writing Experiment student 33 to ExperimentPauseDistribution.csv
written Experiment student 33to ExperimentPauseDistribution.csv
Writing Experiment student 23 to ExperimentPauseDistribution.csv
written Experiment student 23to ExperimentPauseDistribution.csv
Writing Experiment student 24 to ExperimentPauseDistribution.csv
written Experiment student 24to ExperimentPauseDistribution.csv
Writing Experiment student 26 to ExperimentPauseDistribution.csv
written Experiment student 26to ExperimentPauseDistribution.csv
Writing Experiment student 16 to ExperimentPauseDistribution.csv
written Experiment student 16to ExperimentPauseDistribution.csv
Writing Experiment student 27 to ExperimentPauseDistribution.csv
written Experiment student 27to ExperimentPauseDistribution.csv
Writing Experiment student 17 to ExperimentPauseDistribution.csv
written Experiment student 17to ExperimentPauseDistribution.csv
Writing Experiment student 28 to ExperimentPauseDistribution.csv
written Experiment student 28to ExperimentPauseDistribution.csv
Writing Experiment student 18 to ExperimentPauseDistribution.csv
written Experiment student 18to ExperimentPauseDistribution.csv
Writing Experiment student 29 to ExperimentPauseDistribution.csv
written Experiment student 29to ExperimentPauseDistribution.csv
Writing Experiment student 19 to ExperimentPauseDistribution.csv
written Experiment student 19to ExperimentPauseDistribution.csv
Writing Experiment student pd1 to ExperimentPauseDistribution.csv
written Experiment student pd1to ExperimentPauseDistribution.csv
Writing Experiment student 30 to ExperimentPauseDistribution.csv
written Experiment student 30to ExperimentPauseDistribution.csv
Writing Experiment student 20 to ExperimentPauseDistribution.csv
written Experiment student 20to ExperimentPauseDistribution.csv
Writing Experiment student 31 to ExperimentPauseDistribution.csv
written Experiment student 31to ExperimentPauseDistribution.csv
Writing Experiment student 21 to ExperimentPauseDistribution.csv
written Experiment student 21to ExperimentPauseDistribution.csv
Writing Experiment student 32 to ExperimentPauseDistribution.csv
written Experiment student 32to ExperimentPauseDistribution.csv
Writing Experiment student pd2 to ExperimentPauseDistribution.csv
written Experiment student pd2to ExperimentPauseDistribution.csv
Writing Experiment student 22 to ExperimentPauseDistribution.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student "), Diff(INSERT,"31to ExperimentDistribution.csv¶Writing Experiment student "), Diff(EQUAL,"21"), Diff(INSERT," "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution.csv¶written Experiment student 21to ExperimentDistribution"), Diff(EQUAL,".csv¶Writing Experiment student 32"), Diff(INSERT," "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student 32to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student pd2"), Diff(INSERT," "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶written Experiment student pd2to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,".csv¶Writing Experiment student 22 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 22to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 33 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 33to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 23 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 23to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 24 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 24to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 26 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 26to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 16 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 16to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 27 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 27to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 17 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 17to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 28 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 28to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 18 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 18to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 29 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 29to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 19 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 19to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student pd1 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student pd1to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 30 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 30to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 20 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶written Experiment student 20to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"Distribution.csv¶Writing Experiment student 31 to Experiment"), Diff(INSERT,"PauseDistribution.csv¶written Experiment student 31to ExperimentPauseDistribution.csv¶Writing Experiment student 21 to ExperimentPauseDistribution.csv¶written Experiment student 21to ExperimentPauseDistribution.csv¶Writing Experiment student 32 to ExperimentPauseDistribution.csv¶written Experiment student 32to ExperimentPauseDistribution.csv¶Writing Experiment student pd2 to ExperimentPauseDistribution.csv¶written Experiment student pd2to ExperimentPauseDistribution.csv¶Writing Experiment student 22 to ExperimentPause"), Diff(EQUAL,"Distribution.csv¶")]]]></diff>
  </Command>
  <Command __id="483" _type="ConsoleOutput" date="Wed Feb 24 16:35:24 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="501915" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 22to ExperimentPauseDistribution.csv
Writing Experiment student 33 to ExperimentPauseDistribution.csv
written Experiment student 33to ExperimentPauseDistribution.csv
Writing Experiment student 23 to ExperimentPauseDistribution.csv
written Experiment student 23to ExperimentPauseDistribution.csv
Writing Experiment student 24 to ExperimentPauseDistribution.csv
written Experiment student 24to ExperimentPauseDistribution.csv
Writing Experiment student 26 to ExperimentPauseDistribution.csv
written Experiment student 26to ExperimentPauseDistribution.csv
Writing Experiment student 16 to ExperimentPauseDistribution.csv
written Experiment student 16to ExperimentPauseDistribution.csv
Writing Experiment student 27 to ExperimentPauseDistribution.csv
written Experiment student 27to ExperimentPauseDistribution.csv
Writing Experiment student 17 to ExperimentPauseDistribution.csv
written Experiment student 17to ExperimentPauseDistribution.csv
Writing Experiment student 28 to ExperimentPauseDistribution.csv
written Experiment student 28to ExperimentPauseDistribution.csv
Writing Experiment student 18 to ExperimentPauseDistribution.csv
written Experiment student 18to ExperimentPauseDistribution.csv
Writing Experiment student 29 to ExperimentPauseDistribution.csv
written Experiment student 29to ExperimentPauseDistribution.csv
Writing Experiment student 19 to ExperimentPauseDistribution.csv
written Experiment student 19to ExperimentPauseDistribution.csv
Writing Experiment student pd1 to ExperimentPauseDistribution.csv
written Experiment student pd1to ExperimentPauseDistribution.csv
Writing Experiment student 30 to ExperimentPauseDistribution.csv
written Experiment student 30to ExperimentPauseDistribution.csv
Writing Experiment student 20 to ExperimentPauseDistribution.csv
written Experiment student 20to ExperimentPauseDistribution.csv
Writing Experiment student 31 to ExperimentPauseDistribution.csv
written Experiment student 31to ExperimentPauseDistribution.csv
Writing Experiment student 21 to ExperimentPauseDistribution.csv
written Experiment student 21to ExperimentPauseDistribution.csv
Writing Experiment student 32 to ExperimentPauseDistribution.csv
written Experiment student 32to ExperimentPauseDistribution.csv
Writing Experiment student pd2 to ExperimentPauseDistribution.csv
written Experiment student pd2to ExperimentPauseDistribution.csv
Writing Experiment student 22 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"written Experiment student 31to ExperimentDistribution.csv¶Writing Experiment student 21 to ExperimentDistribution.csv¶written Experiment student 21to ExperimentDistribution.csv¶Writing Experiment student 32 to ExperimentDistribution.csv¶written Experiment student 32to ExperimentDistribution.csv¶Writing Experiment student pd2 to ExperimentDistribution.csv¶written Experiment student pd2to ExperimentDistribution.csv¶Writing Experiment student 22 to ExperimentPauseDistribution.csv¶"), Diff(EQUAL,"written Experiment student 22to ExperimentPauseDistribution.csv¶Writing Experiment student 33 to ExperimentPauseDistribution.csv¶written Experiment student 33to ExperimentPauseDistribution.csv¶Writing Experiment student 23 to ExperimentPauseDistribution.csv¶written Experiment student 23to ExperimentPauseDistribution.csv¶Writing Experiment student 24 to ExperimentPauseDistribution.csv¶written Experiment student 24to ExperimentPauseDistribution.csv¶Writing Experiment student 26 to ExperimentPauseDistribution.csv¶written Experiment student 26to ExperimentPauseDistribution.csv¶Writing Experiment student 16 to ExperimentPauseDistribution.csv¶written Experiment student 16to ExperimentPauseDistribution.csv¶Writing Experiment student 27 to ExperimentPauseDistribution.csv¶written Experiment student 27to ExperimentPauseDistribution.csv¶Writing Experiment student 17 to ExperimentPauseDistribution.csv¶written Experiment student 17to ExperimentPauseDistribution.csv¶Writing Experiment student 28 to ExperimentPauseDistribution.csv¶written Experiment student 28to ExperimentPauseDistribution.csv¶Writing Experiment student 18 to ExperimentPauseDistribution.csv¶written Experiment student 18to ExperimentPauseDistribution.csv¶Writing Experiment student 29 to ExperimentPauseDistribution.csv¶written Experiment student 29to ExperimentPauseDistribution.csv¶Writing Experiment student 19 to ExperimentPauseDistribution.csv¶written Experiment student 19to ExperimentPauseDistribution.csv¶Writing Experiment student pd1 to ExperimentPauseDistribution.csv¶written Experiment student pd1to ExperimentPauseDistribution.csv¶Writing Experiment student 30 to ExperimentPauseDistribution.csv¶written Experiment student 30to ExperimentPauseDistribution.csv¶Writing Experiment student 20 to ExperimentPauseDistribution.csv¶written Experiment student 20to ExperimentPauseDistribution.csv¶Writing Experiment student 31 to ExperimentPauseDistribution.csv¶written Experiment student 31to ExperimentPauseDistribution.csv¶Writing Experiment student 21 to ExperimentPauseDistribution.csv¶written Experiment student 21to ExperimentPauseDistribution.csv¶Writing Experiment student 32 to ExperimentPauseDistribution.csv¶written Experiment student 32to ExperimentPauseDistribution.csv¶Writing Experiment student pd2 to ExperimentPauseDistribution.csv¶written Experiment student pd2to ExperimentPauseDistribution.csv¶Writing Experiment student 22 to Experiment"), Diff(DELETE,"PauseDistribution"), Diff(INSERT,"WebStats"), Diff(EQUAL,".csv¶")]]]></diff>
  </Command>
  <Command __id="485" _type="PauseCommand" date="Wed Feb 24 16:35:27 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="504385">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2470]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="484" _type="ShellCommand" date="Wed Feb 24 16:35:27 EST 2021" starttimestamp="1614202022735" timestamp="504385" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="487" _type="PauseCommand" date="Wed Feb 24 16:35:28 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="505654">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1269]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="486" _type="ConsoleOutput" date="Wed Feb 24 16:35:28 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="505654" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 33 to ExperimentWebStats.csv
Writing Experiment student 23 to ExperimentWebStats.csv
Writing Experiment student 24 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"written Experiment student 22to ExperimentPauseDistribution.csv¶Writing Experiment student 33 to ExperimentPauseDistribution.csv¶written Experiment student 33to ExperimentPauseDistribution.csv¶Writing Experiment student 23 to ExperimentPauseDistribution.csv¶written Experiment student 23to ExperimentPauseDistribution.csv¶Writing Experiment student 24 to ExperimentPauseDistribution.csv¶written Experiment student 24to ExperimentPauseDistribution.csv¶Writing Experiment student 26 to ExperimentPauseDistribution.csv¶written Experiment student 26to ExperimentPauseDistribution.csv¶Writing Experiment student 16 to ExperimentPauseDistribution.csv¶written Experiment student 16to ExperimentPauseDistribution.csv¶Writing Experiment student 27 to ExperimentPauseDistribution.csv¶written Experiment student 27to ExperimentPauseDistribution.csv¶Writing Experiment student 17 to ExperimentPauseDistribution.csv¶written Experiment student 17to ExperimentPauseDistribution.csv¶Writing Experiment student 28 to ExperimentPauseDistribution.csv¶written Experiment student 28to ExperimentPauseDistribution.csv¶Writing Experiment student 18 to ExperimentPauseDistribution.csv¶written Experiment student 18to ExperimentPauseDistribution.csv¶Writing Experiment student 29 to ExperimentPauseDistribution.csv¶written Experiment student 29to ExperimentPauseDistribution.csv¶Writing Experiment student 19 to ExperimentPauseDistribution.csv¶written Experiment student 19to ExperimentPauseDistribution.csv¶Writing Experiment student pd1 to ExperimentPauseDistribution.csv¶written Experiment student pd1to ExperimentPauseDistribution.csv¶Writing Experiment student 30 to ExperimentPauseDistribution.csv¶written Experiment student 30to ExperimentPauseDistribution.csv¶Writing Experiment student 20 to ExperimentPauseDistribution.csv¶written Experiment student 20to ExperimentPauseDistribution.csv¶Writing Experiment student 31 to ExperimentPauseDistribution.csv¶written Experiment student 31to ExperimentPauseDistribution.csv¶Writing Experiment student 21 to ExperimentPauseDistribution.csv¶written Experiment student 21to ExperimentPauseDistribution.csv¶Writing Experiment student 32 to ExperimentPauseDistribution.csv¶written Experiment student 32to ExperimentPauseDistribution.csv¶Writing Experiment student pd2 to ExperimentPauseDistribution.csv¶written Experiment student pd2to ExperimentPauseDistribution.csv¶Writing Experiment student 22"), Diff(INSERT,"Writing Experiment student 33 to ExperimentWebStats.csv¶Writing Experiment student 23 to ExperimentWebStats.csv¶Writing Experiment student 24"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="488" _type="ExceptionCommand" date="Wed Feb 24 16:35:28 EST 2021" starttimestamp="1614202022735" timestamp="506046" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: Server returned HTTP response code: 403 for URL: http://www.geom.uiuc.edu/~daeron/docs/apidocs/java.awt.Rectangle.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1900)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="490" _type="PauseCommand" date="Wed Feb 24 16:35:31 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="508368">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2322]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="489" _type="ExceptionCommand" date="Wed Feb 24 16:35:31 EST 2021" starttimestamp="1614202022735" timestamp="508368" type="Exception">
    <exceptionString><![CDATA[java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="492" _type="PauseCommand" date="Wed Feb 24 16:35:33 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="510848">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2480]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="491" _type="ExceptionCommand" date="Wed Feb 24 16:35:33 EST 2021" starttimestamp="1614202022735" timestamp="510848" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://stackoverflow.com/questions/628830/netbeans-tips-and-tricks
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="494" _type="PauseCommand" date="Wed Feb 24 16:35:38 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="515386">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4538]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="493" _type="ExceptionCommand" date="Wed Feb 24 16:35:38 EST 2021" starttimestamp="1614202022735" timestamp="515386" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: http://javalessons.com/cgi-bin/fun/java-programming.cgi?1cd=mev&sid=ao789&j2ee=jsp
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="496" _type="PauseCommand" date="Wed Feb 24 16:35:39 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="516464">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1078]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="495" _type="ExceptionCommand" date="Wed Feb 24 16:35:39 EST 2021" starttimestamp="1614202022735" timestamp="516464" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://javalessons.com/cgi-bin/fun/java-programming.cgi?1cd=mev&sid=ao789&j2ee=jsp
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="498" _type="PauseCommand" date="Wed Feb 24 16:36:00 EST 2021" range="20s-30s" starttimestamp="1614202022735" timestamp="537493">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[21029]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="497" _type="ExceptionCommand" date="Wed Feb 24 16:36:00 EST 2021" starttimestamp="1614202022735" timestamp="537493" type="Exception">
    <exceptionString><![CDATA[java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="500" _type="PauseCommand" date="Wed Feb 24 16:36:21 EST 2021" range="20s-30s" starttimestamp="1614202022735" timestamp="558511">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[21018]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="499" _type="ExceptionCommand" date="Wed Feb 24 16:36:21 EST 2021" starttimestamp="1614202022735" timestamp="558511" type="Exception">
    <exceptionString><![CDATA[java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="502" _type="PauseCommand" date="Wed Feb 24 16:36:26 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="563774">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5263]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="501" _type="ConsoleOutput" date="Wed Feb 24 16:36:26 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="563774" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 26 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"33 to ExperimentWebStats.csv¶Writing Experiment student 23 to ExperimentWebStats.csv¶Writing Experiment student 24"), Diff(INSERT,"26"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="504" _type="PauseCommand" date="Wed Feb 24 16:36:31 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="568535">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4761]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="503" _type="ConsoleOutput" date="Wed Feb 24 16:36:31 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="568535" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 16 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"6 to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="506" _type="PauseCommand" date="Wed Feb 24 16:36:41 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="578478">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9943]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="505" _type="ExceptionCommand" date="Wed Feb 24 16:36:41 EST 2021" starttimestamp="1614202022735" timestamp="578478" type="Exception">
    <exceptionString><![CDATA[java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)
	at sun.security.ssl.InputRecord.read(InputRecord.java:503)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:975)
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:933)
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1593)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="508" _type="PauseCommand" date="Wed Feb 24 16:36:43 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="581120">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2642]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="507" _type="ConsoleOutput" date="Wed Feb 24 16:36:43 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="581120" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 27 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"16"), Diff(INSERT,"27"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="510" _type="PauseCommand" date="Wed Feb 24 16:36:56 EST 2021" range="10s-20s" starttimestamp="1614202022735" timestamp="593282">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12162]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="509" _type="ExceptionCommand" date="Wed Feb 24 16:36:56 EST 2021" starttimestamp="1614202022735" timestamp="593282" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="511" _type="ConsoleOutput" date="Wed Feb 24 16:36:56 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="593799" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 17 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"7 to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="512" _type="ConsoleOutput" date="Wed Feb 24 16:36:57 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="594761" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 28 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"17"), Diff(INSERT,"28"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="514" _type="PauseCommand" date="Wed Feb 24 16:37:00 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="597715">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2954]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="513" _type="ExceptionCommand" date="Wed Feb 24 16:37:00 EST 2021" starttimestamp="1614202022735" timestamp="597715" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="515" _type="ConsoleOutput" date="Wed Feb 24 16:37:01 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="598650" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 18 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"8 to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="517" _type="PauseCommand" date="Wed Feb 24 16:37:03 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="600843">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2193]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="516" _type="ExceptionCommand" date="Wed Feb 24 16:37:03 EST 2021" starttimestamp="1614202022735" timestamp="600843" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: leepoint.net
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
java.net.UnknownHostException: leepoint.net
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
Writing Experiment student 29 to ExperimentWebStats.csv
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="519" _type="PauseCommand" date="Wed Feb 24 16:37:06 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="603318">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2475]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="518" _type="ConsoleOutput" date="Wed Feb 24 16:37:06 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="603318" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 19 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student 1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="521" _type="PauseCommand" date="Wed Feb 24 16:37:08 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="605513">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2195]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="520" _type="ExceptionCommand" date="Wed Feb 24 16:37:08 EST 2021" starttimestamp="1614202022735" timestamp="605513" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fGraphics2D.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="523" _type="PauseCommand" date="Wed Feb 24 16:37:09 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="606625">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1112]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="522" _type="ExceptionCommand" date="Wed Feb 24 16:37:09 EST 2021" starttimestamp="1614202022735" timestamp="606625" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fShape.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="525" _type="PauseCommand" date="Wed Feb 24 16:37:10 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="607990">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1365]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="524" _type="ExceptionCommand" date="Wed Feb 24 16:37:10 EST 2021" starttimestamp="1614202022735" timestamp="607990" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fpackage-tree.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="527" _type="PauseCommand" date="Wed Feb 24 16:37:16 EST 2021" range="5s-10s" starttimestamp="1614202022735" timestamp="613505">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5515]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="526" _type="ExceptionCommand" date="Wed Feb 24 16:37:16 EST 2021" starttimestamp="1614202022735" timestamp="613505" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fevent%2fKeyAdapter.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="528" _type="ConsoleOutput" date="Wed Feb 24 16:37:16 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="613921" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student pd1 to ExperimentWebStats.csv
Writing Experiment student 30 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"19"), Diff(INSERT,"pd1 to ExperimentWebStats.csv¶Writing Experiment student 30"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="529" _type="ConsoleOutput" date="Wed Feb 24 16:37:16 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="613979" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 20 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"pd1 to ExperimentWebStats.csv¶Writing Experiment student 3"), Diff(INSERT,"2"), Diff(EQUAL,"0 to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="531" _type="PauseCommand" date="Wed Feb 24 16:37:19 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="616310">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2331]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="530" _type="ConsoleOutput" date="Wed Feb 24 16:37:19 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="616310" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 31 to ExperimentWebStats.csv
Writing Experiment student 21 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Writing Experiment student 31 to ExperimentWebStats.csv¶"), Diff(EQUAL,"Writing Experiment student 2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="533" _type="PauseCommand" date="Wed Feb 24 16:37:22 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="619703">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3393]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="532" _type="ExceptionCommand" date="Wed Feb 24 16:37:22 EST 2021" starttimestamp="1614202022735" timestamp="619703" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fGraphics.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="534" _type="ExceptionCommand" date="Wed Feb 24 16:37:22 EST 2021" starttimestamp="1614202022735" timestamp="620150" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fGraphics.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="536" _type="PauseCommand" date="Wed Feb 24 16:37:24 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="621332">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1182]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="535" _type="ExceptionCommand" date="Wed Feb 24 16:37:24 EST 2021" starttimestamp="1614202022735" timestamp="621332" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fColor.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="537" _type="ExceptionCommand" date="Wed Feb 24 16:37:24 EST 2021" starttimestamp="1614202022735" timestamp="621484" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fColor.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="539" _type="PauseCommand" date="Wed Feb 24 16:37:25 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="622779">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1295]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="538" _type="ConsoleOutput" date="Wed Feb 24 16:37:25 EST 2021" overflow="false" starttimestamp="1614202022735" timestamp="622779" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 32 to ExperimentWebStats.csv
Writing Experiment student pd2 to ExperimentWebStats.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student 3"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," to ExperimentWebStats.csv¶Writing Experiment student "), Diff(INSERT,"pd"), Diff(EQUAL,"2"), Diff(DELETE,"1"), Diff(EQUAL," to ExperimentWebStats.csv¶")]]]></diff>
  </Command>
  <Command __id="540" _type="RunCommand" date="Wed Feb 24 16:37:25 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="622999" type="Debug" />
  <Command __id="541" _type="RunCommand" date="Wed Feb 24 16:37:25 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="622999" type="Run" />
  <Command __id="542" _type="RunCommand" date="Wed Feb 24 16:37:25 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1614202022735" timestamp="623000" type="Debug" />
  <Command __id="543" _type="RunCommand" date="Wed Feb 24 16:37:25 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614202022735" timestamp="623000" type="Run" />
  <Command __id="545" _type="PauseCommand" date="Wed Feb 24 16:44:04 EST 2021" range="5m-10m" starttimestamp="1614202022735" timestamp="1021989">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[398989]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="544" _type="ShellCommand" date="Wed Feb 24 16:44:04 EST 2021" starttimestamp="1614202022735" timestamp="1021989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="547" _type="PauseCommand" date="Wed Feb 24 16:44:06 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="1024083">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2094]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="546" _type="ShellCommand" date="Wed Feb 24 16:44:06 EST 2021" starttimestamp="1614202022735" timestamp="1024083" type="ECLIPSE_MINIMIZED" />
  <Command __id="548" _type="ShellCommand" date="Wed Feb 24 16:44:06 EST 2021" starttimestamp="1614202022735" timestamp="1024091" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="550" _type="PauseCommand" date="Wed Feb 24 16:59:20 EST 2021" range="10m-30m" starttimestamp="1614202022735" timestamp="1937998">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[913907]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="549" _type="ShellCommand" date="Wed Feb 24 16:59:20 EST 2021" starttimestamp="1614202022735" timestamp="1937998" type="ECLIPSE_MAXIMIZED" />
  <Command __id="551" _type="ShellCommand" date="Wed Feb 24 16:59:20 EST 2021" starttimestamp="1614202022735" timestamp="1938054" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="552" _type="ShellCommand" date="Wed Feb 24 16:59:21 EST 2021" starttimestamp="1614202022735" timestamp="1938664" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="554" _type="PauseCommand" date="Wed Feb 24 16:59:25 EST 2021" range="2s-5s" starttimestamp="1614202022735" timestamp="1943170">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4506]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="553" _type="ShellCommand" date="Wed Feb 24 16:59:25 EST 2021" starttimestamp="1614202022735" timestamp="1943170" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="556" _type="PauseCommand" date="Wed Feb 24 16:59:26 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="1944189">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1019]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="555" _type="ShellCommand" date="Wed Feb 24 16:59:26 EST 2021" starttimestamp="1614202022735" timestamp="1944189" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="557" _type="ShellCommand" date="Wed Feb 24 16:59:27 EST 2021" starttimestamp="1614202022735" timestamp="1944297" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="558" _type="ShellCommand" date="Wed Feb 24 16:59:27 EST 2021" starttimestamp="1614202022735" timestamp="1944702" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="559" _type="ShellCommand" date="Wed Feb 24 16:59:27 EST 2021" starttimestamp="1614202022735" timestamp="1944809" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="561" _type="PauseCommand" date="Wed Feb 24 16:59:29 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="1946330">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1521]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="560" _type="ShellCommand" date="Wed Feb 24 16:59:29 EST 2021" starttimestamp="1614202022735" timestamp="1946330" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="562" _type="ShellCommand" date="Wed Feb 24 16:59:29 EST 2021" starttimestamp="1614202022735" timestamp="1946450" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="564" _type="PauseCommand" date="Wed Feb 24 16:59:30 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="1947567">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1117]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="563" _type="ShellCommand" date="Wed Feb 24 16:59:30 EST 2021" starttimestamp="1614202022735" timestamp="1947567" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="566" _type="PauseCommand" date="Wed Feb 24 17:25:38 EST 2021" range="10m-30m" starttimestamp="1614202022735" timestamp="3516250">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1568683]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="565" _type="ShellCommand" date="Wed Feb 24 17:25:38 EST 2021" starttimestamp="1614202022735" timestamp="3516250" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="567" _type="MoveCaretCommand" caretOffset="1357" date="Wed Feb 24 17:25:39 EST 2021" docOffset="1654" starttimestamp="1614202022735" timestamp="3516307" />
  <Command __id="569" _type="PauseCommand" date="Wed Feb 24 17:25:40 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="3517614">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1307]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="568" _type="ShellCommand" date="Wed Feb 24 17:25:40 EST 2021" starttimestamp="1614202022735" timestamp="3517614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="571" _type="PauseCommand" date="Wed Feb 24 17:25:41 EST 2021" range="1s-2s" starttimestamp="1614202022735" timestamp="3518833">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1219]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="570" _type="ShellCommand" date="Wed Feb 24 17:25:41 EST 2021" starttimestamp="1614202022735" timestamp="3518833" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="572" _type="ShellCommand" date="Wed Feb 24 17:25:41 EST 2021" starttimestamp="1614202022735" timestamp="3518937" type="ECLIPSE_MINIMIZED" />
  <Command __id="573" _type="ShellCommand" date="Wed Feb 24 17:25:41 EST 2021" starttimestamp="1614202022735" timestamp="3518946" type="ECLIPSE_LOST_FOCUS" />
</Events>
