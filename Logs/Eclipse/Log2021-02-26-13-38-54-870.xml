<Events startTimestamp="1614364734870" logVersion="1.0.0.202102091426">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="1357" date="Fri Feb 26 13:38:55 EST 2021" docOffset="1654" starttimestamp="1614364734870" timestamp="296" />
  <Command __id="11" _type="PauseCommand" date="Fri Feb 26 13:44:13 EST 2021" range="5m-10m" starttimestamp="1614364734870" timestamp="318164">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[300033]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="10" _type="EclipseCommand" commandID="" date="Fri Feb 26 13:44:13 EST 2021" starttimestamp="1614364734870" timestamp="318164" />
  <Command __id="12" _type="EclipseCommand" commandID="" date="Fri Feb 26 13:44:13 EST 2021" starttimestamp="1614364734870" timestamp="318166" />
  <Command __id="13" _type="EclipseCommand" commandID="" date="Fri Feb 26 13:44:13 EST 2021" starttimestamp="1614364734870" timestamp="318166" />
  <Command __id="14" _type="EclipseCommand" commandID="" date="Fri Feb 26 13:44:13 EST 2021" starttimestamp="1614364734870" timestamp="318169" />
  <Command __id="16" _type="PauseCommand" date="Fri Feb 26 14:15:40 EST 2021" range="30m-60m" starttimestamp="1614364734870" timestamp="2205910">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1887741]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="15" _type="ShellCommand" date="Fri Feb 26 14:15:40 EST 2021" starttimestamp="1614364734870" timestamp="2205910" type="ECLIPSE_MAXIMIZED" />
  <Command __id="17" _type="ShellCommand" date="Fri Feb 26 14:15:40 EST 2021" starttimestamp="1614364734870" timestamp="2205962" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="18" _type="MoveCaretCommand" caretOffset="1236" date="Fri Feb 26 14:15:41 EST 2021" docOffset="1533" starttimestamp="1614364734870" timestamp="2206499" />
  <Command __id="20" _type="PauseCommand" date="Fri Feb 26 14:15:43 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2208756">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2257]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="19" _type="MoveCaretCommand" caretOffset="1167" date="Fri Feb 26 14:15:43 EST 2021" docOffset="1464" starttimestamp="1614364734870" timestamp="2208756" />
  <Command __id="22" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:15:44 EST 2021" starttimestamp="1614364734870" timestamp="2209606" />
  <Command __id="23" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Fri Feb 26 14:15:45 EST 2021" starttimestamp="1614364734870" timestamp="2210246" />
  <Command __id="25" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:15:46 EST 2021" starttimestamp="1614364734870" timestamp="2211215" />
  <Command __id="27" _type="PauseCommand" date="Fri Feb 26 14:15:47 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2213090">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1875]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="28" _type="MoveCaretCommand" caretOffset="2673" date="Fri Feb 26 14:15:48 EST 2021" docOffset="4154" starttimestamp="1614364734870" timestamp="2213245" />
  <Command __id="30" _type="PauseCommand" date="Fri Feb 26 14:16:06 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2231510">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[18265]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="29" _type="MoveCaretCommand" caretOffset="6580" date="Fri Feb 26 14:16:06 EST 2021" docOffset="8061" starttimestamp="1614364734870" timestamp="2231510" />
  <Command __id="32" _type="InsertStringCommand" date="Fri Feb 26 14:16:06 EST 2021" starttimestamp="1614364734870" timestamp="2231668" timestamp2="2231668">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="33" _type="MoveCaretCommand" caretOffset="6684" date="Fri Feb 26 14:16:06 EST 2021" docOffset="8165" starttimestamp="1614364734870" timestamp="2232022" />
  <Command __id="34" _type="MoveCaretCommand" caretOffset="6581" date="Fri Feb 26 14:16:07 EST 2021" docOffset="8062" starttimestamp="1614364734870" timestamp="2232941" />
  <Command __id="36" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 14:16:08 EST 2021" starttimestamp="1614364734870" timestamp="2233601" />
  <Command __id="38" _type="InsertStringCommand" date="Fri Feb 26 14:16:08 EST 2021" starttimestamp="1614364734870" timestamp="2233877" timestamp2="2233877">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="40" _type="InsertStringCommand" date="Fri Feb 26 14:16:08 EST 2021" starttimestamp="1614364734870" timestamp="2234037" timestamp2="2234037">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="42" _type="InsertStringCommand" date="Fri Feb 26 14:16:09 EST 2021" starttimestamp="1614364734870" timestamp="2234151" timestamp2="2234151">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="44" _type="PauseCommand" date="Fri Feb 26 14:16:10 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2235483">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1332]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="43" _type="MoveCaretCommand" caretOffset="6686" date="Fri Feb 26 14:16:10 EST 2021" docOffset="8167" starttimestamp="1614364734870" timestamp="2235483" />
  <Command __id="46" _type="PauseCommand" date="Fri Feb 26 14:16:23 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2248495">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13012]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="45" _type="MoveCaretCommand" caretOffset="6675" date="Fri Feb 26 14:16:23 EST 2021" docOffset="8156" starttimestamp="1614364734870" timestamp="2248495" />
  <Command __id="47" _type="MoveCaretCommand" caretOffset="6686" date="Fri Feb 26 14:16:23 EST 2021" docOffset="8167" starttimestamp="1614364734870" timestamp="2248852" />
  <Command __id="49" _type="PauseCommand" date="Fri Feb 26 14:16:36 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2261681">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12829]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="48" _type="MoveCaretCommand" caretOffset="6562" date="Fri Feb 26 14:16:36 EST 2021" docOffset="8043" starttimestamp="1614364734870" timestamp="2261681" />
  <Command __id="52" _type="PauseCommand" date="Fri Feb 26 14:16:38 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2263665">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1984]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="51" _type="ShellCommand" date="Fri Feb 26 14:16:38 EST 2021" starttimestamp="1614364734870" timestamp="2263665" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="53" _type="FindCommand" caseSensitive="false" date="Fri Feb 26 14:16:39 EST 2021" forward="true" matchWord="false" offset="8043" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614364734870" timestamp="2264438" wrapSearch="true">
    <searchString><![CDATA[rest]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="55" _type="PauseCommand" date="Fri Feb 26 14:16:41 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2266350">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1912]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="54" _type="FindCommand" caseSensitive="false" date="Fri Feb 26 14:16:41 EST 2021" forward="true" matchWord="false" offset="10993" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614364734870" timestamp="2266350" wrapSearch="true">
    <searchString><![CDATA[rest]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="57" _type="PauseCommand" date="Fri Feb 26 14:16:42 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2267816">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1466]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="56" _type="FindCommand" caseSensitive="false" date="Fri Feb 26 14:16:42 EST 2021" forward="true" matchWord="false" offset="12687" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614364734870" timestamp="2267816" wrapSearch="true">
    <searchString><![CDATA[rest]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="59" _type="PauseCommand" date="Fri Feb 26 14:16:43 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2268894">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1078]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="58" _type="FindCommand" caseSensitive="false" date="Fri Feb 26 14:16:43 EST 2021" forward="true" matchWord="false" offset="16025" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614364734870" timestamp="2268894" wrapSearch="true">
    <searchString><![CDATA[rest]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="61" _type="PauseCommand" date="Fri Feb 26 14:16:49 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2275101">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[6207]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="60" _type="ShellCommand" date="Fri Feb 26 14:16:49 EST 2021" starttimestamp="1614364734870" timestamp="2275101" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="63" _type="PauseCommand" date="Fri Feb 26 14:16:51 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2276657">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1556]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="62" _type="ShellCommand" date="Fri Feb 26 14:16:51 EST 2021" starttimestamp="1614364734870" timestamp="2276657" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="64" _type="ShellCommand" date="Fri Feb 26 14:16:51 EST 2021" starttimestamp="1614364734870" timestamp="2276758" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="65" _type="ShellCommand" date="Fri Feb 26 14:16:51 EST 2021" starttimestamp="1614364734870" timestamp="2277054" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="66" _type="ShellCommand" date="Fri Feb 26 14:16:52 EST 2021" starttimestamp="1614364734870" timestamp="2277252" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="67" _type="MoveCaretCommand" caretOffset="17792" date="Fri Feb 26 14:16:52 EST 2021" docOffset="19273" starttimestamp="1614364734870" timestamp="2277305" />
  <Command __id="69" _type="PauseCommand" date="Fri Feb 26 14:16:55 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2281071">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3766]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="68" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.folding.collapse_all" date="Fri Feb 26 14:16:55 EST 2021" starttimestamp="1614364734870" timestamp="2281071" />
  <Command __id="71" _type="PauseCommand" date="Fri Feb 26 14:17:39 EST 2021" range="30s-1m" starttimestamp="1614364734870" timestamp="2324585">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[43514]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="70" _type="MoveCaretCommand" caretOffset="5360" date="Fri Feb 26 14:17:39 EST 2021" docOffset="8028" starttimestamp="1614364734870" timestamp="2324585" />
  <Command __id="73" _type="PauseCommand" date="Fri Feb 26 14:17:43 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2328599">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4014]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="72" _type="MoveCaretCommand" caretOffset="5499" date="Fri Feb 26 14:17:43 EST 2021" docOffset="8167" starttimestamp="1614364734870" timestamp="2328599" />
  <Command __id="75" _type="PauseCommand" date="Fri Feb 26 14:17:49 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2334295">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5696]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="74" _type="SelectTextCommand" caretOffset="5499" date="Fri Feb 26 14:17:49 EST 2021" end="5559" start="5499" starttimestamp="1614364734870" timestamp="2334295" />
  <Command __id="76" _type="MoveCaretCommand" caretOffset="5517" date="Fri Feb 26 14:17:49 EST 2021" docOffset="8185" starttimestamp="1614364734870" timestamp="2334879" />
  <Command __id="78" _type="PauseCommand" date="Fri Feb 26 14:18:03 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2348291">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13412]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="77" _type="SelectTextCommand" caretOffset="2595" date="Fri Feb 26 14:18:03 EST 2021" end="2595" start="2216" starttimestamp="1614364734870" timestamp="2348291" />
  <Command __id="80" _type="PauseCommand" date="Fri Feb 26 14:18:06 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2352035">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3744]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="86" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:18:07 EST 2021" starttimestamp="1614364734870" timestamp="2352188" />
  <Command __id="88" _type="PauseCommand" date="Fri Feb 26 14:18:08 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2353645">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1457]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="87" _type="MoveCaretCommand" caretOffset="2238" date="Fri Feb 26 14:18:08 EST 2021" docOffset="4906" starttimestamp="1614364734870" timestamp="2353645" />
  <Command __id="90" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:18:08 EST 2021" starttimestamp="1614364734870" timestamp="2353783" />
  <Command __id="92" _type="PauseCommand" date="Fri Feb 26 14:18:19 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2365043">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11260]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="91" _type="MoveCaretCommand" caretOffset="3250" date="Fri Feb 26 14:18:19 EST 2021" docOffset="5918" starttimestamp="1614364734870" timestamp="2365043" />
  <Command __id="94" _type="PauseCommand" date="Fri Feb 26 14:18:24 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2369444">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4401]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="93" _type="SelectTextCommand" caretOffset="3418" date="Fri Feb 26 14:18:24 EST 2021" end="3418" start="3267" starttimestamp="1614364734870" timestamp="2369444" />
  <Command __id="98" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:18:24 EST 2021" starttimestamp="1614364734870" timestamp="2369628" />
  <Command __id="99" _type="MoveCaretCommand" caretOffset="3424" date="Fri Feb 26 14:18:24 EST 2021" docOffset="6092" starttimestamp="1614364734870" timestamp="2370029" />
  <Command __id="101" _type="PauseCommand" date="Fri Feb 26 14:18:28 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2373476">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3447]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="100" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Feb 26 14:18:28 EST 2021" starttimestamp="1614364734870" timestamp="2373476" />
  <Command __id="102" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:18:28 EST 2021" starttimestamp="1614364734870" timestamp="2373616" />
  <Command __id="103" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:18:29 EST 2021" starttimestamp="1614364734870" timestamp="2374345" />
  <Command __id="105" _type="PauseCommand" date="Fri Feb 26 14:18:30 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2375584">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1239]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="106" _type="MoveCaretCommand" caretOffset="1232" date="Fri Feb 26 14:18:30 EST 2021" docOffset="1529" starttimestamp="1614364734870" timestamp="2375720" />
  <Command __id="108" _type="PauseCommand" date="Fri Feb 26 14:18:33 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2378788">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3068]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="107" _type="ShellCommand" date="Fri Feb 26 14:18:33 EST 2021" starttimestamp="1614364734870" timestamp="2378788" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="110" _type="PauseCommand" date="Fri Feb 26 14:18:35 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2380278">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1490]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="109" _type="ShellCommand" date="Fri Feb 26 14:18:35 EST 2021" starttimestamp="1614364734870" timestamp="2380278" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="111" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:18:35 EST 2021" starttimestamp="1614364734870" timestamp="2380454" />
  <Command __id="112" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:18:35 EST 2021" starttimestamp="1614364734870" timestamp="2380557" />
  <Command __id="113" _type="RunCommand" date="Fri Feb 26 14:18:35 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2380678" type="Run" />
  <Command __id="114" _type="RunCommand" date="Fri Feb 26 14:18:35 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2380678" type="Run" />
  <Command __id="115" _type="ConsoleOutput" date="Fri Feb 26 14:18:36 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2381554" type="ConsoleOutput">
    <outputString><![CDATA[Reading 16
Reading 17
Reading 18
Reading 19
Reading 20
Reading 21
Reading 22
Reading 23
Reading 24
Reading 26
Reading 27
Reading 28
Reading 29
Reading 30
Reading 31
Reading 32
Reading 33
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Log2013-09-15-15-38-06-069.xml
Reading pd1
Reading pd2
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="117" _type="PauseCommand" date="Fri Feb 26 14:18:52 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2397270">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15716]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="116" _type="ConsoleOutput" date="Fri Feb 26 14:18:52 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2397270" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 16¶Reading 17¶Reading 18¶Reading 19¶Reading 20¶Reading 21¶Reading 22¶Reading 23¶Reading 24¶Reading 26¶Reading 27¶Reading 28¶Reading 29¶Reading 30¶Reading 31¶Reading 32¶Reading 33¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-15-15-38-06-069.xml¶"), Diff(DELETE,"Reading pd1¶Reading pd2¶")]]]></diff>
  </Command>
  <Command __id="118" _type="RunCommand" date="Fri Feb 26 14:18:52 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2397576" type="Run" />
  <Command __id="119" _type="RunCommand" date="Fri Feb 26 14:18:52 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2397576" type="Run" />
  <Command __id="121" _type="PauseCommand" date="Fri Feb 26 14:19:08 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2413929">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[16353]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="122" _type="MoveCaretCommand" caretOffset="3424" date="Fri Feb 26 14:19:08 EST 2021" docOffset="6092" starttimestamp="1614364734870" timestamp="2414076" />
  <Command __id="124" _type="PauseCommand" date="Fri Feb 26 14:19:15 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2421089">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7013]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="123" _type="SelectTextCommand" caretOffset="1488" date="Fri Feb 26 14:19:15 EST 2021" end="1488" start="1318" starttimestamp="1614364734870" timestamp="2421089" />
  <Command __id="125" _type="MoveCaretCommand" caretOffset="1422" date="Fri Feb 26 14:19:16 EST 2021" docOffset="4090" starttimestamp="1614364734870" timestamp="2421438" />
  <Command __id="127" _type="PauseCommand" date="Fri Feb 26 14:19:18 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2424060">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2622]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="126" _type="SelectTextCommand" caretOffset="1375" date="Fri Feb 26 14:19:18 EST 2021" end="1375" start="1335" starttimestamp="1614364734870" timestamp="2424060" />
  <Command __id="129" _type="PauseCommand" date="Fri Feb 26 14:19:20 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2425643">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1583]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="130" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 14:19:20 EST 2021" starttimestamp="1614364734870" timestamp="2425652" />
  <Command __id="132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 14:19:20 EST 2021" starttimestamp="1614364734870" timestamp="2425816" />
  <Command __id="138" _type="PauseCommand" date="Fri Feb 26 14:19:23 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2428640">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1562]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="137" _type="RunCommand" date="Fri Feb 26 14:19:23 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2428640" type="Run" />
  <Command __id="139" _type="RunCommand" date="Fri Feb 26 14:19:23 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2428641" type="Run" />
  <Command __id="140" _type="ConsoleOutput" date="Fri Feb 26 14:19:24 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2429540" type="ConsoleOutput">
    <outputString><![CDATA[Reading 16
Reading 17
Reading 18
Reading 19
Reading 20
Reading 21
Reading 22
Reading 23
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\Log2013-09-12-10-40-05-321.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Log2013-09-15-15-38-06-069.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Log2013-09-17-10-06-32-242.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\Log2013-09-13-09-53-29-705.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Log2013-09-13-14-36-31-023.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\Log2013-09-12-15-05-47-820.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\Log2013-09-16-10-05-18-718.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file"), Diff(INSERT,"Reading 16¶Reading 17¶Reading 18¶Reading 19¶Reading 20¶Reading 21¶Reading 22¶Reading 23¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\Log2013-09-15-15-38-06-069.xml¶Finished writing to file"), Diff(INSERT,"Log2013-09-12-10-40-05-321.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Log2013-09-15-15-38-06-069.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\Log2013-09-17-10-06-32-242.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\Log2013-09-13-09-53-29-705.xml¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"22"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld"), Diff(INSERT,"Log2013-09-13-14-36-31-023.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse"), Diff(EQUAL,"\Log2013-09-1"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"-15-"), Diff(DELETE,"38-06-069"), Diff(INSERT,"05-47-820.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\Log2013-09-16-10-05-18-718"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="141" _type="ConsoleOutput" date="Fri Feb 26 14:19:24 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2429652" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-36-31-023.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-36-31-023.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Log2013-09-13-14-39-52-726.xml
Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-39-52-726.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-39-52-726.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Log2013-09-13-14-54-59-878.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 16¶Reading 17¶Reading 18¶Reading 19¶Reading 20¶Reading 21¶Reading 22¶Reading 23¶Reading"), Diff(INSERT,"Writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"20"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"-1"), Diff(DELETE,"0-40-05-321.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\Log2013-09-15-15-38-06-069.xml¶Reading"), Diff(INSERT,"4-36-31-023.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"8"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"7"), Diff(INSERT,"3"), Diff(EQUAL,"-1"), Diff(DELETE,"0-06-32-242"), Diff(INSERT,"4-36-31-023"), Diff(EQUAL,".xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"7"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\Log2013-09-13-"), Diff(DELETE,"09-53-29-705.xml¶Reading"), Diff(INSERT,"14-39-52-726.xml¶Writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-13-14-3"), Diff(DELETE,"6-31-023.xml¶Reading"), Diff(INSERT,"9-52-726.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"-1"), Diff(DELETE,"5-05-47-820"), Diff(INSERT,"4-39-52-726"), Diff(EQUAL,".xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"2"), Diff(EQUAL,"1"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\Log2013-09-1"), Diff(DELETE,"6"), Diff(INSERT,"3"), Diff(EQUAL,"-1"), Diff(DELETE,"0-05-18-71"), Diff(INSERT,"4-54-59-87"), Diff(EQUAL,"8.xml¶")]]]></diff>
  </Command>
  <Command __id="143" _type="PauseCommand" date="Fri Feb 26 14:19:25 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2430781">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="142" _type="ShellCommand" date="Fri Feb 26 14:19:25 EST 2021" starttimestamp="1614364734870" timestamp="2430781" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="144" _type="ConsoleOutput" date="Fri Feb 26 14:19:26 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2431351" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\RestOld\Log2013-09-13-09-53-29-705.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\RestOld\Log2013-09-13-09-53-29-705.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-13-"), Diff(DELETE,"14-36-31-023.xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-36-31-023.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Log2013-09-13-14-39-52-726.xml¶Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-39-52-726"), Diff(INSERT,"09-53-29-705"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-13-"), Diff(DELETE,"14-39-52-726.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\Log2013-09-13-14-54-59-878"), Diff(INSERT,"09-53-29-705"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="145" _type="ConsoleOutput" date="Fri Feb 26 14:19:26 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2431488" type="ConsoleOutput">
    <outputString><![CDATA[Reading 24
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Log2013-09-14-09-48-24-508.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\RestOld\Log2013-09-13-09-53-29-705.xml¶Finished writing to file"), Diff(INSERT,"Reading 24¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"17"), Diff(INSERT,"23"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"-09-"), Diff(DELETE,"53-29-705"), Diff(INSERT,"48-24-508"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="146" _type="ConsoleOutput" date="Fri Feb 26 14:19:26 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2431913" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-09-48-24-508.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-09-48-24-508.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Log2013-09-14-10-54-43-267.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 24¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-09-48-24-508.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-14-09-48-24-508.xml¶"), Diff(INSERT,"Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Log2013-09-14-10-54-43-267.xml¶")]]]></diff>
  </Command>
  <Command __id="148" _type="PauseCommand" date="Fri Feb 26 14:19:30 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2435192">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3279]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="147" _type="ShellCommand" date="Fri Feb 26 14:19:30 EST 2021" starttimestamp="1614364734870" timestamp="2435192" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="149" _type="ShellCommand" date="Fri Feb 26 14:19:30 EST 2021" starttimestamp="1614364734870" timestamp="2435496" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="151" _type="PauseCommand" date="Fri Feb 26 14:19:35 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2440899">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5403]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="150" _type="ConsoleOutput" date="Fri Feb 26 14:19:35 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2440899" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-10-54-43-267.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-10-54-43-267.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-"), Diff(DELETE,"09-48-24-508"), Diff(INSERT,"10-54-43-267"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-"), Diff(DELETE,"09-48-24-508.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\Log2013-09-14-"), Diff(EQUAL,"10-54-43-267.xml¶")]]]></diff>
  </Command>
  <Command __id="152" _type="ConsoleOutput" date="Fri Feb 26 14:19:36 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2441493" type="ConsoleOutput">
    <outputString><![CDATA[Reading 26
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Log2013-09-14-12-59-39-052.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-10-54-43-267.xml¶Finished writing to file"), Diff(INSERT,"Reading 26¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-14-1"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"-5"), Diff(DELETE,"4-43-267"), Diff(INSERT,"9-39-052"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="154" _type="PauseCommand" date="Fri Feb 26 14:19:37 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2442558">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1065]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="153" _type="ConsoleOutput" date="Fri Feb 26 14:19:37 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2442558" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-12-59-39-052.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-12-59-39-052.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Log2013-09-14-13-40-09-552.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 26¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-12-59-39-052.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-14-12-59-39-052.xml¶"), Diff(INSERT,"Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Log2013-09-14-13-40-09-552.xml¶")]]]></diff>
  </Command>
  <Command __id="156" _type="PauseCommand" date="Fri Feb 26 14:19:45 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2450187">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7629]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="155" _type="ConsoleOutput" date="Fri Feb 26 14:19:45 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2450187" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\RestOld\Log2013-09-16-10-05-18-718.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\RestOld\Log2013-09-16-10-05-18-718.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"-1"), Diff(DELETE,"2-59-39-052"), Diff(INSERT,"0-05-18-718"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"-1"), Diff(DELETE,"2-59-39-052.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\Log2013"), Diff(INSERT,"0"), Diff(EQUAL,"-0"), Diff(DELETE,"9"), Diff(INSERT,"5"), Diff(EQUAL,"-1"), Diff(DELETE,"4-13-40-09-552"), Diff(INSERT,"8-718"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="157" _type="ConsoleOutput" date="Fri Feb 26 14:19:45 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2450500" type="ConsoleOutput">
    <outputString><![CDATA[Reading 27
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Log2013-09-18-14-39-04-982.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\RestOld\Log2013-09-16-10-05-18-718.xml¶Finished writing to file"), Diff(INSERT,"Reading 27¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"1"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"-1"), Diff(DELETE,"0-05-18-718"), Diff(INSERT,"4-39-04-982"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="159" _type="PauseCommand" date="Fri Feb 26 14:19:46 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2451528">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1028]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="158" _type="ConsoleOutput" date="Fri Feb 26 14:19:46 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2451528" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-14-39-04-982.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-14-39-04-982.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Log2013-09-18-15-33-03-226.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 27¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-14-39-04-982.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-18-14-39-04-982.xml¶"), Diff(INSERT,"Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Log2013-09-18-15-33-03-226.xml¶")]]]></diff>
  </Command>
  <Command __id="161" _type="PauseCommand" date="Fri Feb 26 14:19:52 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2457544">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6016]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="160" _type="ConsoleOutput" date="Fri Feb 26 14:19:52 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2457544" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld\Log2013-09-17-10-06-32-242.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld\Log2013-09-17-10-06-32-242.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"26"), Diff(INSERT,"18"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"8"), Diff(INSERT,"7"), Diff(EQUAL,"-1"), Diff(DELETE,"4-39-04-98"), Diff(INSERT,"0-06-32-24"), Diff(EQUAL,"2.xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"26"), Diff(INSERT,"18"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"8"), Diff(INSERT,"7"), Diff(EQUAL,"-1"), Diff(DELETE,"4-39-04-982.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\Log2013-09-18-15-33-03-226"), Diff(INSERT,"0-06-32-242"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="162" _type="ConsoleOutput" date="Fri Feb 26 14:19:53 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2458502" type="ConsoleOutput">
    <outputString><![CDATA[Reading 28
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\Log2013-09-20-10-17-49-071.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld\Log2013-09-17-10-06-32-242.xml¶Finished writing to file"), Diff(INSERT,"Reading 28¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"18"), Diff(INSERT,"27"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"17-10-06-32-242"), Diff(INSERT,"20-10-17-49-071"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="164" _type="PauseCommand" date="Fri Feb 26 14:19:58 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2463987">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5485]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="163" _type="ConsoleOutput" date="Fri Feb 26 14:19:58 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2463987" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-54-59-878.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-54-59-878.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 28¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-54-59-878.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"27"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"20-10-17-49-071"), Diff(INSERT,"13-14-54-59-878"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="165" _type="ConsoleOutput" date="Fri Feb 26 14:19:59 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2464509" type="ConsoleOutput">
    <outputString><![CDATA[Reading 29
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\Log2013-09-20-14-30-38-379.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-54-59-878.xml¶Finished writing to file"), Diff(INSERT,"Reading 29¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"16"), Diff(INSERT,"28"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"-14-"), Diff(DELETE,"54-59-878"), Diff(INSERT,"30-38-379"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="166" _type="ConsoleOutput" date="Fri Feb 26 14:20:00 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2465331" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\RestOld\Log2013-09-12-10-40-05-321.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\RestOld\Log2013-09-12-10-40-05-321.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 29¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\RestOld\Log2013-09-12-10-40-05-321.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"8"), Diff(INSERT,"0"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"20-14-30-38-379"), Diff(INSERT,"12-10-40-05-321"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="167" _type="ConsoleOutput" date="Fri Feb 26 14:20:00 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2465508" type="ConsoleOutput">
    <outputString><![CDATA[Reading 30
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\Log2013-09-23-12-56-55-221.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\RestOld\Log2013-09-12-10-40-05-321.xml¶Finished writing to file"), Diff(INSERT,"Reading 30¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"0"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"12-10-40-0"), Diff(INSERT,"23-12-56-5"), Diff(EQUAL,"5-"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,"21.xml¶")]]]></diff>
  </Command>
  <Command __id="169" _type="PauseCommand" date="Fri Feb 26 14:20:02 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2467633">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2125]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="168" _type="ConsoleOutput" date="Fri Feb 26 14:20:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2467633" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-15-33-03-226.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-15-33-03-226.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 30¶Reading"), Diff(INSERT,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-15-33-03-226.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"23-12-56-55"), Diff(INSERT,"18-15-33-03"), Diff(EQUAL,"-22"), Diff(DELETE,"1"), Diff(INSERT,"6"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="170" _type="ConsoleOutput" date="Fri Feb 26 14:20:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2467983" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-13-40-09-552.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-13-40-09-552.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"6"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"8"), Diff(INSERT,"4"), Diff(EQUAL,"-1"), Diff(DELETE,"5-33-03-226"), Diff(INSERT,"3-40-09-552"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"6"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"8"), Diff(INSERT,"4"), Diff(EQUAL,"-1"), Diff(DELETE,"5-33-03-226"), Diff(INSERT,"3-40-09-552"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="171" _type="ConsoleOutput" date="Fri Feb 26 14:20:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2468509" type="ConsoleOutput">
    <outputString><![CDATA[Reading 31
Reading 32
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\Log2013-09-11-15-13-48-829.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\Log2013-09-06-16-07-40-790.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file"), Diff(INSERT,"Reading 31¶Reading 32¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"24"), Diff(INSERT,"30"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"4"), Diff(INSERT,"1-15"), Diff(EQUAL,"-13-4"), Diff(DELETE,"0-09-552.xml¶Finished writing to file"), Diff(INSERT,"8-829.xml¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"24"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"14-13-40-09-552"), Diff(INSERT,"06-16-07-40-790"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="173" _type="PauseCommand" date="Fri Feb 26 14:20:07 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2472789">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4280]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="172" _type="ConsoleOutput" date="Fri Feb 26 14:20:07 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2472789" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\RestOld\Log2013-09-12-15-05-47-820.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\RestOld\Log2013-09-12-15-05-47-820.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 31¶Reading 32¶Reading"), Diff(INSERT,"Writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"30"), Diff(INSERT,"19"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"-15-"), Diff(DELETE,"13"), Diff(INSERT,"05"), Diff(EQUAL,"-4"), Diff(DELETE,"8"), Diff(INSERT,"7"), Diff(EQUAL,"-82"), Diff(DELETE,"9"), Diff(INSERT,"0"), Diff(EQUAL,".xml¶"), Diff(DELETE,"Reading"), Diff(INSERT,"Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"3"), Diff(EQUAL,"1"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log2013-09-"), Diff(DELETE,"06"), Diff(INSERT,"12"), Diff(EQUAL,"-1"), Diff(DELETE,"6"), Diff(INSERT,"5"), Diff(EQUAL,"-0"), Diff(DELETE,"7"), Diff(INSERT,"5"), Diff(EQUAL,"-4"), Diff(DELETE,"0-79"), Diff(INSERT,"7-82"), Diff(EQUAL,"0.xml¶")]]]></diff>
  </Command>
  <Command __id="174" _type="ConsoleOutput" date="Fri Feb 26 14:20:08 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2473527" type="ConsoleOutput">
    <outputString><![CDATA[Reading 33
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\Log2013-09-13-12-11-53-568.xml
Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld\Log2013-09-13-12-11-53-568.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file"), Diff(INSERT,"Reading 33¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"19"), Diff(INSERT,"32"), Diff(EQUAL,"\Eclipse\"), Diff(DELETE,"RestOld\"), Diff(EQUAL,"Log2013-09-1"), Diff(DELETE,"2-15-05-47-820.xml¶Finished w"), Diff(INSERT,"3-12-11-53-568.xml¶W"), Diff(EQUAL,"riting to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"19"), Diff(INSERT,"32"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"2-15-05-47-820"), Diff(INSERT,"3-12-11-53-568"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="175" _type="ConsoleOutput" date="Fri Feb 26 14:20:08 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2473583" type="ConsoleOutput">
    <outputString><![CDATA[Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld\Log2013-09-13-12-11-53-568.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading 33¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\Log2013-09-13-12-11-53-568.xml¶W"), Diff(INSERT,"Finished w"), Diff(EQUAL,"riting to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld\Log2013-09-13-12-11-53-568.xml¶")]]]></diff>
  </Command>
  <Command __id="176" _type="ExceptionCommand" date="Fri Feb 26 14:20:09 EST 2021" starttimestamp="1614364734870" timestamp="2474571" type="Exception">
    <exceptionString><![CDATA[Reading pd1
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\Log2015-02-12-12-35-18-862.xml
java.lang.NullPointerException
	at logAnalyzer.AExperimentalReplayer$3.run(AExperimentalReplayer.java:162)
	at java.lang.Thread.run(Thread.java:748)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="177" _type="ExceptionCommand" date="Fri Feb 26 14:20:10 EST 2021" starttimestamp="1614364734870" timestamp="2475524" type="Exception">
    <exceptionString><![CDATA[Reading pd2
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\Log2014-09-26-10-09-23-822.xml
java.lang.NullPointerException
	at logAnalyzer.AExperimentalReplayer$3.run(AExperimentalReplayer.java:162)
	at java.lang.Thread.run(Thread.java:748)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="179" _type="PauseCommand" date="Fri Feb 26 14:20:11 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2476524">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1000]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="178" _type="ConsoleOutput" date="Fri Feb 26 14:20:11 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2476524" type="ConsoleOutput">
    <outputString><![CDATA[Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Log2014-10-04-12-25-59-852.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Log2014-10-04-13-38-06-627.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished writing to file"), Diff(INSERT,"Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\Log2014-10-04-12-25-59-852.xml¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"3"), Diff(INSERT,"pd"), Diff(EQUAL,"2\Eclipse\"), Diff(DELETE,"RestOld\Log2013-09-13-12-11-53-568"), Diff(INSERT,"Log2014-10-04-13-38-06-627"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="180" _type="ExceptionCommand" date="Fri Feb 26 14:20:11 EST 2021" starttimestamp="1614364734870" timestamp="2476585" type="Exception">
    <exceptionString><![CDATA[java.lang.NullPointerException
	at logAnalyzer.AExperimentalReplayer$3.run(AExperimentalReplayer.java:162)
	at java.lang.Thread.run(Thread.java:748)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="182" _type="PauseCommand" date="Fri Feb 26 14:20:15 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2480855">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4270]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="181" _type="ConsoleOutput" date="Fri Feb 26 14:20:15 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2480855" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\RestOld\Log2013-09-06-16-07-40-790.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\RestOld\Log2013-09-06-16-07-40-790.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading"), Diff(INSERT,"Writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"pd2"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log201"), Diff(DELETE,"4-10"), Diff(INSERT,"3-09"), Diff(EQUAL,"-0"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"-1"), Diff(DELETE,"2-25-59-852.xml¶Reading"), Diff(INSERT,"6-07-40-790.xml¶Finished writing to file"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"pd2"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\"), Diff(INSERT,"RestOld\"), Diff(EQUAL,"Log201"), Diff(DELETE,"4-10"), Diff(INSERT,"3-09"), Diff(EQUAL,"-0"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"-1"), Diff(DELETE,"3-38-06-627"), Diff(INSERT,"6-07-40-790"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="184" _type="PauseCommand" date="Fri Feb 26 14:20:27 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="2492449">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11594]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="183" _type="ConsoleOutput" date="Fri Feb 26 14:20:27 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2492449" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\RestOld\Log2013-09-23-12-56-55-221.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\RestOld\Log2013-09-23-12-56-55-221.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"31"), Diff(INSERT,"29"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"06-16-07-40-790"), Diff(INSERT,"23-12-56-55-221"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"31"), Diff(INSERT,"29"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"06-16-07-40-790"), Diff(INSERT,"23-12-56-55-221"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="186" _type="PauseCommand" date="Fri Feb 26 14:20:34 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="2499899">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7450]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="185" _type="ConsoleOutput" date="Fri Feb 26 14:20:34 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2499899" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\RestOld\Log2013-09-11-15-13-48-829.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\RestOld\Log2013-09-11-15-13-48-829.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"29"), Diff(INSERT,"30"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"23-12-56-55-221"), Diff(INSERT,"11-15-13-48-829"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"29"), Diff(INSERT,"30"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"23-12-56-55-221"), Diff(INSERT,"11-15-13-48-829"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="188" _type="PauseCommand" date="Fri Feb 26 14:20:36 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="2501780">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1881]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="187" _type="ConsoleOutput" date="Fri Feb 26 14:20:36 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2501780" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\RestOld\Log2013-09-20-10-17-49-071.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\RestOld\Log2013-09-20-10-17-49-071.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"30"), Diff(INSERT,"27"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"11"), Diff(INSERT,"20"), Diff(EQUAL,"-1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,"-1"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"-4"), Diff(DELETE,"8-829"), Diff(INSERT,"9-071"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"30"), Diff(INSERT,"27"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"11"), Diff(INSERT,"20"), Diff(EQUAL,"-1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,"-1"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"-4"), Diff(DELETE,"8-829"), Diff(INSERT,"9-071"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="189" _type="ConsoleOutput" date="Fri Feb 26 14:20:36 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2501920" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"20-10-17-49-071"), Diff(INSERT,"15-15-38-06-069"), Diff(EQUAL,".xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"20-10-17-49-071"), Diff(INSERT,"15-15-38-06-069"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="191" _type="PauseCommand" date="Fri Feb 26 14:20:39 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="2504157">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2237]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="190" _type="ConsoleOutput" date="Fri Feb 26 14:20:39 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="2504157" type="ConsoleOutput">
    <outputString><![CDATA[Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\RestOld\Log2013-09-20-14-30-38-379.xml
Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\RestOld\Log2013-09-20-14-30-38-379.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"15"), Diff(INSERT,"20"), Diff(EQUAL,"-1"), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"-3"), Diff(DELETE,"8-06-06"), Diff(INSERT,"0-38-37"), Diff(EQUAL,"9.xml¶Finished writing to file C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"15"), Diff(INSERT,"20"), Diff(EQUAL,"-1"), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"-3"), Diff(DELETE,"8-06-06"), Diff(INSERT,"0-38-37"), Diff(EQUAL,"9.xml¶")]]]></diff>
  </Command>
  <Command __id="192" _type="RunCommand" date="Fri Feb 26 14:20:39 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2504448" type="Run" />
  <Command __id="193" _type="RunCommand" date="Fri Feb 26 14:20:39 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2504448" type="Run" />
  <Command __id="195" _type="PauseCommand" date="Fri Feb 26 14:36:19 EST 2021" range="10m-30m" starttimestamp="1614364734870" timestamp="3444952">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[940504]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="194" _type="ShellCommand" date="Fri Feb 26 14:36:19 EST 2021" starttimestamp="1614364734870" timestamp="3444952" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="197" _type="PauseCommand" date="Fri Feb 26 14:36:33 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="3458915">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13963]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="196" _type="MoveCaretCommand" caretOffset="1397" date="Fri Feb 26 14:36:33 EST 2021" docOffset="10286" starttimestamp="1614364734870" timestamp="3458915" />
  <Command __id="199" _type="PauseCommand" date="Fri Feb 26 14:36:42 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="3467131">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8216]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="198" _type="SelectTextCommand" caretOffset="1752" date="Fri Feb 26 14:36:42 EST 2021" end="1752" start="1736" starttimestamp="1614364734870" timestamp="3467131" />
  <Command __id="201" _type="PauseCommand" date="Fri Feb 26 14:36:44 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3469816">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2685]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="200" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:36:44 EST 2021" starttimestamp="1614364734870" timestamp="3469816" />
  <Command __id="203" _type="PauseCommand" date="Fri Feb 26 14:36:46 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3471734">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1917]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="202" _type="SelectTextCommand" caretOffset="1752" date="Fri Feb 26 14:36:46 EST 2021" end="1752" start="1736" starttimestamp="1614364734870" timestamp="3471733" />
  <Command __id="205" _type="PauseCommand" date="Fri Feb 26 14:36:59 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="3484487">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[12754]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="204" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:36:59 EST 2021" starttimestamp="1614364734870" timestamp="3484487" />
  <Command __id="207" _type="PauseCommand" date="Fri Feb 26 14:37:11 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="3496846">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12359]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="206" _type="ShellCommand" date="Fri Feb 26 14:37:11 EST 2021" starttimestamp="1614364734870" timestamp="3496846" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="208" _type="ShellCommand" date="Fri Feb 26 14:37:11 EST 2021" starttimestamp="1614364734870" timestamp="3496953" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="210" _type="PauseCommand" date="Fri Feb 26 14:37:14 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3499316">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2363]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="209" _type="MoveCaretCommand" caretOffset="10525" date="Fri Feb 26 14:37:14 EST 2021" docOffset="34012" starttimestamp="1614364734870" timestamp="3499316" />
  <Command __id="212" _type="InsertStringCommand" date="Fri Feb 26 14:37:15 EST 2021" starttimestamp="1614364734870" timestamp="3500165" timestamp2="3500165">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="214" _type="InsertStringCommand" date="Fri Feb 26 14:37:15 EST 2021" starttimestamp="1614364734870" timestamp="3500357" timestamp2="3500357">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="216" _type="InsertStringCommand" date="Fri Feb 26 14:37:15 EST 2021" starttimestamp="1614364734870" timestamp="3500465" timestamp2="3500465">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="217" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Feb 26 14:37:16 EST 2021" starttimestamp="1614364734870" timestamp="3501371" />
  <Command __id="218" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:37:16 EST 2021" starttimestamp="1614364734870" timestamp="3501459" />
  <Command __id="219" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:37:16 EST 2021" starttimestamp="1614364734870" timestamp="3501592" />
  <Command __id="220" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:37:17 EST 2021" starttimestamp="1614364734870" timestamp="3502287" />
  <Command __id="222" _type="PauseCommand" date="Fri Feb 26 14:37:20 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3505329">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3042]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="223" _type="MoveCaretCommand" caretOffset="1232" date="Fri Feb 26 14:37:20 EST 2021" docOffset="1529" starttimestamp="1614364734870" timestamp="3505454" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 13:38:55 EST 2021" docASTNodeCount="150" docActiveCodeLength="1197" docExpressionCount="90" docLength="2822" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="213">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\Driver.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;

import org.json.JSONException;
import org.json.JSONObject;

import analyzer.AnAnalyzer;
import analyzer.Analyzer;

public class Driver {
	private static String classFolderPath = "E:\\testdata\\Fall2020";
	private static String experimentalClassFolderPath = "C:\\Users\\Zhizhou\\OneDrive\\UNC CH\\Junior 1st Sem\\hermes\\git\\Hermes\\Hermes\\data\\ExperimentalData";
	private static Analyzer analyzer;
	private static AReplayer replayer;
	private static int timeout = 5000;
	private static String url = "http://stackoverflow.com/questions/4186835/how-to-add-multiple-components-to-a-jframe";
	
	public static void main(String[] args) {
		analyzer = new AnAnalyzer();
//		replayer = new AReplayer(analyzer);
//		analyzer.addAnalyzerListener(replayer);	
//		replayer.createPauseCommandLogs(classFolderPath);
//		replayer.analyzeFolder(classFolderPath);
		replayer = new AExperimentalReplayer(analyzer);
		((AExperimentalReplayer)replayer).readTimestamp();
//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);
//		String s2 = ((AExperimentalReplayer)replayer).readWebContent2(url);
//		System.out.println(s1.equals(s2));
//		analyzer.addAnalyzerListener(replayer);	
//		replayer.createPauseCommandLogs(experimentalClassFolderPath);
		replayer.analyzeFolder(experimentalClassFolderPath);
//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);
//		String s2 = "";
//		System.out.println();
//		try {
//			s2 = get(url);
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		System.out.println(s1.equals(s2));
//		Date d = new Date(1379108460000L);
//		System.out.println(d);
	}
	
//	public static String get(String urlString) throws Exception{
//         HttpURLConnection httpClient =(HttpURLConnection) new URL(urlString).openConnection();
//        httpClient.setRequestMethod("GET");
//        httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//        int responseCode = httpClient.getResponseCode();
//        System.out.println("Response Code : " + responseCode);
//        try (BufferedReader in = new BufferedReader(
//                new InputStreamReader(httpClient.getInputStream()))) {
//            StringBuilder response = new StringBuilder();
//            String line;
//            while ((line = in.readLine()) != null) {
//                response.append(line);
//            }
//            System.out.println(response.toString());
//            return response.toString();
//        }
//	}
}

















]]></snapshot>
  </Command>
  <DocumentChange __id="21" _type="Delete" date="Fri Feb 26 14:15:44 EST 2021" docASTNodeCount="155" docActiveCodeLength="1260" docExpressionCount="94" docLength="2820" endLine="36" length="2" offset="1440" startLine="36" starttimestamp="1614364734870" timestamp="2209546">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="24" _type="Insert" date="Fri Feb 26 14:15:46 EST 2021" docASTNodeCount="150" docActiveCodeLength="1206" docExpressionCount="90" docLength="2822" length="2" offset="1505" starttimestamp="1614364734870" timestamp="2211192">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="26" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 14:15:47 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35300" docExpressionCount="4290" docLength="37766" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2213090">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\AExperimentalReplayer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.concurrent.CountDownLatch;
import analyzer.Analyzer;
import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import fluorite.commands.ConsoleInput;
import fluorite.commands.ConsoleOutputCommand;
import fluorite.commands.CopyCommand;
import fluorite.commands.Delete;
import fluorite.commands.EHExceptionCommand;
import fluorite.commands.EHICommand;
import fluorite.commands.ExceptionCommand;
import fluorite.commands.GetHelpCommand;
import fluorite.commands.InsertStringCommand;
import fluorite.commands.PasteCommand;
import fluorite.commands.PauseCommand;
import fluorite.commands.Replace;
import fluorite.commands.RequestHelpCommand;
import fluorite.commands.RunCommand;
import fluorite.commands.ShellCommand;
import fluorite.commands.WebCommand;
import jdk.internal.jline.internal.InputStreamReader;

public class AExperimentalReplayer extends AReplayer{
	private Map<String, List<List<EHICommand>>> data;
	private static final int THREAD_LIM = 6;
	private static final String TIMESTAMP = "C:\\Users\\Zhizhou\\Desktop\\timestamp for each participant.csv";
	private Map<String, Long[]> timestamps = new HashMap<>();
	
	public AExperimentalReplayer(Analyzer anAnalyzer) {
		super(anAnalyzer);
		analyzer = anAnalyzer;
		data = new HashMap<>();
		System.setProperty("http.agent", "Chrome");
	}
	
	public void readTimestamp() {
		try {
			SimpleDateFormat df = new SimpleDateFormat("HH:mm");
			File timestampFile = new File(TIMESTAMP);
			CSVReader cr = new CSVReader(new FileReader(timestampFile));
			cr.readNext();
			String[] token = null;
			while ((token = cr.readNext()) != null) {
				long startTime = df.parse(token[4]).getTime();
				if (startTime < 15*3600*1000) {
					startTime += 12*3600*1000;
				}
				long endTime = df.parse(token[5]).getTime();
				if (endTime < 15*3600*1000) {
					endTime += 12*3600*1000;
				}
				Long[] times = {startTime, endTime};
				timestamps.put(token[0], times);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void createPauseCommandLogs(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.out.println("Class Folder does not exist");
			System.exit(0);
		}
		File[] students = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		latch = new CountDownLatch(students.length);
		for (int j = 0; j < students.length; j++) {
			File studentFolder  = students[j];
			File logFolder = new File(studentFolder,"Eclipse");
			if (!logFolder.exists()) {
				latch.countDown();
				continue;
			}
			System.out.println("Reading " + studentFolder.getName());
			File[] logs = new File(logFolder.getPath()).listFiles(new FileFilter() {
				public boolean accept(File pathname) {
					return pathname.getName().startsWith("Log") && pathname.getName().endsWith(".xml");
				}
			});
			Thread thread = new Thread(new Runnable() {
				public void run() {
					if (logs == null || !studentFolder.getName().equals("22")) {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
						return;
					}
//					if (!studentFolder.getName().equals("16")) {
//						synchronized (this) {
//							threadCount--;
//						}
//						latch.countDown();
//						return;
//					}
					try {
						File browser = new File(studentFolder, "Browser");
						List<EHICommand> webCommands = null;
						Iterator<EHICommand> webCommandIterator = null;
						if (browser.exists() && browser.listFiles().length != 0) {
							webCommands = readWebCommands(browser.listFiles()[0]);
							if (webCommands != null) {
								webCommandIterator = webCommands.iterator();
							}
						}
						EHICommand webCommand = null;
						for (File file : logs) {
							
							long startTimestamp = getLogFileCreationTime(file);
							long logStartTimestamp = startTimestamp;
							long endTimestamp = Long.MAX_VALUE;
							if (timestamps.containsKey(studentFolder.getName())) {
								startTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[0] - 60*ONE_MIN;
								endTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[1] - 59*ONE_MIN;
							}
							List<EHICommand> commands = readOneLogFile(file.getPath(), analyzer);
							if (commands.size() < 2) {
								continue;
							}
							List<EHICommand> newCommands = new ArrayList<>();
							EHICommand last = null;
							EHICommand cur = null;
							if (webCommand == null) {
//								webCommand = maybeAddWebCommandBeforeLogs(webCommandIterator, startTimestamp, newCommands);
								webCommand = webCommandIterator.next();
							}
							long timestamp = 0;
							if (webCommand != null) {
								timestamp = webCommand.getTimestamp() - logStartTimestamp;
							}
							for (EHICommand command : commands) {
								if (command.getTimestamp() + logStartTimestamp < startTimestamp || command.getTimestamp() + logStartTimestamp > endTimestamp) {
									continue;
								}
								command.setStartTimestamp(logStartTimestamp);
								if (cur == null) {
									cur = command;
									newCommands.add(command);
								} else {
									last = cur;
									cur = command;
//									boolean webCommandAdded = false;
//									while(webCommand != null && maybeAddWebCommand(newCommands, last, cur, webCommand, webCommandIterator, startTimestamp)) {
//										webCommandAdded = true;
//										last = webCommand;
//										try {
//											webCommand = webCommandIterator.next();
//										} catch (NoSuchElementException e) {
//											webCommand = null;
//										}
//									} 
//									if (!webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
//									}
									
//									boolean added = false;
									while (webCommand != null && timestamp >= last.getTimestamp() && timestamp <= cur.getTimestamp()) {
										webCommand.setStartTimestamp(logStartTimestamp);
										webCommand.setTimestamp(timestamp);
										maybeAddPauseCommand(newCommands, last,	webCommand);
//										webCommandAdded = true;
										if (webCommandIterator.hasNext()) {
											last = webCommand;
											webCommand = webCommandIterator.next();
											timestamp = webCommand.getTimestamp() - logStartTimestamp;
										} else {
											webCommand = null;
											break;
										}
									}
//									if (webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
////										return webCommand;
//									} else {
										maybeAddPauseCommand(newCommands, last, cur);
//									}
								}
							}
							
							String logContent = XML_START1 + getLogFileCreationTime(file) + XML_START2 + XML_VERSION + XML_START3;
							for (EHICommand c : newCommands) {
								logContent += c.persist();
							}
							logContent += XML_FILE_ENDING;
							try {
								File newLog = new File(file.getParent()+File.separator+"Rest"+File.separator+file.getName());
								if (newLog.exists()) {
									newLog.delete();
								}
								if (newCommands.size() == 0) {
									continue;
								}
								newLog.getParentFile().mkdirs();
								newLog.createNewFile();
								BufferedWriter writer = new BufferedWriter(new FileWriter(newLog, true));
								System.out.println("Writing to file " + newLog.getPath());
								writer.write(logContent);
								writer.close();
								System.out.println("Finished writing to file " + newLog.getPath());
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
						
					} catch (Exception e) {
						e.printStackTrace();
					} finally {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
					}
				}							
			});
			while(true) {
				if (threadCount > THREAD_LIM) {
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
				
				if (threadCount <= THREAD_LIM) {
					synchronized (this) {
						threadCount++;
						thread.start();
						break;
					}
				}
			}
		}
		try {
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		} finally {
			System.exit(0);
		}
	}

	public void analyzeFolder(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.exit(0);
		}
		File[] participants = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		for (int i = 0; i < participants.length; i++) {
			File participantFolder = new File(participants[i],"Eclipse");
			if (!participantFolder.exists()) {
				continue;
			}
			System.out.println("Reading student " + participantFolder.getName());
			data.put(participants[i].getName(), replayLogs(participantFolder.getPath(), analyzer));
		}
		List<List<EHICommand>> nestedCommands = data.get("26");
		for (int i = 0; i < nestedCommands.size(); i++) {
			for (EHICommand command:nestedCommands.get(i)) {
				if (command instanceof ExceptionCommand) {
					System.out.println(command);
				}
			}
		}
		createAssignData("Experiment", folder);
		createDistributionData("Experiment", folder);
		createPrevPauseDistribution("Experiment", folder);
//		createNextPauseDistribution("Experiment", folder);
		createWebStats("Experiment", folder);
		System.exit(0);
	}

	private void createAssignData(String assign, File folder) {
		File csv = new File(folder,assign+".csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"Event.csv");
		FileWriter fw2;
		int[] sum = new int[10];
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = {"Student", "Total Time Spent", "Active Time", "Rest Time", "Wall Clock Time", "Pause", "Web Visit", "Insert", "Delete", "Replace", "Copy", "Paste", "Run", "Exception", "Exception Breakdown"};
			cw.writeNext(header);

			if (csv2.exists()) {
				csv2.delete();
			}
			csv2.createNewFile();
			fw2 = new FileWriter(csv2);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header2 = {"case_id", "timestamp", "activity", "user"};
			cw2.writeNext(header2);

			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + "to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				long[] restTime = restTime(nestedCommands, FIVE_MIN, Long.MAX_VALUE);
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
				retVal.add(convertToHourMinuteSecond(restTime[0]));
				retVal.add(convertToHourMinuteSecond(wallClockTime));
				int[] numCommands = new int[9];
				List<String> breakdownList = new ArrayList<>();
				String list = "";
				for (List<EHICommand> commands : nestedCommands) {
					long lastTime = -1;
					long curTime = -1;
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);

						if (i > 0) {
							lastTime = curTime;
						}
						if (command != null) {
							curTime = command.getTimestamp() + command.getStartTimestamp();
						}
						if (lastTime - curTime > 5*60*1000) {
							writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
						}
						if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
							writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
						} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
							writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
						} else if (command instanceof InsertStringCommand || command instanceof CopyCommand ||
								command instanceof Delete ||
								command instanceof Replace || command instanceof PasteCommand || command instanceof ExceptionCommand ||
								command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
								command instanceof RequestHelpCommand || command instanceof GetHelpCommand) {
							writeOneLine(cw2, assign, curTime, getEventType(command), student);
						}
						if (command instanceof PauseCommand) {
							numCommands[0]++;
							list += "A";
						}
						if (command instanceof WebCommand) {
							numCommands[1]++;
							list += "W";
						}
						if (command instanceof InsertStringCommand) {
							numCommands[2]++;
							list += "I";
						}
						if (command instanceof Delete) {
							numCommands[3]++;
							list += "D";
						}
						if (command instanceof Replace) {
							numCommands[4]++;
							list += "R";
						}
						if (command instanceof CopyCommand) {
							numCommands[5]++;
							list += "C";
						}
						if (command instanceof PasteCommand) {
							numCommands[6]++;
							list += "P";
						}
						if (command instanceof RunCommand) {
							numCommands[7]++;
							list += "U";
						}
						if (command instanceof ExceptionCommand || command instanceof EHExceptionCommand) {
							if(isException(command)) {
								if (command instanceof EHExceptionCommand) {
									ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
									ex.setTimestamp(command.getTimestamp());
									ex.setStartTimestamp(command.getStartTimestamp());
								}
								numCommands[8]++;
								list += "E";
								if (i < commands.size()-1) {
									command = commands.get(i+1);
								} else {
									continue;
								}
								while(!(command instanceof InsertStringCommand || command instanceof Replace 
										|| command instanceof Delete 
										|| command instanceof CopyCommand || command instanceof PasteCommand)) {
									if (command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
											command instanceof RequestHelpCommand || command instanceof GetHelpCommand || command instanceof ExceptionCommand ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_LOST_FOCUS")) ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_CLOSED"))) {
										if (i > 0) {
											lastTime = curTime;
										}
										curTime = command.getTimestamp() + command.getStartTimestamp();
										if (lastTime - curTime > 5*60*1000) {
											writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
										}
										if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
											writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
										} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
											writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
										} else {
											writeOneLine(cw2, assign, curTime, getEventType(command), student);
										}
									}
									if ((command instanceof ExceptionCommand || command instanceof EHExceptionCommand) && isException(command)) {
										if (command instanceof EHExceptionCommand) {
											ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
											ex.setTimestamp(command.getTimestamp());
											ex.setStartTimestamp(command.getStartTimestamp());
											if (i > 0) {
												lastTime = curTime;
											}
											curTime = command.getTimestamp() + command.getStartTimestamp();
											if (lastTime - curTime > 5*60*1000) {
												writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
											}
											writeOneLine(cw2, assign, curTime, getEventType(ex), student);
										}
										numCommands[8]++;
										list += "E";
									}
									i++;
									if (i+1 < commands.size()) {
										command = commands.get(i+1);
									} else {
										break;
									}
								}
								breakdownList.add(countConsecutiveCommands(list));
								list = "";
							}
						}
					}
				}
				if (!list.equals("")) {
					breakdownList.add(countConsecutiveCommands(list));
				}
				for(int i = 0; i < numCommands.length; i++) {
					retVal.add(i+5, numCommands[i]+"");
					sum[i] += numCommands[i];
					if (i > 1) {
						sum[9] += numCommands[i];
					}
				}
				for(int i = 0; i < breakdownList.size(); i++) {
					retVal.add(i+14, breakdownList.get(i));
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			List<String> retVal = new ArrayList<>();
			retVal.add("Sum");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			for (int i = 0; i < sum.length; i++) {
				retVal.add(sum[i]+"");
			}
			String[] nextLine = retVal.toArray(new String[1]);
			cw.writeNext(nextLine);
			fw.close();
			cw.close();

			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void createDistributionData(String assign, File folder) {
		File csv = new File(folder,assign+"Distribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getHeader();
			cw.writeNext(header);
			
			String[] sum = new String[header.length];
			long[] restTimeSum = new long[REST.length];
			sum[0] = "Sum";
			for (int i = 1; i < sum.length; i++) {
				sum[i] = "";
			}
			int[] restSum = new int[REST.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				if (totalTime == 0) {
					continue;
				}
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(wallClockTime));

				long[] restTime = {0,0};
				for (int i = 0; i < REST.length; i++) {
					if (i < REST.length-1) {
						restTime = restTime(nestedCommands, REST[i], REST[i+1]);
					} else {
						restTime = restTime(nestedCommands, REST[i], Long.MAX_VALUE);
					}
					retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
					retVal.add(convertToHourMinuteSecond(restTime[0]));
					retVal.add(restTime[1]+"");
					retVal.add(getTime(restTime[1] == 0? 0:1.0*restTime[2]/restTime[1]));
					restSum[i] += restTime[1];
					restTimeSum[i] += restTime[2];
				}
				
				String[] days = daysSpent(nestedCommands);
				if (days != null) {
					for (int i = 0; i < days.length; i++) {
						retVal.add(days[i]);
					}
				}
				
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			int sum2 = 0;
			for (int i = 0; i < restSum.length; i++) {
				sum[4*i+5] = restSum[i]+"";
				sum2 += restSum[i];
				sum[4*i+6] = getTime(restSum[i] == 0? 0:1.0*restTimeSum[i]/restSum[i]);
			}
			sum[1] = sum2+"";
			cw.writeNext(sum);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createPrevPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"PauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] prev = {"Prev"};
			cw.writeNext(prev);
			String[] header = getPauseHeader();
			cw.writeNext(header);

			String[] nextLine = new String[header.length];
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("prevType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
//				String[] nextLine = retVal.toArray(new String[1]);
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
//			String[] nextLine = new String[header.length];
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			String[] empty = {};
			cw.writeNext(empty);
			String[] next = {"next"};
			cw.writeNext(next);
			sum = new int[PauseCommand.TYPES.length];
			sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createWebStats(String assign, File folder) {
		File csv = new File(folder,assign+"WebStats.csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"WebSearches.csv");
		FileWriter fw2;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			if (csv2.exists()) {
				csv2.delete();
			}
			csv.createNewFile();
			csv2.createNewFile();
			fw = new FileWriter(csv);
			fw2 = new FileWriter(csv2);
			CSVWriter cw = new CSVWriter(fw);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header = {"Title", "URL", "# of Visits", "Provided?"};
			String[] header2 = {"ID", "Search Word", "Title", "URL", "Sequence", "Last Page of the Search?", "Pasted Text"};
			cw.writeNext(header);
			cw2.writeNext(header2);

			Map<String, Integer> urls = new HashMap<>();
			Map<String, String> titles = new HashMap<>();
			Map<String, List<String>> searches = new LinkedHashMap<>();
			Map<String, List<String>> contents = new HashMap<>();
			for (String student : data.keySet()) {
				EHICommand lastSearch = null;
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);
						if (command instanceof WebCommand) {
							String url = command.getDataMap().get("URL");
							if (command.getAttributesMap().get("type").equals("Search")) {
								lastSearch = command;
								if (!searches.containsKey(lastSearch.getDataMap().get("keyword"))) {
									searches.put(lastSearch.getDataMap().get("keyword"), new ArrayList<>());
								}
							} 
							if (command.getAttributesMap().get("type").equals("Search Result") || command.getAttributesMap().get("type").equals("Stack Overflow")) {
								String searchWord = "null";
								if (lastSearch != null) {
									searchWord = lastSearch.getDataMap().get("keyword");
								}
								if (!searches.containsKey(searchWord)) {
									searches.put(searchWord, new ArrayList<>());
								}
								searches.get(searchWord).add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									if (!url.contains("google.com")) {
										list.add(readWebContent(url));
//										list.add(readWebContent2(url));
										contents.put(url, list);
									}
								}
							}
							if (command.getAttributesMap().get("type").contains("Provided")) {
								if (!searches.containsKey("Provided")) {
									searches.put("Provided", new ArrayList<>());
								}
								searches.get("Provided").add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									list.add(readWebContent(url));
//									list.add(readWebContent2(url));
									contents.put(url, list);
								}
							}
							urls.merge(url, 1, Integer::sum);
							titles.put(url, command.getDataMap().get("keyword"));
						}
						if (command instanceof PasteCommand) {
							outer:
							for (int j = i-1; j >= 0 && j > i-20; j--) {
								EHICommand command2 = commands.get(j);
								String pastedText = "";
								if (command2 instanceof InsertStringCommand || command2 instanceof Replace) {
									if (command2 instanceof InsertStringCommand) {
										pastedText = command2.getDataMap().get(InsertStringCommand.XML_Data_Tag);
									} else {
										pastedText = command2.getDataMap().get("insertedText");
									}
									if (pastedText.length() > 10) {
										for (String url : contents.keySet()) {
											List<String> list = contents.get(url);
											String pastedText2 = pastedText.replaceAll("\\s", "");
											if (list.get(0).contains(pastedText2)) {
												for (int k = 1; k < list.size(); k++) {
													if (list.get(k).replaceAll("\\s",  "").equals(pastedText2)) {
														break outer;
													}
												}
												list.add(pastedText);
												break outer;
											}
										}
									}
								}
							}
						}
					}
				}
				for (String s : searches.keySet()) {
					List<String> nextLine = new ArrayList<>();
					nextLine.add(student);
					nextLine.add(s);
					if (searches.get(s).size() == 0) {
						nextLine.add("No Result");
						cw2.writeNext(nextLine.toArray(new String[1]));
						continue;
					}
					for (int i = 0; i < searches.get(s).size(); i++) {
						String url = searches.get(s).get(i);
						nextLine.add(titles.get(url));
						nextLine.add(url);
						nextLine.add(i+1+"");
						nextLine.add(i == searches.get(s).size()-1 ? "Last" : "");
						if (contents.containsKey(url)) {
							List<String> list = contents.get(url);
							for (int j = 1; j < list.size(); j++) {
								nextLine.add(list.get(j));
							}
						}
						cw2.writeNext(nextLine.toArray(new String[1]));
						nextLine = new ArrayList<>();
						nextLine.add(student);
						nextLine.add("");
					}
				}
				searches.clear();
			}
			Map<String, Integer> sortedMap = new LinkedHashMap<>();
			urls.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));
			for (String s : sortedMap.keySet()) {
				String[] nextLine = {titles.get(s), s, sortedMap.get(s)+"", isProvided(s)? "Provided":""};
				cw.writeNext(nextLine);
			}
			fw.close();
			cw.close();
			
			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createNextPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"NextPauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getPauseHeader();
			cw.writeNext(header);
			
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			String[] nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private String[] getPauseHeader() {
		List<String> retVal = new ArrayList<>();
		retVal.add("ID");
		for (String s : PauseCommand.TYPES) {
			retVal.add(s);
			retVal.add("Avg. Time");
//			retVal.add("Longest Time");
//			retVal.add("Shortest Time");
		}
		return retVal.toArray(new String[1]);
	}
	
	private void writeOneLine(CSVWriter cw, String assign, long time, String type, String pid) {
		String[] nextLine = new String[4]; 
		nextLine[0] = assign + " " + pid;
		Date date = new Date(time);
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		nextLine[1] = df.format(date);
		nextLine[2] = type;
		nextLine[3] = pid;
		if (nextLine != null) {
			cw.writeNext(nextLine);
		}
	}
	
	public List<List<EHICommand>> replayLogs(String projectPath, Analyzer analyzer){
		List<List<EHICommand>> nestedCommands = analyzer.convertXMLLogToObjects(projectPath+File.separator+"Rest");
		sortNestedCommands(nestedCommands);
		return nestedCommands;
	}

	private void maybeAddPauseCommand(List<EHICommand> newCommands, EHICommand last, EHICommand cur) {
		long rest = cur.getTimestamp()-last.getTimestamp();
		if (rest >= 1*ONE_SECOND) {
			String range = "";
			if (rest < 2*ONE_SECOND) {
				range = "1s-2s";
			} else if (rest < 5*ONE_SECOND) {
				range = "2s-5s";
			} else if (rest < 10*ONE_SECOND) {
				range = "5s-10s";
			} else if (rest < 20*ONE_SECOND) {
				range = "10s-20s";
			} else if (rest < 30*ONE_SECOND) {
				range = "20s-30s";
			} else if (rest < ONE_MIN) {
				range = "30s-1m";
			} else if (rest < TWO_MIN) {
				range = "1m-2m";
			} else if (rest < FIVE_MIN) {
				range = "2m-5m";
			} else if (rest < TEN_MIN) {
				range = "5m-10m";
			} else if (rest < 3*TEN_MIN) {
				range = "10m-30m";
			} else if (rest < 6*TEN_MIN) {
				range = "30m-60m";
			} else {
				range = ">1h";
			}
			PauseCommand rCommnad = new PauseCommand(last, cur, rest, range);
			rCommnad.setStartTimestamp(last.getStartTimestamp());
			rCommnad.setTimestamp(last.getTimestamp()+1);
			newCommands.add(rCommnad);
		} 
		newCommands.add(cur);
	}
	
	private EHICommand maybeAddWebCommandBeforeLogs(Iterator<EHICommand> iterator, long startTimestamp, List<EHICommand> commands) {
		if (iterator == null) {
			return null;
		}
		EHICommand webCommand = null;
		long timestamp = 0;
		while((webCommand = iterator.next()) != null && (timestamp = webCommand.getTimestamp() - startTimestamp) < 0) {
			webCommand.setStartTimestamp(0);
			webCommand.setTimestamp(timestamp);
			commands.add(webCommand);
		}
		return webCommand;
	}

	public String readWebContent(String aURL) {
		String content = "";
		Scanner sc = null;
		try {
			URL url = new URL(aURL);
//			System.out.println("accessing webpage " + aURL);
			URLConnection con = url.openConnection();
			con.setReadTimeout(5000);
			sc = new Scanner(con.getInputStream());
			StringBuffer sb = new StringBuffer();
			while (sc.hasNext()) {
				sb.append(sc.next());
			}
			content = sb.toString();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (sc != null) {
				sc.close();
			}
		}
		if (content.equals("") && !aURL.substring(0,5).equals("https")) {
			aURL = aURL.replaceFirst("http", "https");
			return readWebContent(aURL);
		}
		
//		System.out.println("webpage content " + aURL + content);
//		return content.replaceAll("<[^>]*>", "").replaceAll("\\s", "");
		return content;
	}
	
	private boolean isProvided(String s) {
		for (String url : WebCommand.PROVIDED_URL) {
			if (s.equals(url)) {
				return true;
			}
		}
		return false;
	}
	
//	public String readWebContent2(String url){
//		try {
//			HttpURLConnection httpClient =(HttpURLConnection) new URL(url).openConnection();
//			httpClient.setRequestMethod("GET");
//			httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//			int responseCode = httpClient.getResponseCode();
//			try (BufferedReader in = new BufferedReader(
//					new InputStreamReader(httpClient.getInputStream()))) {
//				StringBuilder response = new StringBuilder();
//				String line;
//				while ((line = in.readLine()) != null) {
//					response.append(line);
//				}
//				if (response.toString().equals("") && !url.substring(0,5).equals("https")) {
//					url = url.replaceFirst("http", "https");
//					return readWebContent2(url);
//				}	
//				return response.toString();
//			}
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		return "";
//	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="31" _type="Insert" date="Fri Feb 26 14:16:06 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35301" docExpressionCount="4290" docLength="37767" length="1" offset="8061" starttimestamp="1614364734870" timestamp="2231660">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="35" _type="Delete" date="Fri Feb 26 14:16:08 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35300" docExpressionCount="4290" docLength="37766" endLine="222" length="1" offset="8061" startLine="222" starttimestamp="1614364734870" timestamp="2233596">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="37" _type="Insert" date="Fri Feb 26 14:16:08 EST 2021" docASTNodeCount="6187" docActiveCodeLength="35303" docExpressionCount="4290" docLength="37769" length="3" offset="8061" repeat="3" starttimestamp="1614364734870" timestamp="2233870" timestamp2="2234143">
    <text><![CDATA[Old]]></text>
  </DocumentChange>
  <DocumentChange __id="79" _type="Insert" date="Fri Feb 26 14:18:06 EST 2021" docASTNodeCount="6182" docActiveCodeLength="35256" docExpressionCount="4288" docLength="37771" length="2" offset="4877" starttimestamp="1614364734870" timestamp="2352035">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="81" _type="Insert" date="Fri Feb 26 14:18:06 EST 2021" docASTNodeCount="6175" docActiveCodeLength="35214" docExpressionCount="4284" docLength="37773" length="2" offset="4928" starttimestamp="1614364734870" timestamp="2352043">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="82" _type="Insert" date="Fri Feb 26 14:18:06 EST 2021" docASTNodeCount="5607" docActiveCodeLength="35153" docExpressionCount="3888" docLength="37775" length="2" offset="4974" starttimestamp="1614364734870" timestamp="2352082">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="83" _type="Insert" date="Fri Feb 26 14:18:06 EST 2021" docASTNodeCount="5607" docActiveCodeLength="35043" docExpressionCount="3888" docLength="37777" length="2" offset="5039" starttimestamp="1614364734870" timestamp="2352111">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="84" _type="Insert" date="Fri Feb 26 14:18:07 EST 2021" docASTNodeCount="5607" docActiveCodeLength="34935" docExpressionCount="3888" docLength="37779" length="2" offset="5153" starttimestamp="1614364734870" timestamp="2352137">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="85" _type="Insert" date="Fri Feb 26 14:18:07 EST 2021" docASTNodeCount="6125" docActiveCodeLength="34927" docExpressionCount="4238" docLength="37781" length="2" offset="5265" starttimestamp="1614364734870" timestamp="2352154">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="89" _type="Delete" date="Fri Feb 26 14:18:08 EST 2021" docASTNodeCount="6130" docActiveCodeLength="34974" docExpressionCount="4240" docLength="37779" endLine="146" length="2" offset="4877" startLine="146" starttimestamp="1614364734870" timestamp="2353754">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="95" _type="Insert" date="Fri Feb 26 14:18:24 EST 2021" docASTNodeCount="5607" docActiveCodeLength="34839" docExpressionCount="3888" docLength="37781" length="2" offset="5920" starttimestamp="1614364734870" timestamp="2369575">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="96" _type="Insert" date="Fri Feb 26 14:18:24 EST 2021" docASTNodeCount="5607" docActiveCodeLength="34821" docExpressionCount="3888" docLength="37783" length="2" offset="6059" starttimestamp="1614364734870" timestamp="2369591">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="97" _type="Insert" date="Fri Feb 26 14:18:24 EST 2021" docASTNodeCount="6112" docActiveCodeLength="34812" docExpressionCount="4225" docLength="37785" length="2" offset="6081" starttimestamp="1614364734870" timestamp="2369596">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="104" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 14:18:30 EST 2021" docASTNodeCount="150" docActiveCodeLength="1206" docExpressionCount="90" docLength="2822" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2375584">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\Driver.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package logAnalyzer;¶¶import java.io.BufferedReader;¶import java.io.IOException;¶import java.io.InputStreamReader;¶import java.io.OutputStream;¶import java.net.HttpURLConnection;¶import java.net.URL;¶import java.util.Date;¶¶import org.json.JSONException;¶import org.json.JSONObject;¶¶import analyzer.AnAnalyzer;¶import analyzer.Analyzer;¶¶public class Driver {¶	private static String classFolderPath = "E:\\testdata\\Fall2020";¶	private static String experimentalClassFolderPath = "C:\\Users\\Zhizhou\\OneDrive\\UNC CH\\Junior 1st Sem\\hermes\\git\\Hermes\\Hermes\\data\\ExperimentalData";¶	private static Analyzer analyzer;¶	private static AReplayer replayer;¶	private static int timeout = 5000;¶	private static String url = "http://stackoverflow.com/questions/4186835/how-to-add-multiple-components-to-a-jframe";¶	¶	public static void main(String[] args) {¶		analyzer = new AnAnalyzer();¶//		replayer = new AReplayer(analyzer);¶//		analyzer.addAnalyzerListener(replayer);	¶//		replayer.createPauseCommandLogs(classFolderPath);¶//		replayer.analyzeFolder(classFolderPath);¶		replayer = new AExperimentalReplayer(analyzer);¶		((AExperimentalReplayer)replayer).readTimestamp();¶//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);¶//		String s2 = ((AExperimentalReplayer)replayer).readWebContent2(url);¶//		System.out.println(s1.equals(s2));¶//		analyzer.addAnalyzerListener(replayer);	¶"), Diff(DELETE,"//"), Diff(EQUAL,"		replayer.createPauseCommandLogs(experimentalClassFolderPath);¶"), Diff(INSERT,"//"), Diff(EQUAL,"		replayer.analyzeFolder(experimentalClassFolderPath);¶//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);¶//		String s2 = "";¶//		System.out.println();¶//		try {¶//			s2 = get(url);¶//		} catch (Exception e) {¶//			// TODO: handle exception¶//			e.printStackTrace();¶//		}¶//		System.out.println(s1.equals(s2));¶//		Date d = new Date(1379108460000L);¶//		System.out.println(d);¶	}¶	¶//	public static String get(String urlString) throws Exception{¶//         HttpURLConnection httpClient =(HttpURLConnection) new URL(urlString).openConnection();¶//        httpClient.setRequestMethod("GET");¶//        httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");¶//        int responseCode = httpClient.getResponseCode();¶//        System.out.println("Response Code : " + responseCode);¶//        try (BufferedReader in = new BufferedReader(¶//                new InputStreamReader(httpClient.getInputStream()))) {¶//            StringBuilder response = new StringBuilder();¶//            String line;¶//            while ((line = in.readLine()) != null) {¶//                response.append(line);¶//            }¶//            System.out.println(response.toString());¶//            return response.toString();¶//        }¶//	}¶}¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶")]]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;

import org.json.JSONException;
import org.json.JSONObject;

import analyzer.AnAnalyzer;
import analyzer.Analyzer;

public class Driver {
	private static String classFolderPath = "E:\\testdata\\Fall2020";
	private static String experimentalClassFolderPath = "C:\\Users\\Zhizhou\\OneDrive\\UNC CH\\Junior 1st Sem\\hermes\\git\\Hermes\\Hermes\\data\\ExperimentalData";
	private static Analyzer analyzer;
	private static AReplayer replayer;
	private static int timeout = 5000;
	private static String url = "http://stackoverflow.com/questions/4186835/how-to-add-multiple-components-to-a-jframe";
	
	public static void main(String[] args) {
		analyzer = new AnAnalyzer();
//		replayer = new AReplayer(analyzer);
//		analyzer.addAnalyzerListener(replayer);	
//		replayer.createPauseCommandLogs(classFolderPath);
//		replayer.analyzeFolder(classFolderPath);
		replayer = new AExperimentalReplayer(analyzer);
		((AExperimentalReplayer)replayer).readTimestamp();
//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);
//		String s2 = ((AExperimentalReplayer)replayer).readWebContent2(url);
//		System.out.println(s1.equals(s2));
//		analyzer.addAnalyzerListener(replayer);	
		replayer.createPauseCommandLogs(experimentalClassFolderPath);
//		replayer.analyzeFolder(experimentalClassFolderPath);
//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);
//		String s2 = "";
//		System.out.println();
//		try {
//			s2 = get(url);
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		System.out.println(s1.equals(s2));
//		Date d = new Date(1379108460000L);
//		System.out.println(d);
	}
	
//	public static String get(String urlString) throws Exception{
//         HttpURLConnection httpClient =(HttpURLConnection) new URL(urlString).openConnection();
//        httpClient.setRequestMethod("GET");
//        httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//        int responseCode = httpClient.getResponseCode();
//        System.out.println("Response Code : " + responseCode);
//        try (BufferedReader in = new BufferedReader(
//                new InputStreamReader(httpClient.getInputStream()))) {
//            StringBuilder response = new StringBuilder();
//            String line;
//            while ((line = in.readLine()) != null) {
//                response.append(line);
//            }
//            System.out.println(response.toString());
//            return response.toString();
//        }
//	}
}

















]]></snapshot>
  </Command>
  <Command __id="120" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 14:19:08 EST 2021" docASTNodeCount="6112" docActiveCodeLength="34812" docExpressionCount="4225" docLength="37785" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="2413929">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\AExperimentalReplayer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package logAnalyzer;¶¶import java.io.BufferedWriter;¶import java.io.File;¶import java.io.FileFilter;¶import java.io.FileNotFoundException;¶import java.io.FileReader;¶import java.io.FileWriter;¶import java.io.IOException;¶import java.net.MalformedURLException;¶import java.net.URL;¶import java.net.URLConnection;¶import java.text.DateFormat;¶import java.text.ParseException;¶import java.text.SimpleDateFormat;¶import java.util.ArrayList;¶import java.util.Comparator;¶import java.util.Date;¶import java.util.HashMap;¶import java.util.Iterator;¶import java.util.LinkedHashMap;¶import java.util.List;¶import java.util.Map;¶import java.util.Scanner;¶import java.util.concurrent.CountDownLatch;¶import analyzer.Analyzer;¶import au.com.bytecode.opencsv.CSVReader;¶import au.com.bytecode.opencsv.CSVWriter;¶import fluorite.commands.ConsoleInput;¶import fluorite.commands.ConsoleOutputCommand;¶import fluorite.commands.CopyCommand;¶import fluorite.commands.Delete;¶import fluorite.commands.EHExceptionCommand;¶import fluorite.commands.EHICommand;¶import fluorite.commands.ExceptionCommand;¶import fluorite.commands.GetHelpCommand;¶import fluorite.commands.InsertStringCommand;¶import fluorite.commands.PasteCommand;¶import fluorite.commands.PauseCommand;¶import fluorite.commands.Replace;¶import fluorite.commands.RequestHelpCommand;¶import fluorite.commands.RunCommand;¶import fluorite.commands.ShellCommand;¶import fluorite.commands.WebCommand;¶import jdk.internal.jline.internal.InputStreamReader;¶¶public class AExperimentalReplayer extends AReplayer{¶	private Map<String, List<List<EHICommand>>> data;¶	private static final int THREAD_LIM = 6;¶	private static final String TIMESTAMP = "C:\\Users\\Zhizhou\\Desktop\\timestamp for each participant.csv";¶	private Map<String, Long[]> timestamps = new HashMap<>();¶	¶	public AExperimentalReplayer(Analyzer anAnalyzer) {¶		super(anAnalyzer);¶		analyzer = anAnalyzer;¶		data = new HashMap<>();¶		System.setProperty("http.agent", "Chrome");¶	}¶	¶	public void readTimestamp() {¶		try {¶			SimpleDateFormat df = new SimpleDateFormat("HH:mm");¶			File timestampFile = new File(TIMESTAMP);¶			CSVReader cr = new CSVReader(new FileReader(timestampFile));¶			cr.readNext();¶			String[] token = null;¶			while ((token = cr.readNext()) != null) {¶				long startTime = df.parse(token[4]).getTime();¶				if (startTime < 15*3600*1000) {¶					startTime += 12*3600*1000;¶				}¶				long endTime = df.parse(token[5]).getTime();¶				if (endTime < 15*3600*1000) {¶					endTime += 12*3600*1000;¶				}¶				Long[] times = {startTime, endTime};¶				timestamps.put(token[0], times);¶			}¶		} catch (FileNotFoundException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		} catch (IOException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		} catch (ParseException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶	}¶	¶	public void createPauseCommandLogs(String classFolderPath) {¶		File folder = new File(classFolderPath);¶		if (!folder.exists()) {¶			System.out.println("Class Folder does not exist");¶			System.exit(0);¶		}¶		File[] students = folder.listFiles(new FileFilter() {¶			public boolean accept(File pathname) {¶				return pathname.isDirectory();¶			}¶		});¶		latch = new CountDownLatch(students.length);¶		for (int j = 0; j < students.length; j++) {¶			File studentFolder  = students[j];¶			File logFolder = new File(studentFolder,"Eclipse");¶			if (!logFolder.exists()) {¶				latch.countDown();¶				continue;¶			}¶			System.out.println("Reading " + studentFolder.getName());¶			File[] logs = new File(logFolder.getPath()).listFiles(new FileFilter() {¶				public boolean accept(File pathname) {¶					return pathname.getName().startsWith("Log") && pathname.getName().endsWith(".xml");¶				}¶			});¶			Thread thread = new Thread(new Runnable() {¶				public void run() {¶					if (logs == null || !studentFolder.getName().equals("22")) {¶						synchronized (this) {¶							threadCount--;¶						}¶						latch.countDown();¶						return;¶					}¶//					if (!studentFolder.getName().equals("16")) {¶//						synchronized (this) {¶//							threadCount--;¶//						}¶//						latch.countDown();¶//						return;¶//					}¶					try {¶						File browser = new File(studentFolder, "Browser");¶						List<EHICommand> webCommands = null;¶						Iterator<EHICommand> webCommandIterator = null;¶						if (browser.exists() && browser.listFiles().length != 0) {¶							webCommands = readWebCommands(browser.listFiles()[0]);¶							if (webCommands != null) {¶								webCommandIterator = webCommands.iterator();¶							}¶						}¶						EHICommand webCommand = null;¶						for (File file : logs) {¶							¶							long startTimestamp = getLogFileCreationTime(file);¶							long logStartTimestamp = startTimestamp;¶"), Diff(INSERT,"//"), Diff(EQUAL,"							long endTimestamp = Long.MAX_VALUE;¶"), Diff(INSERT,"//"), Diff(EQUAL,"							if (timestamps.containsKey(studentFolder.getName())) {¶"), Diff(INSERT,"//"), Diff(EQUAL,"								startTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[0] - 60*ONE_MIN;¶"), Diff(INSERT,"//"), Diff(EQUAL,"								endTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[1] - 59*ONE_MIN;¶"), Diff(INSERT,"//"), Diff(EQUAL,"							}¶							List<EHICommand> commands = readOneLogFile(file.getPath(), analyzer);¶							if (commands.size() < 2) {¶								continue;¶							}¶							List<EHICommand> newCommands = new ArrayList<>();¶							EHICommand last = null;¶							EHICommand cur = null;¶							if (webCommand == null) {¶//								webCommand = maybeAddWebCommandBeforeLogs(webCommandIterator, startTimestamp, newCommands);¶								webCommand = webCommandIterator.next();¶							}¶							long timestamp = 0;¶							if (webCommand != null) {¶								timestamp = webCommand.getTimestamp() - logStartTimestamp;¶							}¶							for (EHICommand command : commands) {¶"), Diff(INSERT,"//"), Diff(EQUAL,"								if (command.getTimestamp() + logStartTimestamp < startTimestamp || command.getTimestamp() + logStartTimestamp > endTimestamp) {¶"), Diff(INSERT,"//"), Diff(EQUAL,"									continue;¶"), Diff(INSERT,"//"), Diff(EQUAL,"								}¶								command.setStartTimestamp(logStartTimestamp);¶								if (cur == null) {¶									cur = command;¶									newCommands.add(command);¶								} else {¶									last = cur;¶									cur = command;¶//									boolean webCommandAdded = false;¶//									while(webCommand != null && maybeAddWebCommand(newCommands, last, cur, webCommand, webCommandIterator, startTimestamp)) {¶//										webCommandAdded = true;¶//										last = webCommand;¶//										try {¶//											webCommand = webCommandIterator.next();¶//										} catch (NoSuchElementException e) {¶//											webCommand = null;¶//										}¶//									} ¶//									if (!webCommandAdded) {¶//										maybeAddPauseCommand(newCommands, last, cur);¶//									}¶									¶//									boolean added = false;¶									while (webCommand != null && timestamp >= last.getTimestamp() && timestamp <= cur.getTimestamp()) {¶										webCommand.setStartTimestamp(logStartTimestamp);¶										webCommand.setTimestamp(timestamp);¶										maybeAddPauseCommand(newCommands, last,	webCommand);¶//										webCommandAdded = true;¶										if (webCommandIterator.hasNext()) {¶											last = webCommand;¶											webCommand = webCommandIterator.next();¶											timestamp = webCommand.getTimestamp() - logStartTimestamp;¶										} else {¶											webCommand = null;¶											break;¶										}¶									}¶//									if (webCommandAdded) {¶//										maybeAddPauseCommand(newCommands, last, cur);¶////										return webCommand;¶//									} else {¶										maybeAddPauseCommand(newCommands, last, cur);¶//									}¶								}¶							}¶							¶							String logContent = XML_START1 + getLogFileCreationTime(file) + XML_START2 + XML_VERSION + XML_START3;¶							for (EHICommand c : newCommands) {¶								logContent += c.persist();¶							}¶							logContent += XML_FILE_ENDING;¶							try {¶								File newLog = new File(file.getParent()+File.separator+"Rest"), Diff(INSERT,"Old"), Diff(EQUAL,""+File.separator+file.getName());¶								if (newLog.exists()) {¶									newLog.delete();¶								}¶								if (newCommands.size() == 0) {¶									continue;¶								}¶								newLog.getParentFile().mkdirs();¶								newLog.createNewFile();¶								BufferedWriter writer = new BufferedWriter(new FileWriter(newLog, true));¶								System.out.println("Writing to file " + newLog.getPath());¶								writer.write(logContent);¶								writer.close();¶								System.out.println("Finished writing to file " + newLog.getPath());¶							} catch (IOException e) {¶								e.printStackTrace();¶							}¶						}¶						¶					} catch (Exception e) {¶						e.printStackTrace();¶					} finally {¶						synchronized (this) {¶							threadCount--;¶						}¶						latch.countDown();¶					}¶				}							¶			});¶			while(true) {¶				if (threadCount > THREAD_LIM) {¶					try {¶						Thread.sleep(1000);¶					} catch (InterruptedException e) {¶						e.printStackTrace();¶					}¶				}¶				¶				if (threadCount <= THREAD_LIM) {¶					synchronized (this) {¶						threadCount++;¶						thread.start();¶						break;¶					}¶				}¶			}¶		}¶		try {¶			latch.await();¶		} catch (InterruptedException e) {¶			e.printStackTrace();¶		} finally {¶			System.exit(0);¶		}¶	}¶¶	public void analyzeFolder(String classFolderPath) {¶		File folder = new File(classFolderPath);¶		if (!folder.exists()) {¶			System.exit(0);¶		}¶		File[] participants = folder.listFiles(new FileFilter() {¶			public boolean accept(File pathname) {¶				return pathname.isDirectory();¶			}¶		});¶		for (int i = 0; i < participants.length; i++) {¶			File participantFolder = new File(participants[i],"Eclipse");¶			if (!participantFolder.exists()) {¶				continue;¶			}¶			System.out.println("Reading student " + participantFolder.getName());¶			data.put(participants[i].getName(), replayLogs(participantFolder.getPath(), analyzer));¶		}¶		List<List<EHICommand>> nestedCommands = data.get("26");¶		for (int i = 0; i < nestedCommands.size(); i++) {¶			for (EHICommand command:nestedCommands.get(i)) {¶				if (command instanceof ExceptionCommand) {¶					System.out.println(command);¶				}¶			}¶		}¶		createAssignData("Experiment", folder);¶		createDistributionData("Experiment", folder);¶		createPrevPauseDistribution("Experiment", folder);¶//		createNextPauseDistribution("Experiment", folder);¶		createWebStats("Experiment", folder);¶		System.exit(0);¶	}¶¶	private void createAssignData(String assign, File folder) {¶		File csv = new File(folder,assign+".csv");¶		FileWriter fw;¶		File csv2 = new File(folder,assign+"Event.csv");¶		FileWriter fw2;¶		int[] sum = new int[10];¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] header = {"Student", "Total Time Spent", "Active Time", "Rest Time", "Wall Clock Time", "Pause", "Web Visit", "Insert", "Delete", "Replace", "Copy", "Paste", "Run", "Exception", "Exception Breakdown"};¶			cw.writeNext(header);¶¶			if (csv2.exists()) {¶				csv2.delete();¶			}¶			csv2.createNewFile();¶			fw2 = new FileWriter(csv2);¶			CSVWriter cw2 = new CSVWriter(fw2);¶			String[] header2 = {"case_id", "timestamp", "activity", "user"};¶			cw2.writeNext(header2);¶¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + "to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				retVal.add(student);¶				long totalTime = totalTimeSpent(nestedCommands);¶				long[] restTime = restTime(nestedCommands, FIVE_MIN, Long.MAX_VALUE);¶				long wallClockTime = wallClockTime(nestedCommands);¶				retVal.add(convertToHourMinuteSecond(totalTime));¶				retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));¶				retVal.add(convertToHourMinuteSecond(restTime[0]));¶				retVal.add(convertToHourMinuteSecond(wallClockTime));¶				int[] numCommands = new int[9];¶				List<String> breakdownList = new ArrayList<>();¶				String list = "";¶				for (List<EHICommand> commands : nestedCommands) {¶					long lastTime = -1;¶					long curTime = -1;¶					for (int i = 0; i < commands.size(); i++) {¶						EHICommand command = commands.get(i);¶¶						if (i > 0) {¶							lastTime = curTime;¶						}¶						if (command != null) {¶							curTime = command.getTimestamp() + command.getStartTimestamp();¶						}¶						if (lastTime - curTime > 5*60*1000) {¶							writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);¶						}¶						if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {¶							writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);¶						} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {¶							writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);¶						} else if (command instanceof InsertStringCommand || command instanceof CopyCommand ||¶								command instanceof Delete ||¶								command instanceof Replace || command instanceof PasteCommand || command instanceof ExceptionCommand ||¶								command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||¶								command instanceof RequestHelpCommand || command instanceof GetHelpCommand) {¶							writeOneLine(cw2, assign, curTime, getEventType(command), student);¶						}¶						if (command instanceof PauseCommand) {¶							numCommands[0]++;¶							list += "A";¶						}¶						if (command instanceof WebCommand) {¶							numCommands[1]++;¶							list += "W";¶						}¶						if (command instanceof InsertStringCommand) {¶							numCommands[2]++;¶							list += "I";¶						}¶						if (command instanceof Delete) {¶							numCommands[3]++;¶							list += "D";¶						}¶						if (command instanceof Replace) {¶							numCommands[4]++;¶							list += "R";¶						}¶						if (command instanceof CopyCommand) {¶							numCommands[5]++;¶							list += "C";¶						}¶						if (command instanceof PasteCommand) {¶							numCommands[6]++;¶							list += "P";¶						}¶						if (command instanceof RunCommand) {¶							numCommands[7]++;¶							list += "U";¶						}¶						if (command instanceof ExceptionCommand || command instanceof EHExceptionCommand) {¶							if(isException(command)) {¶								if (command instanceof EHExceptionCommand) {¶									ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");¶									ex.setTimestamp(command.getTimestamp());¶									ex.setStartTimestamp(command.getStartTimestamp());¶								}¶								numCommands[8]++;¶								list += "E";¶								if (i < commands.size()-1) {¶									command = commands.get(i+1);¶								} else {¶									continue;¶								}¶								while(!(command instanceof InsertStringCommand || command instanceof Replace ¶										|| command instanceof Delete ¶										|| command instanceof CopyCommand || command instanceof PasteCommand)) {¶									if (command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||¶											command instanceof RequestHelpCommand || command instanceof GetHelpCommand || command instanceof ExceptionCommand ||¶											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_LOST_FOCUS")) ||¶											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_CLOSED"))) {¶										if (i > 0) {¶											lastTime = curTime;¶										}¶										curTime = command.getTimestamp() + command.getStartTimestamp();¶										if (lastTime - curTime > 5*60*1000) {¶											writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);¶										}¶										if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {¶											writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);¶										} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {¶											writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);¶										} else {¶											writeOneLine(cw2, assign, curTime, getEventType(command), student);¶										}¶									}¶									if ((command instanceof ExceptionCommand || command instanceof EHExceptionCommand) && isException(command)) {¶										if (command instanceof EHExceptionCommand) {¶											ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");¶											ex.setTimestamp(command.getTimestamp());¶											ex.setStartTimestamp(command.getStartTimestamp());¶											if (i > 0) {¶												lastTime = curTime;¶											}¶											curTime = command.getTimestamp() + command.getStartTimestamp();¶											if (lastTime - curTime > 5*60*1000) {¶												writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);¶											}¶											writeOneLine(cw2, assign, curTime, getEventType(ex), student);¶										}¶										numCommands[8]++;¶										list += "E";¶									}¶									i++;¶									if (i+1 < commands.size()) {¶										command = commands.get(i+1);¶									} else {¶										break;¶									}¶								}¶								breakdownList.add(countConsecutiveCommands(list));¶								list = "";¶							}¶						}¶					}¶				}¶				if (!list.equals("")) {¶					breakdownList.add(countConsecutiveCommands(list));¶				}¶				for(int i = 0; i < numCommands.length; i++) {¶					retVal.add(i+5, numCommands[i]+"");¶					sum[i] += numCommands[i];¶					if (i > 1) {¶						sum[9] += numCommands[i];¶					}¶				}¶				for(int i = 0; i < breakdownList.size(); i++) {¶					retVal.add(i+14, breakdownList.get(i));¶				}¶				String[] nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			List<String> retVal = new ArrayList<>();¶			retVal.add("Sum");¶			retVal.add("");¶			retVal.add("");¶			retVal.add("");¶			retVal.add("");¶			for (int i = 0; i < sum.length; i++) {¶				retVal.add(sum[i]+"");¶			}¶			String[] nextLine = retVal.toArray(new String[1]);¶			cw.writeNext(nextLine);¶			fw.close();¶			cw.close();¶¶			fw2.close();¶			cw2.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶¶	private void createDistributionData(String assign, File folder) {¶		File csv = new File(folder,assign+"Distribution.csv");¶		FileWriter fw;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] header = getHeader();¶			cw.writeNext(header);¶			¶			String[] sum = new String[header.length];¶			long[] restTimeSum = new long[REST.length];¶			sum[0] = "Sum";¶			for (int i = 1; i < sum.length; i++) {¶				sum[i] = "";¶			}¶			int[] restSum = new int[REST.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				retVal.add(student);¶				long totalTime = totalTimeSpent(nestedCommands);¶				if (totalTime == 0) {¶					continue;¶				}¶				long wallClockTime = wallClockTime(nestedCommands);¶				retVal.add(convertToHourMinuteSecond(totalTime));¶				retVal.add(convertToHourMinuteSecond(wallClockTime));¶¶				long[] restTime = {0,0};¶				for (int i = 0; i < REST.length; i++) {¶					if (i < REST.length-1) {¶						restTime = restTime(nestedCommands, REST[i], REST[i+1]);¶					} else {¶						restTime = restTime(nestedCommands, REST[i], Long.MAX_VALUE);¶					}¶					retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));¶					retVal.add(convertToHourMinuteSecond(restTime[0]));¶					retVal.add(restTime[1]+"");¶					retVal.add(getTime(restTime[1] == 0? 0:1.0*restTime[2]/restTime[1]));¶					restSum[i] += restTime[1];¶					restTimeSum[i] += restTime[2];¶				}¶				¶				String[] days = daysSpent(nestedCommands);¶				if (days != null) {¶					for (int i = 0; i < days.length; i++) {¶						retVal.add(days[i]);¶					}¶				}¶				¶				String[] nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			int sum2 = 0;¶			for (int i = 0; i < restSum.length; i++) {¶				sum[4*i+5] = restSum[i]+"";¶				sum2 += restSum[i];¶				sum[4*i+6] = getTime(restSum[i] == 0? 0:1.0*restTimeSum[i]/restSum[i]);¶			}¶			sum[1] = sum2+"";¶			cw.writeNext(sum);¶			fw.close();¶			cw.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private void createPrevPauseDistribution(String assign, File folder) {¶		File csv = new File(folder,assign+"PauseDistribution.csv");¶		FileWriter fw;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] prev = {"Prev"};¶			cw.writeNext(prev);¶			String[] header = getPauseHeader();¶			cw.writeNext(header);¶¶			String[] nextLine = new String[header.length];¶			int[] sum = new int[PauseCommand.TYPES.length];¶			long[] sumPause = new long[sum.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				int[] numCommmands = new int[sum.length];¶				long[] pauseTimes = new long[sum.length];¶				retVal.add(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (EHICommand command : commands) {¶						if (command instanceof PauseCommand) {¶							for (int i = 0; i < sum.length; i++) {¶								if (command.getDataMap().get("prevType").equals(PauseCommand.TYPES[i])) {¶									numCommmands[i]++;¶									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); ¶									break;¶								}¶							}¶						}¶					}¶				}¶				for (int i = 0; i < sum.length; i++) {¶					retVal.add(numCommmands[i]+"");¶					if (numCommmands[i] == 0) {¶						retVal.add("0");¶					} else {¶						retVal.add(pauseTimes[i]/numCommmands[i]+"");¶					}¶					sum[i] += numCommmands[i];¶					sumPause[i] += pauseTimes[i];¶				}¶//				String[] nextLine = retVal.toArray(new String[1]);¶				nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶//			String[] nextLine = new String[header.length];¶			nextLine = new String[header.length];¶			nextLine[0] = "Sum";¶			for (int i = 0; i < sum.length; i++) {¶				nextLine[1+i*2] = sum[i]+"";¶				if (sum[i] == 0) {¶					nextLine[2+i*2] = 0+"";¶				} else {¶					nextLine[2+i*2] = sumPause[i]/sum[i]+"";¶				}¶			}¶			cw.writeNext(nextLine);¶			¶			String[] empty = {};¶			cw.writeNext(empty);¶			String[] next = {"next"};¶			cw.writeNext(next);¶			sum = new int[PauseCommand.TYPES.length];¶			sumPause = new long[sum.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				int[] numCommmands = new int[sum.length];¶				long[] pauseTimes = new long[sum.length];¶				retVal.add(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (EHICommand command : commands) {¶						if (command instanceof PauseCommand) {¶							for (int i = 0; i < sum.length; i++) {¶								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {¶									numCommmands[i]++;¶									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); ¶									break;¶								}¶							}¶						}¶					}¶				}¶				for (int i = 0; i < sum.length; i++) {¶					retVal.add(numCommmands[i]+"");¶					if (numCommmands[i] == 0) {¶						retVal.add("0");¶					} else {¶						retVal.add(pauseTimes[i]/numCommmands[i]+"");¶					}¶					sum[i] += numCommmands[i];¶					sumPause[i] += pauseTimes[i];¶				}¶				nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			nextLine = new String[header.length];¶			nextLine[0] = "Sum";¶			for (int i = 0; i < sum.length; i++) {¶				nextLine[1+i*2] = sum[i]+"";¶				if (sum[i] == 0) {¶					nextLine[2+i*2] = 0+"";¶				} else {¶					nextLine[2+i*2] = sumPause[i]/sum[i]+"";¶				}¶			}¶			cw.writeNext(nextLine);¶			¶			fw.close();¶			cw.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private void createWebStats(String assign, File folder) {¶		File csv = new File(folder,assign+"WebStats.csv");¶		FileWriter fw;¶		File csv2 = new File(folder,assign+"WebSearches.csv");¶		FileWriter fw2;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			if (csv2.exists()) {¶				csv2.delete();¶			}¶			csv.createNewFile();¶			csv2.createNewFile();¶			fw = new FileWriter(csv);¶			fw2 = new FileWriter(csv2);¶			CSVWriter cw = new CSVWriter(fw);¶			CSVWriter cw2 = new CSVWriter(fw2);¶			String[] header = {"Title", "URL", "# of Visits", "Provided?"};¶			String[] header2 = {"ID", "Search Word", "Title", "URL", "Sequence", "Last Page of the Search?", "Pasted Text"};¶			cw.writeNext(header);¶			cw2.writeNext(header2);¶¶			Map<String, Integer> urls = new HashMap<>();¶			Map<String, String> titles = new HashMap<>();¶			Map<String, List<String>> searches = new LinkedHashMap<>();¶			Map<String, List<String>> contents = new HashMap<>();¶			for (String student : data.keySet()) {¶				EHICommand lastSearch = null;¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (int i = 0; i < commands.size(); i++) {¶						EHICommand command = commands.get(i);¶						if (command instanceof WebCommand) {¶							String url = command.getDataMap().get("URL");¶							if (command.getAttributesMap().get("type").equals("Search")) {¶								lastSearch = command;¶								if (!searches.containsKey(lastSearch.getDataMap().get("keyword"))) {¶									searches.put(lastSearch.getDataMap().get("keyword"), new ArrayList<>());¶								}¶							} ¶							if (command.getAttributesMap().get("type").equals("Search Result") || command.getAttributesMap().get("type").equals("Stack Overflow")) {¶								String searchWord = "null";¶								if (lastSearch != null) {¶									searchWord = lastSearch.getDataMap().get("keyword");¶								}¶								if (!searches.containsKey(searchWord)) {¶									searches.put(searchWord, new ArrayList<>());¶								}¶								searches.get(searchWord).add(url);¶								if (!contents.containsKey(url)) {¶									List<String> list = new ArrayList<>();¶									if (!url.contains("google.com")) {¶										list.add(readWebContent(url));¶//										list.add(readWebContent2(url));¶										contents.put(url, list);¶									}¶								}¶							}¶							if (command.getAttributesMap().get("type").contains("Provided")) {¶								if (!searches.containsKey("Provided")) {¶									searches.put("Provided", new ArrayList<>());¶								}¶								searches.get("Provided").add(url);¶								if (!contents.containsKey(url)) {¶									List<String> list = new ArrayList<>();¶									list.add(readWebContent(url));¶//									list.add(readWebContent2(url));¶									contents.put(url, list);¶								}¶							}¶							urls.merge(url, 1, Integer::sum);¶							titles.put(url, command.getDataMap().get("keyword"));¶						}¶						if (command instanceof PasteCommand) {¶							outer:¶							for (int j = i-1; j >= 0 && j > i-20; j--) {¶								EHICommand command2 = commands.get(j);¶								String pastedText = "";¶								if (command2 instanceof InsertStringCommand || command2 instanceof Replace) {¶									if (command2 instanceof InsertStringCommand) {¶										pastedText = command2.getDataMap().get(InsertStringCommand.XML_Data_Tag);¶									} else {¶										pastedText = command2.getDataMap().get("insertedText");¶									}¶									if (pastedText.length() > 10) {¶										for (String url : contents.keySet()) {¶											List<String> list = contents.get(url);¶											String pastedText2 = pastedText.replaceAll("\\s", "");¶											if (list.get(0).contains(pastedText2)) {¶												for (int k = 1; k < list.size(); k++) {¶													if (list.get(k).replaceAll("\\s",  "").equals(pastedText2)) {¶														break outer;¶													}¶												}¶												list.add(pastedText);¶												break outer;¶											}¶										}¶									}¶								}¶							}¶						}¶					}¶				}¶				for (String s : searches.keySet()) {¶					List<String> nextLine = new ArrayList<>();¶					nextLine.add(student);¶					nextLine.add(s);¶					if (searches.get(s).size() == 0) {¶						nextLine.add("No Result");¶						cw2.writeNext(nextLine.toArray(new String[1]));¶						continue;¶					}¶					for (int i = 0; i < searches.get(s).size(); i++) {¶						String url = searches.get(s).get(i);¶						nextLine.add(titles.get(url));¶						nextLine.add(url);¶						nextLine.add(i+1+"");¶						nextLine.add(i == searches.get(s).size()-1 ? "Last" : "");¶						if (contents.containsKey(url)) {¶							List<String> list = contents.get(url);¶							for (int j = 1; j < list.size(); j++) {¶								nextLine.add(list.get(j));¶							}¶						}¶						cw2.writeNext(nextLine.toArray(new String[1]));¶						nextLine = new ArrayList<>();¶						nextLine.add(student);¶						nextLine.add("");¶					}¶				}¶				searches.clear();¶			}¶			Map<String, Integer> sortedMap = new LinkedHashMap<>();¶			urls.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));¶			for (String s : sortedMap.keySet()) {¶				String[] nextLine = {titles.get(s), s, sortedMap.get(s)+"", isProvided(s)? "Provided":""};¶				cw.writeNext(nextLine);¶			}¶			fw.close();¶			cw.close();¶			¶			fw2.close();¶			cw2.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private void createNextPauseDistribution(String assign, File folder) {¶		File csv = new File(folder,assign+"NextPauseDistribution.csv");¶		FileWriter fw;¶		try {¶			if (csv.exists()) {¶				csv.delete();¶			}¶			csv.createNewFile();¶			fw = new FileWriter(csv);¶			CSVWriter cw = new CSVWriter(fw);¶			String[] header = getPauseHeader();¶			cw.writeNext(header);¶			¶			int[] sum = new int[PauseCommand.TYPES.length];¶			long[] sumPause = new long[sum.length];¶			for (String student : data.keySet()) {¶				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());¶				List<List<EHICommand>> nestedCommands = data.get(student);¶				List<String> retVal = new ArrayList<>();¶				int[] numCommmands = new int[sum.length];¶				long[] pauseTimes = new long[sum.length];¶				retVal.add(student);¶				for (List<EHICommand> commands : nestedCommands) {¶					for (EHICommand command : commands) {¶						if (command instanceof PauseCommand) {¶							for (int i = 0; i < sum.length; i++) {¶								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {¶									numCommmands[i]++;¶									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); ¶									break;¶								}¶							}¶						}¶					}¶				}¶				for (int i = 0; i < sum.length; i++) {¶					retVal.add(numCommmands[i]+"");¶					if (numCommmands[i] == 0) {¶						retVal.add("0");¶					} else {¶						retVal.add(pauseTimes[i]/numCommmands[i]+"");¶					}¶					sum[i] += numCommmands[i];¶					sumPause[i] += pauseTimes[i];¶				}¶				String[] nextLine = retVal.toArray(new String[1]);¶				cw.writeNext(nextLine);¶				System.out.println("written " + assign + " student " + student + "to " + csv.getName());¶			}¶			String[] nextLine = new String[header.length];¶			nextLine[0] = "Sum";¶			for (int i = 0; i < sum.length; i++) {¶				nextLine[1+i*2] = sum[i]+"";¶				if (sum[i] == 0) {¶					nextLine[2+i*2] = 0+"";¶				} else {¶					nextLine[2+i*2] = sumPause[i]/sum[i]+"";¶				}¶			}¶			cw.writeNext(nextLine);¶			fw.close();¶			cw.close();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} ¶	}¶	¶	private String[] getPauseHeader() {¶		List<String> retVal = new ArrayList<>();¶		retVal.add("ID");¶		for (String s : PauseCommand.TYPES) {¶			retVal.add(s);¶			retVal.add("Avg. Time");¶//			retVal.add("Longest Time");¶//			retVal.add("Shortest Time");¶		}¶		return retVal.toArray(new String[1]);¶	}¶	¶	private void writeOneLine(CSVWriter cw, String assign, long time, String type, String pid) {¶		String[] nextLine = new String[4]; ¶		nextLine[0] = assign + " " + pid;¶		Date date = new Date(time);¶		DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");¶		nextLine[1] = df.format(date);¶		nextLine[2] = type;¶		nextLine[3] = pid;¶		if (nextLine != null) {¶			cw.writeNext(nextLine);¶		}¶	}¶	¶	public List<List<EHICommand>> replayLogs(String projectPath, Analyzer analyzer){¶		List<List<EHICommand>> nestedCommands = analyzer.convertXMLLogToObjects(projectPath+File.separator+"Rest");¶		sortNestedCommands(nestedCommands);¶		return nestedCommands;¶	}¶¶	private void maybeAddPauseCommand(List<EHICommand> newCommands, EHICommand last, EHICommand cur) {¶		long rest = cur.getTimestamp()-last.getTimestamp();¶		if (rest >= 1*ONE_SECOND) {¶			String range = "";¶			if (rest < 2*ONE_SECOND) {¶				range = "1s-2s";¶			} else if (rest < 5*ONE_SECOND) {¶				range = "2s-5s";¶			} else if (rest < 10*ONE_SECOND) {¶				range = "5s-10s";¶			} else if (rest < 20*ONE_SECOND) {¶				range = "10s-20s";¶			} else if (rest < 30*ONE_SECOND) {¶				range = "20s-30s";¶			} else if (rest < ONE_MIN) {¶				range = "30s-1m";¶			} else if (rest < TWO_MIN) {¶				range = "1m-2m";¶			} else if (rest < FIVE_MIN) {¶				range = "2m-5m";¶			} else if (rest < TEN_MIN) {¶				range = "5m-10m";¶			} else if (rest < 3*TEN_MIN) {¶				range = "10m-30m";¶			} else if (rest < 6*TEN_MIN) {¶				range = "30m-60m";¶			} else {¶				range = ">1h";¶			}¶			PauseCommand rCommnad = new PauseCommand(last, cur, rest, range);¶			rCommnad.setStartTimestamp(last.getStartTimestamp());¶			rCommnad.setTimestamp(last.getTimestamp()+1);¶			newCommands.add(rCommnad);¶		} ¶		newCommands.add(cur);¶	}¶	¶	private EHICommand maybeAddWebCommandBeforeLogs(Iterator<EHICommand> iterator, long startTimestamp, List<EHICommand> commands) {¶		if (iterator == null) {¶			return null;¶		}¶		EHICommand webCommand = null;¶		long timestamp = 0;¶		while((webCommand = iterator.next()) != null && (timestamp = webCommand.getTimestamp() - startTimestamp) < 0) {¶			webCommand.setStartTimestamp(0);¶			webCommand.setTimestamp(timestamp);¶			commands.add(webCommand);¶		}¶		return webCommand;¶	}¶¶	public String readWebContent(String aURL) {¶		String content = "";¶		Scanner sc = null;¶		try {¶			URL url = new URL(aURL);¶//			System.out.println("accessing webpage " + aURL);¶			URLConnection con = url.openConnection();¶			con.setReadTimeout(5000);¶			sc = new Scanner(con.getInputStream());¶			StringBuffer sb = new StringBuffer();¶			while (sc.hasNext()) {¶				sb.append(sc.next());¶			}¶			content = sb.toString();¶		} catch (MalformedURLException e) {¶			e.printStackTrace();¶		} catch (IOException e) {¶			e.printStackTrace();¶		} finally {¶			if (sc != null) {¶				sc.close();¶			}¶		}¶		if (content.equals("") && !aURL.substring(0,5).equals("https")) {¶			aURL = aURL.replaceFirst("http", "https");¶			return readWebContent(aURL);¶		}¶		¶//		System.out.println("webpage content " + aURL + content);¶//		return content.replaceAll("<[^>]*>", "").replaceAll("\\s", "");¶		return content;¶	}¶	¶	private boolean isProvided(String s) {¶		for (String url : WebCommand.PROVIDED_URL) {¶			if (s.equals(url)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	¶//	public String readWebContent2(String url){¶//		try {¶//			HttpURLConnection httpClient =(HttpURLConnection) new URL(url).openConnection();¶//			httpClient.setRequestMethod("GET");¶//			httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");¶//			int responseCode = httpClient.getResponseCode();¶//			try (BufferedReader in = new BufferedReader(¶//					new InputStreamReader(httpClient.getInputStream()))) {¶//				StringBuilder response = new StringBuilder();¶//				String line;¶//				while ((line = in.readLine()) != null) {¶//					response.append(line);¶//				}¶//				if (response.toString().equals("") && !url.substring(0,5).equals("https")) {¶//					url = url.replaceFirst("http", "https");¶//					return readWebContent2(url);¶//				}	¶//				return response.toString();¶//			}¶//		} catch (Exception e) {¶//			// TODO: handle exception¶//			e.printStackTrace();¶//		}¶//		return "";¶//	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package logAnalyzer;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.concurrent.CountDownLatch;
import analyzer.Analyzer;
import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import fluorite.commands.ConsoleInput;
import fluorite.commands.ConsoleOutputCommand;
import fluorite.commands.CopyCommand;
import fluorite.commands.Delete;
import fluorite.commands.EHExceptionCommand;
import fluorite.commands.EHICommand;
import fluorite.commands.ExceptionCommand;
import fluorite.commands.GetHelpCommand;
import fluorite.commands.InsertStringCommand;
import fluorite.commands.PasteCommand;
import fluorite.commands.PauseCommand;
import fluorite.commands.Replace;
import fluorite.commands.RequestHelpCommand;
import fluorite.commands.RunCommand;
import fluorite.commands.ShellCommand;
import fluorite.commands.WebCommand;
import jdk.internal.jline.internal.InputStreamReader;

public class AExperimentalReplayer extends AReplayer{
	private Map<String, List<List<EHICommand>>> data;
	private static final int THREAD_LIM = 6;
	private static final String TIMESTAMP = "C:\\Users\\Zhizhou\\Desktop\\timestamp for each participant.csv";
	private Map<String, Long[]> timestamps = new HashMap<>();
	
	public AExperimentalReplayer(Analyzer anAnalyzer) {
		super(anAnalyzer);
		analyzer = anAnalyzer;
		data = new HashMap<>();
		System.setProperty("http.agent", "Chrome");
	}
	
	public void readTimestamp() {
		try {
			SimpleDateFormat df = new SimpleDateFormat("HH:mm");
			File timestampFile = new File(TIMESTAMP);
			CSVReader cr = new CSVReader(new FileReader(timestampFile));
			cr.readNext();
			String[] token = null;
			while ((token = cr.readNext()) != null) {
				long startTime = df.parse(token[4]).getTime();
				if (startTime < 15*3600*1000) {
					startTime += 12*3600*1000;
				}
				long endTime = df.parse(token[5]).getTime();
				if (endTime < 15*3600*1000) {
					endTime += 12*3600*1000;
				}
				Long[] times = {startTime, endTime};
				timestamps.put(token[0], times);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void createPauseCommandLogs(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.out.println("Class Folder does not exist");
			System.exit(0);
		}
		File[] students = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		latch = new CountDownLatch(students.length);
		for (int j = 0; j < students.length; j++) {
			File studentFolder  = students[j];
			File logFolder = new File(studentFolder,"Eclipse");
			if (!logFolder.exists()) {
				latch.countDown();
				continue;
			}
			System.out.println("Reading " + studentFolder.getName());
			File[] logs = new File(logFolder.getPath()).listFiles(new FileFilter() {
				public boolean accept(File pathname) {
					return pathname.getName().startsWith("Log") && pathname.getName().endsWith(".xml");
				}
			});
			Thread thread = new Thread(new Runnable() {
				public void run() {
					if (logs == null || !studentFolder.getName().equals("22")) {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
						return;
					}
//					if (!studentFolder.getName().equals("16")) {
//						synchronized (this) {
//							threadCount--;
//						}
//						latch.countDown();
//						return;
//					}
					try {
						File browser = new File(studentFolder, "Browser");
						List<EHICommand> webCommands = null;
						Iterator<EHICommand> webCommandIterator = null;
						if (browser.exists() && browser.listFiles().length != 0) {
							webCommands = readWebCommands(browser.listFiles()[0]);
							if (webCommands != null) {
								webCommandIterator = webCommands.iterator();
							}
						}
						EHICommand webCommand = null;
						for (File file : logs) {
							
							long startTimestamp = getLogFileCreationTime(file);
							long logStartTimestamp = startTimestamp;
//							long endTimestamp = Long.MAX_VALUE;
//							if (timestamps.containsKey(studentFolder.getName())) {
//								startTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[0] - 60*ONE_MIN;
//								endTimestamp = startTimestamp / DAY * DAY + timestamps.get(studentFolder.getName())[1] - 59*ONE_MIN;
//							}
							List<EHICommand> commands = readOneLogFile(file.getPath(), analyzer);
							if (commands.size() < 2) {
								continue;
							}
							List<EHICommand> newCommands = new ArrayList<>();
							EHICommand last = null;
							EHICommand cur = null;
							if (webCommand == null) {
//								webCommand = maybeAddWebCommandBeforeLogs(webCommandIterator, startTimestamp, newCommands);
								webCommand = webCommandIterator.next();
							}
							long timestamp = 0;
							if (webCommand != null) {
								timestamp = webCommand.getTimestamp() - logStartTimestamp;
							}
							for (EHICommand command : commands) {
//								if (command.getTimestamp() + logStartTimestamp < startTimestamp || command.getTimestamp() + logStartTimestamp > endTimestamp) {
//									continue;
//								}
								command.setStartTimestamp(logStartTimestamp);
								if (cur == null) {
									cur = command;
									newCommands.add(command);
								} else {
									last = cur;
									cur = command;
//									boolean webCommandAdded = false;
//									while(webCommand != null && maybeAddWebCommand(newCommands, last, cur, webCommand, webCommandIterator, startTimestamp)) {
//										webCommandAdded = true;
//										last = webCommand;
//										try {
//											webCommand = webCommandIterator.next();
//										} catch (NoSuchElementException e) {
//											webCommand = null;
//										}
//									} 
//									if (!webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
//									}
									
//									boolean added = false;
									while (webCommand != null && timestamp >= last.getTimestamp() && timestamp <= cur.getTimestamp()) {
										webCommand.setStartTimestamp(logStartTimestamp);
										webCommand.setTimestamp(timestamp);
										maybeAddPauseCommand(newCommands, last,	webCommand);
//										webCommandAdded = true;
										if (webCommandIterator.hasNext()) {
											last = webCommand;
											webCommand = webCommandIterator.next();
											timestamp = webCommand.getTimestamp() - logStartTimestamp;
										} else {
											webCommand = null;
											break;
										}
									}
//									if (webCommandAdded) {
//										maybeAddPauseCommand(newCommands, last, cur);
////										return webCommand;
//									} else {
										maybeAddPauseCommand(newCommands, last, cur);
//									}
								}
							}
							
							String logContent = XML_START1 + getLogFileCreationTime(file) + XML_START2 + XML_VERSION + XML_START3;
							for (EHICommand c : newCommands) {
								logContent += c.persist();
							}
							logContent += XML_FILE_ENDING;
							try {
								File newLog = new File(file.getParent()+File.separator+"RestOld"+File.separator+file.getName());
								if (newLog.exists()) {
									newLog.delete();
								}
								if (newCommands.size() == 0) {
									continue;
								}
								newLog.getParentFile().mkdirs();
								newLog.createNewFile();
								BufferedWriter writer = new BufferedWriter(new FileWriter(newLog, true));
								System.out.println("Writing to file " + newLog.getPath());
								writer.write(logContent);
								writer.close();
								System.out.println("Finished writing to file " + newLog.getPath());
							} catch (IOException e) {
								e.printStackTrace();
							}
						}
						
					} catch (Exception e) {
						e.printStackTrace();
					} finally {
						synchronized (this) {
							threadCount--;
						}
						latch.countDown();
					}
				}							
			});
			while(true) {
				if (threadCount > THREAD_LIM) {
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
				
				if (threadCount <= THREAD_LIM) {
					synchronized (this) {
						threadCount++;
						thread.start();
						break;
					}
				}
			}
		}
		try {
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		} finally {
			System.exit(0);
		}
	}

	public void analyzeFolder(String classFolderPath) {
		File folder = new File(classFolderPath);
		if (!folder.exists()) {
			System.exit(0);
		}
		File[] participants = folder.listFiles(new FileFilter() {
			public boolean accept(File pathname) {
				return pathname.isDirectory();
			}
		});
		for (int i = 0; i < participants.length; i++) {
			File participantFolder = new File(participants[i],"Eclipse");
			if (!participantFolder.exists()) {
				continue;
			}
			System.out.println("Reading student " + participantFolder.getName());
			data.put(participants[i].getName(), replayLogs(participantFolder.getPath(), analyzer));
		}
		List<List<EHICommand>> nestedCommands = data.get("26");
		for (int i = 0; i < nestedCommands.size(); i++) {
			for (EHICommand command:nestedCommands.get(i)) {
				if (command instanceof ExceptionCommand) {
					System.out.println(command);
				}
			}
		}
		createAssignData("Experiment", folder);
		createDistributionData("Experiment", folder);
		createPrevPauseDistribution("Experiment", folder);
//		createNextPauseDistribution("Experiment", folder);
		createWebStats("Experiment", folder);
		System.exit(0);
	}

	private void createAssignData(String assign, File folder) {
		File csv = new File(folder,assign+".csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"Event.csv");
		FileWriter fw2;
		int[] sum = new int[10];
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = {"Student", "Total Time Spent", "Active Time", "Rest Time", "Wall Clock Time", "Pause", "Web Visit", "Insert", "Delete", "Replace", "Copy", "Paste", "Run", "Exception", "Exception Breakdown"};
			cw.writeNext(header);

			if (csv2.exists()) {
				csv2.delete();
			}
			csv2.createNewFile();
			fw2 = new FileWriter(csv2);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header2 = {"case_id", "timestamp", "activity", "user"};
			cw2.writeNext(header2);

			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + "to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				long[] restTime = restTime(nestedCommands, FIVE_MIN, Long.MAX_VALUE);
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
				retVal.add(convertToHourMinuteSecond(restTime[0]));
				retVal.add(convertToHourMinuteSecond(wallClockTime));
				int[] numCommands = new int[9];
				List<String> breakdownList = new ArrayList<>();
				String list = "";
				for (List<EHICommand> commands : nestedCommands) {
					long lastTime = -1;
					long curTime = -1;
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);

						if (i > 0) {
							lastTime = curTime;
						}
						if (command != null) {
							curTime = command.getTimestamp() + command.getStartTimestamp();
						}
						if (lastTime - curTime > 5*60*1000) {
							writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
						}
						if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
							writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
						} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
							writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
						} else if (command instanceof InsertStringCommand || command instanceof CopyCommand ||
								command instanceof Delete ||
								command instanceof Replace || command instanceof PasteCommand || command instanceof ExceptionCommand ||
								command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
								command instanceof RequestHelpCommand || command instanceof GetHelpCommand) {
							writeOneLine(cw2, assign, curTime, getEventType(command), student);
						}
						if (command instanceof PauseCommand) {
							numCommands[0]++;
							list += "A";
						}
						if (command instanceof WebCommand) {
							numCommands[1]++;
							list += "W";
						}
						if (command instanceof InsertStringCommand) {
							numCommands[2]++;
							list += "I";
						}
						if (command instanceof Delete) {
							numCommands[3]++;
							list += "D";
						}
						if (command instanceof Replace) {
							numCommands[4]++;
							list += "R";
						}
						if (command instanceof CopyCommand) {
							numCommands[5]++;
							list += "C";
						}
						if (command instanceof PasteCommand) {
							numCommands[6]++;
							list += "P";
						}
						if (command instanceof RunCommand) {
							numCommands[7]++;
							list += "U";
						}
						if (command instanceof ExceptionCommand || command instanceof EHExceptionCommand) {
							if(isException(command)) {
								if (command instanceof EHExceptionCommand) {
									ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
									ex.setTimestamp(command.getTimestamp());
									ex.setStartTimestamp(command.getStartTimestamp());
								}
								numCommands[8]++;
								list += "E";
								if (i < commands.size()-1) {
									command = commands.get(i+1);
								} else {
									continue;
								}
								while(!(command instanceof InsertStringCommand || command instanceof Replace 
										|| command instanceof Delete 
										|| command instanceof CopyCommand || command instanceof PasteCommand)) {
									if (command instanceof RunCommand || command instanceof ConsoleOutputCommand || command instanceof ConsoleInput ||
											command instanceof RequestHelpCommand || command instanceof GetHelpCommand || command instanceof ExceptionCommand ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_LOST_FOCUS")) ||
											(command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals("ECLIPSE_CLOSED"))) {
										if (i > 0) {
											lastTime = curTime;
										}
										curTime = command.getTimestamp() + command.getStartTimestamp();
										if (lastTime - curTime > 5*60*1000) {
											writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
										}
										if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_LOST_FOCUS)) {
											writeOneLine(cw2, assign, curTime, REST_LOSEFOCUS, student);
										} else if (command instanceof ShellCommand && ((ShellCommand)command).getAttributesMap().get("type").equals(ECLIPSE_CLOSED)) {
											writeOneLine(cw2, assign, curTime, REST_ENDSESSION, student);
										} else {
											writeOneLine(cw2, assign, curTime, getEventType(command), student);
										}
									}
									if ((command instanceof ExceptionCommand || command instanceof EHExceptionCommand) && isException(command)) {
										if (command instanceof EHExceptionCommand) {
											ExceptionCommand ex = new ExceptionCommand(command.getDataMap().get("exceptionString"),"");
											ex.setTimestamp(command.getTimestamp());
											ex.setStartTimestamp(command.getStartTimestamp());
											if (i > 0) {
												lastTime = curTime;
											}
											curTime = command.getTimestamp() + command.getStartTimestamp();
											if (lastTime - curTime > 5*60*1000) {
												writeOneLine(cw2, assign, lastTime, REST_INSESSION, student);
											}
											writeOneLine(cw2, assign, curTime, getEventType(ex), student);
										}
										numCommands[8]++;
										list += "E";
									}
									i++;
									if (i+1 < commands.size()) {
										command = commands.get(i+1);
									} else {
										break;
									}
								}
								breakdownList.add(countConsecutiveCommands(list));
								list = "";
							}
						}
					}
				}
				if (!list.equals("")) {
					breakdownList.add(countConsecutiveCommands(list));
				}
				for(int i = 0; i < numCommands.length; i++) {
					retVal.add(i+5, numCommands[i]+"");
					sum[i] += numCommands[i];
					if (i > 1) {
						sum[9] += numCommands[i];
					}
				}
				for(int i = 0; i < breakdownList.size(); i++) {
					retVal.add(i+14, breakdownList.get(i));
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			List<String> retVal = new ArrayList<>();
			retVal.add("Sum");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			retVal.add("");
			for (int i = 0; i < sum.length; i++) {
				retVal.add(sum[i]+"");
			}
			String[] nextLine = retVal.toArray(new String[1]);
			cw.writeNext(nextLine);
			fw.close();
			cw.close();

			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void createDistributionData(String assign, File folder) {
		File csv = new File(folder,assign+"Distribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getHeader();
			cw.writeNext(header);
			
			String[] sum = new String[header.length];
			long[] restTimeSum = new long[REST.length];
			sum[0] = "Sum";
			for (int i = 1; i < sum.length; i++) {
				sum[i] = "";
			}
			int[] restSum = new int[REST.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				retVal.add(student);
				long totalTime = totalTimeSpent(nestedCommands);
				if (totalTime == 0) {
					continue;
				}
				long wallClockTime = wallClockTime(nestedCommands);
				retVal.add(convertToHourMinuteSecond(totalTime));
				retVal.add(convertToHourMinuteSecond(wallClockTime));

				long[] restTime = {0,0};
				for (int i = 0; i < REST.length; i++) {
					if (i < REST.length-1) {
						restTime = restTime(nestedCommands, REST[i], REST[i+1]);
					} else {
						restTime = restTime(nestedCommands, REST[i], Long.MAX_VALUE);
					}
					retVal.add(convertToHourMinuteSecond(totalTime - restTime[0]));
					retVal.add(convertToHourMinuteSecond(restTime[0]));
					retVal.add(restTime[1]+"");
					retVal.add(getTime(restTime[1] == 0? 0:1.0*restTime[2]/restTime[1]));
					restSum[i] += restTime[1];
					restTimeSum[i] += restTime[2];
				}
				
				String[] days = daysSpent(nestedCommands);
				if (days != null) {
					for (int i = 0; i < days.length; i++) {
						retVal.add(days[i]);
					}
				}
				
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			int sum2 = 0;
			for (int i = 0; i < restSum.length; i++) {
				sum[4*i+5] = restSum[i]+"";
				sum2 += restSum[i];
				sum[4*i+6] = getTime(restSum[i] == 0? 0:1.0*restTimeSum[i]/restSum[i]);
			}
			sum[1] = sum2+"";
			cw.writeNext(sum);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createPrevPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"PauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] prev = {"Prev"};
			cw.writeNext(prev);
			String[] header = getPauseHeader();
			cw.writeNext(header);

			String[] nextLine = new String[header.length];
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("prevType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
//				String[] nextLine = retVal.toArray(new String[1]);
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
//			String[] nextLine = new String[header.length];
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			String[] empty = {};
			cw.writeNext(empty);
			String[] next = {"next"};
			cw.writeNext(next);
			sum = new int[PauseCommand.TYPES.length];
			sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createWebStats(String assign, File folder) {
		File csv = new File(folder,assign+"WebStats.csv");
		FileWriter fw;
		File csv2 = new File(folder,assign+"WebSearches.csv");
		FileWriter fw2;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			if (csv2.exists()) {
				csv2.delete();
			}
			csv.createNewFile();
			csv2.createNewFile();
			fw = new FileWriter(csv);
			fw2 = new FileWriter(csv2);
			CSVWriter cw = new CSVWriter(fw);
			CSVWriter cw2 = new CSVWriter(fw2);
			String[] header = {"Title", "URL", "# of Visits", "Provided?"};
			String[] header2 = {"ID", "Search Word", "Title", "URL", "Sequence", "Last Page of the Search?", "Pasted Text"};
			cw.writeNext(header);
			cw2.writeNext(header2);

			Map<String, Integer> urls = new HashMap<>();
			Map<String, String> titles = new HashMap<>();
			Map<String, List<String>> searches = new LinkedHashMap<>();
			Map<String, List<String>> contents = new HashMap<>();
			for (String student : data.keySet()) {
				EHICommand lastSearch = null;
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (int i = 0; i < commands.size(); i++) {
						EHICommand command = commands.get(i);
						if (command instanceof WebCommand) {
							String url = command.getDataMap().get("URL");
							if (command.getAttributesMap().get("type").equals("Search")) {
								lastSearch = command;
								if (!searches.containsKey(lastSearch.getDataMap().get("keyword"))) {
									searches.put(lastSearch.getDataMap().get("keyword"), new ArrayList<>());
								}
							} 
							if (command.getAttributesMap().get("type").equals("Search Result") || command.getAttributesMap().get("type").equals("Stack Overflow")) {
								String searchWord = "null";
								if (lastSearch != null) {
									searchWord = lastSearch.getDataMap().get("keyword");
								}
								if (!searches.containsKey(searchWord)) {
									searches.put(searchWord, new ArrayList<>());
								}
								searches.get(searchWord).add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									if (!url.contains("google.com")) {
										list.add(readWebContent(url));
//										list.add(readWebContent2(url));
										contents.put(url, list);
									}
								}
							}
							if (command.getAttributesMap().get("type").contains("Provided")) {
								if (!searches.containsKey("Provided")) {
									searches.put("Provided", new ArrayList<>());
								}
								searches.get("Provided").add(url);
								if (!contents.containsKey(url)) {
									List<String> list = new ArrayList<>();
									list.add(readWebContent(url));
//									list.add(readWebContent2(url));
									contents.put(url, list);
								}
							}
							urls.merge(url, 1, Integer::sum);
							titles.put(url, command.getDataMap().get("keyword"));
						}
						if (command instanceof PasteCommand) {
							outer:
							for (int j = i-1; j >= 0 && j > i-20; j--) {
								EHICommand command2 = commands.get(j);
								String pastedText = "";
								if (command2 instanceof InsertStringCommand || command2 instanceof Replace) {
									if (command2 instanceof InsertStringCommand) {
										pastedText = command2.getDataMap().get(InsertStringCommand.XML_Data_Tag);
									} else {
										pastedText = command2.getDataMap().get("insertedText");
									}
									if (pastedText.length() > 10) {
										for (String url : contents.keySet()) {
											List<String> list = contents.get(url);
											String pastedText2 = pastedText.replaceAll("\\s", "");
											if (list.get(0).contains(pastedText2)) {
												for (int k = 1; k < list.size(); k++) {
													if (list.get(k).replaceAll("\\s",  "").equals(pastedText2)) {
														break outer;
													}
												}
												list.add(pastedText);
												break outer;
											}
										}
									}
								}
							}
						}
					}
				}
				for (String s : searches.keySet()) {
					List<String> nextLine = new ArrayList<>();
					nextLine.add(student);
					nextLine.add(s);
					if (searches.get(s).size() == 0) {
						nextLine.add("No Result");
						cw2.writeNext(nextLine.toArray(new String[1]));
						continue;
					}
					for (int i = 0; i < searches.get(s).size(); i++) {
						String url = searches.get(s).get(i);
						nextLine.add(titles.get(url));
						nextLine.add(url);
						nextLine.add(i+1+"");
						nextLine.add(i == searches.get(s).size()-1 ? "Last" : "");
						if (contents.containsKey(url)) {
							List<String> list = contents.get(url);
							for (int j = 1; j < list.size(); j++) {
								nextLine.add(list.get(j));
							}
						}
						cw2.writeNext(nextLine.toArray(new String[1]));
						nextLine = new ArrayList<>();
						nextLine.add(student);
						nextLine.add("");
					}
				}
				searches.clear();
			}
			Map<String, Integer> sortedMap = new LinkedHashMap<>();
			urls.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));
			for (String s : sortedMap.keySet()) {
				String[] nextLine = {titles.get(s), s, sortedMap.get(s)+"", isProvided(s)? "Provided":""};
				cw.writeNext(nextLine);
			}
			fw.close();
			cw.close();
			
			fw2.close();
			cw2.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private void createNextPauseDistribution(String assign, File folder) {
		File csv = new File(folder,assign+"NextPauseDistribution.csv");
		FileWriter fw;
		try {
			if (csv.exists()) {
				csv.delete();
			}
			csv.createNewFile();
			fw = new FileWriter(csv);
			CSVWriter cw = new CSVWriter(fw);
			String[] header = getPauseHeader();
			cw.writeNext(header);
			
			int[] sum = new int[PauseCommand.TYPES.length];
			long[] sumPause = new long[sum.length];
			for (String student : data.keySet()) {
				System.out.println("Writing " + assign + " student " + student + " to " + csv.getName());
				List<List<EHICommand>> nestedCommands = data.get(student);
				List<String> retVal = new ArrayList<>();
				int[] numCommmands = new int[sum.length];
				long[] pauseTimes = new long[sum.length];
				retVal.add(student);
				for (List<EHICommand> commands : nestedCommands) {
					for (EHICommand command : commands) {
						if (command instanceof PauseCommand) {
							for (int i = 0; i < sum.length; i++) {
								if (command.getDataMap().get("nextType").equals(PauseCommand.TYPES[i])) {
									numCommmands[i]++;
									pauseTimes[i] += Long.parseLong(command.getDataMap().get("pause")); 
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < sum.length; i++) {
					retVal.add(numCommmands[i]+"");
					if (numCommmands[i] == 0) {
						retVal.add("0");
					} else {
						retVal.add(pauseTimes[i]/numCommmands[i]+"");
					}
					sum[i] += numCommmands[i];
					sumPause[i] += pauseTimes[i];
				}
				String[] nextLine = retVal.toArray(new String[1]);
				cw.writeNext(nextLine);
				System.out.println("written " + assign + " student " + student + "to " + csv.getName());
			}
			String[] nextLine = new String[header.length];
			nextLine[0] = "Sum";
			for (int i = 0; i < sum.length; i++) {
				nextLine[1+i*2] = sum[i]+"";
				if (sum[i] == 0) {
					nextLine[2+i*2] = 0+"";
				} else {
					nextLine[2+i*2] = sumPause[i]/sum[i]+"";
				}
			}
			cw.writeNext(nextLine);
			fw.close();
			cw.close();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}
	
	private String[] getPauseHeader() {
		List<String> retVal = new ArrayList<>();
		retVal.add("ID");
		for (String s : PauseCommand.TYPES) {
			retVal.add(s);
			retVal.add("Avg. Time");
//			retVal.add("Longest Time");
//			retVal.add("Shortest Time");
		}
		return retVal.toArray(new String[1]);
	}
	
	private void writeOneLine(CSVWriter cw, String assign, long time, String type, String pid) {
		String[] nextLine = new String[4]; 
		nextLine[0] = assign + " " + pid;
		Date date = new Date(time);
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
		nextLine[1] = df.format(date);
		nextLine[2] = type;
		nextLine[3] = pid;
		if (nextLine != null) {
			cw.writeNext(nextLine);
		}
	}
	
	public List<List<EHICommand>> replayLogs(String projectPath, Analyzer analyzer){
		List<List<EHICommand>> nestedCommands = analyzer.convertXMLLogToObjects(projectPath+File.separator+"Rest");
		sortNestedCommands(nestedCommands);
		return nestedCommands;
	}

	private void maybeAddPauseCommand(List<EHICommand> newCommands, EHICommand last, EHICommand cur) {
		long rest = cur.getTimestamp()-last.getTimestamp();
		if (rest >= 1*ONE_SECOND) {
			String range = "";
			if (rest < 2*ONE_SECOND) {
				range = "1s-2s";
			} else if (rest < 5*ONE_SECOND) {
				range = "2s-5s";
			} else if (rest < 10*ONE_SECOND) {
				range = "5s-10s";
			} else if (rest < 20*ONE_SECOND) {
				range = "10s-20s";
			} else if (rest < 30*ONE_SECOND) {
				range = "20s-30s";
			} else if (rest < ONE_MIN) {
				range = "30s-1m";
			} else if (rest < TWO_MIN) {
				range = "1m-2m";
			} else if (rest < FIVE_MIN) {
				range = "2m-5m";
			} else if (rest < TEN_MIN) {
				range = "5m-10m";
			} else if (rest < 3*TEN_MIN) {
				range = "10m-30m";
			} else if (rest < 6*TEN_MIN) {
				range = "30m-60m";
			} else {
				range = ">1h";
			}
			PauseCommand rCommnad = new PauseCommand(last, cur, rest, range);
			rCommnad.setStartTimestamp(last.getStartTimestamp());
			rCommnad.setTimestamp(last.getTimestamp()+1);
			newCommands.add(rCommnad);
		} 
		newCommands.add(cur);
	}
	
	private EHICommand maybeAddWebCommandBeforeLogs(Iterator<EHICommand> iterator, long startTimestamp, List<EHICommand> commands) {
		if (iterator == null) {
			return null;
		}
		EHICommand webCommand = null;
		long timestamp = 0;
		while((webCommand = iterator.next()) != null && (timestamp = webCommand.getTimestamp() - startTimestamp) < 0) {
			webCommand.setStartTimestamp(0);
			webCommand.setTimestamp(timestamp);
			commands.add(webCommand);
		}
		return webCommand;
	}

	public String readWebContent(String aURL) {
		String content = "";
		Scanner sc = null;
		try {
			URL url = new URL(aURL);
//			System.out.println("accessing webpage " + aURL);
			URLConnection con = url.openConnection();
			con.setReadTimeout(5000);
			sc = new Scanner(con.getInputStream());
			StringBuffer sb = new StringBuffer();
			while (sc.hasNext()) {
				sb.append(sc.next());
			}
			content = sb.toString();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (sc != null) {
				sc.close();
			}
		}
		if (content.equals("") && !aURL.substring(0,5).equals("https")) {
			aURL = aURL.replaceFirst("http", "https");
			return readWebContent(aURL);
		}
		
//		System.out.println("webpage content " + aURL + content);
//		return content.replaceAll("<[^>]*>", "").replaceAll("\\s", "");
		return content;
	}
	
	private boolean isProvided(String s) {
		for (String url : WebCommand.PROVIDED_URL) {
			if (s.equals(url)) {
				return true;
			}
		}
		return false;
	}
	
//	public String readWebContent2(String url){
//		try {
//			HttpURLConnection httpClient =(HttpURLConnection) new URL(url).openConnection();
//			httpClient.setRequestMethod("GET");
//			httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");
//			int responseCode = httpClient.getResponseCode();
//			try (BufferedReader in = new BufferedReader(
//					new InputStreamReader(httpClient.getInputStream()))) {
//				StringBuilder response = new StringBuilder();
//				String line;
//				while ((line = in.readLine()) != null) {
//					response.append(line);
//				}
//				if (response.toString().equals("") && !url.substring(0,5).equals("https")) {
//					url = url.replaceFirst("http", "https");
//					return readWebContent2(url);
//				}	
//				return response.toString();
//			}
//		} catch (Exception e) {
//			// TODO: handle exception
//			e.printStackTrace();
//		}
//		return "";
//	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="128" _type="Delete" date="Fri Feb 26 14:19:20 EST 2021" docASTNodeCount="6104" docActiveCodeLength="34771" docExpressionCount="4217" docLength="37744" endLine="118" length="41" offset="4002" repeat="2" startLine="118" starttimestamp="1614364734870" timestamp="2425643" timestamp2="2425812">
    <text><![CDATA[ || !studentFolder.getName().equals("22")]]></text>
  </DocumentChange>
  <DocumentChange __id="211" _type="Insert" date="Fri Feb 26 14:37:15 EST 2021" docASTNodeCount="6104" docActiveCodeLength="34774" docExpressionCount="4217" docLength="37747" length="3" offset="34012" repeat="3" starttimestamp="1614364734870" timestamp="3500159" timestamp2="3500459">
    <text><![CDATA[Old]]></text>
  </DocumentChange>
  <Command __id="221" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 14:37:20 EST 2021" docASTNodeCount="150" docActiveCodeLength="1206" docExpressionCount="90" docLength="2822" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="3505329">
    <filePath><![CDATA[C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\LogAnalyzer\src\logAnalyzer\Driver.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package logAnalyzer;¶¶import java.io.BufferedReader;¶import java.io.IOException;¶import java.io.InputStreamReader;¶import java.io.OutputStream;¶import java.net.HttpURLConnection;¶import java.net.URL;¶import java.util.Date;¶¶import org.json.JSONException;¶import org.json.JSONObject;¶¶import analyzer.AnAnalyzer;¶import analyzer.Analyzer;¶¶public class Driver {¶	private static String classFolderPath = "E:\\testdata\\Fall2020";¶	private static String experimentalClassFolderPath = "C:\\Users\\Zhizhou\\OneDrive\\UNC CH\\Junior 1st Sem\\hermes\\git\\Hermes\\Hermes\\data\\ExperimentalData";¶	private static Analyzer analyzer;¶	private static AReplayer replayer;¶	private static int timeout = 5000;¶	private static String url = "http://stackoverflow.com/questions/4186835/how-to-add-multiple-components-to-a-jframe";¶	¶	public static void main(String[] args) {¶		analyzer = new AnAnalyzer();¶//		replayer = new AReplayer(analyzer);¶//		analyzer.addAnalyzerListener(replayer);	¶//		replayer.createPauseCommandLogs(classFolderPath);¶//		replayer.analyzeFolder(classFolderPath);¶		replayer = new AExperimentalReplayer(analyzer);¶		((AExperimentalReplayer)replayer).readTimestamp();¶//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);¶//		String s2 = ((AExperimentalReplayer)replayer).readWebContent2(url);¶//		System.out.println(s1.equals(s2));¶//		analyzer.addAnalyzerListener(replayer);	¶		replayer.createPauseCommandLogs(experimentalClassFolderPath);¶//		replayer.analyzeFolder(experimentalClassFolderPath);¶//		String s1 = ((AExperimentalReplayer)replayer).readWebContent(url);¶//		String s2 = "";¶//		System.out.println();¶//		try {¶//			s2 = get(url);¶//		} catch (Exception e) {¶//			// TODO: handle exception¶//			e.printStackTrace();¶//		}¶//		System.out.println(s1.equals(s2));¶//		Date d = new Date(1379108460000L);¶//		System.out.println(d);¶	}¶	¶//	public static String get(String urlString) throws Exception{¶//         HttpURLConnection httpClient =(HttpURLConnection) new URL(urlString).openConnection();¶//        httpClient.setRequestMethod("GET");¶//        httpClient.setRequestProperty("User-Agent", "Mozilla/5.0");¶//        int responseCode = httpClient.getResponseCode();¶//        System.out.println("Response Code : " + responseCode);¶//        try (BufferedReader in = new BufferedReader(¶//                new InputStreamReader(httpClient.getInputStream()))) {¶//            StringBuilder response = new StringBuilder();¶//            String line;¶//            while ((line = in.readLine()) != null) {¶//                response.append(line);¶//            }¶//            System.out.println(response.toString());¶//            return response.toString();¶//        }¶//	}¶}¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶")]]]></diff>
  </Command>
  <DocumentChange __id="224" _type="Delete" date="Fri Feb 26 14:37:21 EST 2021" docASTNodeCount="155" docActiveCodeLength="1260" docExpressionCount="94" docLength="2820" endLine="37" length="2" offset="1505" startLine="37" starttimestamp="1614364734870" timestamp="3506833">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="228" _type="Insert" date="Fri Feb 26 14:37:22 EST 2021" docASTNodeCount="150" docActiveCodeLength="1197" docExpressionCount="90" docLength="2822" length="2" offset="1440" starttimestamp="1614364734870" timestamp="3507444">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="225" _type="PauseCommand" date="Fri Feb 26 14:37:21 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3506833">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="226" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:37:21 EST 2021" starttimestamp="1614364734870" timestamp="3506852" />
  <Command __id="227" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Fri Feb 26 14:37:21 EST 2021" starttimestamp="1614364734870" timestamp="3507120" />
  <Command __id="229" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Fri Feb 26 14:37:22 EST 2021" starttimestamp="1614364734870" timestamp="3507458" />
  <Command __id="230" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Feb 26 14:37:23 EST 2021" starttimestamp="1614364734870" timestamp="3508349" />
  <Command __id="231" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:37:23 EST 2021" starttimestamp="1614364734870" timestamp="3508438" />
  <Command __id="232" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:37:23 EST 2021" starttimestamp="1614364734870" timestamp="3508544" />
  <Command __id="234" _type="MoveCaretCommand" caretOffset="1139" date="Fri Feb 26 14:37:24 EST 2021" docOffset="9936" starttimestamp="1614364734870" timestamp="3509215" />
  <Command __id="236" _type="PauseCommand" date="Fri Feb 26 14:37:27 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3513038">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3823]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="235" _type="SelectTextCommand" caretOffset="1752" date="Fri Feb 26 14:37:27 EST 2021" end="1752" start="1736" starttimestamp="1614364734870" timestamp="3513038" />
  <Command __id="238" _type="PauseCommand" date="Fri Feb 26 14:37:30 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3515591">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2553]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="237" _type="MoveCaretCommand" caretOffset="1821" date="Fri Feb 26 14:37:30 EST 2021" docOffset="10618" starttimestamp="1614364734870" timestamp="3515591" />
  <Command __id="240" _type="InsertStringCommand" date="Fri Feb 26 14:37:31 EST 2021" starttimestamp="1614364734870" timestamp="3516410" timestamp2="3516410">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="242" _type="InsertStringCommand" date="Fri Feb 26 14:37:31 EST 2021" starttimestamp="1614364734870" timestamp="3516600" timestamp2="3516600">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="244" _type="InsertStringCommand" date="Fri Feb 26 14:37:31 EST 2021" starttimestamp="1614364734870" timestamp="3516695" timestamp2="3516695">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="246" _type="PauseCommand" date="Fri Feb 26 14:37:33 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3518303">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1608]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="245" _type="MoveCaretCommand" caretOffset="1894" date="Fri Feb 26 14:37:33 EST 2021" docOffset="10691" starttimestamp="1614364734870" timestamp="3518303" />
  <Command __id="248" _type="InsertStringCommand" date="Fri Feb 26 14:37:33 EST 2021" starttimestamp="1614364734870" timestamp="3518952" timestamp2="3518952">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="250" _type="InsertStringCommand" date="Fri Feb 26 14:37:33 EST 2021" starttimestamp="1614364734870" timestamp="3519125" timestamp2="3519125">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="252" _type="InsertStringCommand" date="Fri Feb 26 14:37:34 EST 2021" starttimestamp="1614364734870" timestamp="3519229" timestamp2="3519229">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="254" _type="PauseCommand" date="Fri Feb 26 14:37:35 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3520982">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1753]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="253" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:37:35 EST 2021" starttimestamp="1614364734870" timestamp="3520982" />
  <Command __id="256" _type="PauseCommand" date="Fri Feb 26 14:37:37 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3522621">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1639]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="255" _type="SelectTextCommand" caretOffset="9953" date="Fri Feb 26 14:37:37 EST 2021" end="9953" start="9931" starttimestamp="1614364734870" timestamp="3522621" />
  <Command __id="258" _type="PauseCommand" date="Fri Feb 26 14:37:39 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3524192">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1571]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="257" _type="MoveCaretCommand" caretOffset="10034" date="Fri Feb 26 14:37:39 EST 2021" docOffset="18831" starttimestamp="1614364734870" timestamp="3524192" />
  <Command __id="260" _type="InsertStringCommand" date="Fri Feb 26 14:37:39 EST 2021" starttimestamp="1614364734870" timestamp="3524868" timestamp2="3524868">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="262" _type="InsertStringCommand" date="Fri Feb 26 14:37:39 EST 2021" starttimestamp="1614364734870" timestamp="3525044" timestamp2="3525044">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="264" _type="InsertStringCommand" date="Fri Feb 26 14:37:40 EST 2021" starttimestamp="1614364734870" timestamp="3525132" timestamp2="3525132">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 14:37:40 EST 2021" starttimestamp="1614364734870" timestamp="3526112" />
  <Command __id="268" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 14:37:41 EST 2021" starttimestamp="1614364734870" timestamp="3526225" />
  <Command __id="270" _type="InsertStringCommand" date="Fri Feb 26 14:37:41 EST 2021" starttimestamp="1614364734870" timestamp="3526459" timestamp2="3526459">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="272" _type="InsertStringCommand" date="Fri Feb 26 14:37:41 EST 2021" starttimestamp="1614364734870" timestamp="3526572" timestamp2="3526572">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="273" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:37:42 EST 2021" starttimestamp="1614364734870" timestamp="3527142" />
  <Command __id="275" _type="PauseCommand" date="Fri Feb 26 14:37:43 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3528809">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1667]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="274" _type="SelectTextCommand" caretOffset="12382" date="Fri Feb 26 14:37:43 EST 2021" end="12382" start="12355" starttimestamp="1614364734870" timestamp="3528809" />
  <Command __id="277" _type="PauseCommand" date="Fri Feb 26 14:37:45 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3530375">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1566]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="276" _type="MoveCaretCommand" caretOffset="12468" date="Fri Feb 26 14:37:45 EST 2021" docOffset="21265" starttimestamp="1614364734870" timestamp="3530375" />
  <Command __id="279" _type="InsertStringCommand" date="Fri Feb 26 14:37:45 EST 2021" starttimestamp="1614364734870" timestamp="3531002" timestamp2="3531002">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="281" _type="InsertStringCommand" date="Fri Feb 26 14:37:46 EST 2021" starttimestamp="1614364734870" timestamp="3531266" timestamp2="3531266">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="283" _type="InsertStringCommand" date="Fri Feb 26 14:37:46 EST 2021" starttimestamp="1614364734870" timestamp="3531354" timestamp2="3531354">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="284" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:37:46 EST 2021" starttimestamp="1614364734870" timestamp="3532045" />
  <Command __id="286" _type="PauseCommand" date="Fri Feb 26 14:37:48 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3533521">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1476]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="285" _type="SelectTextCommand" caretOffset="16517" date="Fri Feb 26 14:37:48 EST 2021" end="16517" start="16503" starttimestamp="1614364734870" timestamp="3533521" />
  <Command __id="288" _type="PauseCommand" date="Fri Feb 26 14:37:49 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3534941">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1420]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="287" _type="MoveCaretCommand" caretOffset="16594" date="Fri Feb 26 14:37:49 EST 2021" docOffset="25391" starttimestamp="1614364734870" timestamp="3534941" />
  <Command __id="290" _type="InsertStringCommand" date="Fri Feb 26 14:37:50 EST 2021" starttimestamp="1614364734870" timestamp="3535625" timestamp2="3535625">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="292" _type="InsertStringCommand" date="Fri Feb 26 14:37:50 EST 2021" starttimestamp="1614364734870" timestamp="3535794" timestamp2="3535794">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="294" _type="InsertStringCommand" date="Fri Feb 26 14:37:50 EST 2021" starttimestamp="1614364734870" timestamp="3535900" timestamp2="3535900">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="296" _type="PauseCommand" date="Fri Feb 26 14:37:53 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3538549">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2649]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="295" _type="MoveCaretCommand" caretOffset="16673" date="Fri Feb 26 14:37:53 EST 2021" docOffset="25470" starttimestamp="1614364734870" timestamp="3538549" />
  <Command __id="298" _type="InsertStringCommand" date="Fri Feb 26 14:37:54 EST 2021" starttimestamp="1614364734870" timestamp="3539195" timestamp2="3539195">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="300" _type="InsertStringCommand" date="Fri Feb 26 14:37:54 EST 2021" starttimestamp="1614364734870" timestamp="3539376" timestamp2="3539376">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="302" _type="InsertStringCommand" date="Fri Feb 26 14:37:54 EST 2021" starttimestamp="1614364734870" timestamp="3539480" timestamp2="3539480">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="304" _type="PauseCommand" date="Fri Feb 26 14:37:56 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3541211">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1731]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="303" _type="EclipseCommand" commandID="org.eclipse.ui.navigate.backwardHistory" date="Fri Feb 26 14:37:56 EST 2021" starttimestamp="1614364734870" timestamp="3541211" />
  <Command __id="306" _type="PauseCommand" date="Fri Feb 26 14:37:57 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3542743">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1532]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="305" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Fri Feb 26 14:37:57 EST 2021" starttimestamp="1614364734870" timestamp="3542743" />
  <Command __id="307" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:37:57 EST 2021" starttimestamp="1614364734870" timestamp="3542831" />
  <Command __id="308" _type="EclipseCommand" commandID="" date="Fri Feb 26 14:37:57 EST 2021" starttimestamp="1614364734870" timestamp="3542949" />
  <Command __id="313" _type="PauseCommand" date="Fri Feb 26 14:38:01 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3546640">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1874]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="312" _type="RunCommand" date="Fri Feb 26 14:38:01 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="3546640" type="Run" />
  <Command __id="314" _type="RunCommand" date="Fri Feb 26 14:38:01 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="3546640" type="Run" />
  <Command __id="315" _type="ConsoleOutput" date="Fri Feb 26 14:38:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3547490" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld has 3 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-36-31-023.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-39-52-726.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-54-59-878.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing to file"), Diff(INSERT,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld has 3 file(s)¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"28"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"20"), Diff(INSERT,"13"), Diff(EQUAL,"-14-3"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,"-3"), Diff(DELETE,"8-379"), Diff(INSERT,"1-023"), Diff(EQUAL,".xml¶"), Diff(DELETE,"Finished writing to file"), Diff(INSERT,"Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\16\Eclipse\RestOld\Log2013-09-13-14-39-52-726.xml¶Reading"), Diff(EQUAL," C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"28"), Diff(INSERT,"16"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"20"), Diff(INSERT,"13"), Diff(EQUAL,"-14-"), Diff(DELETE,"30-38-379"), Diff(INSERT,"54-59-878"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="316" _type="ConsoleOutput" date="Fri Feb 26 14:38:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3547735" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\17\Eclipse\RestOld\Log2013-09-13-09-53-29-705.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld\Log2013-09-17-10-06-32-242.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\RestOld has "), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-13-"), Diff(DELETE,"14-36-31-023"), Diff(INSERT,"09-53-29-705"), Diff(EQUAL,".xml¶Reading "), Diff(INSERT,"student Eclipse¶Particpant "), Diff(EQUAL,"C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\RestOld"), Diff(DELETE,"\Log2013-09-13-14-39-52-726.xml"), Diff(INSERT," has 1 file(s)"), Diff(EQUAL,"¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"-1"), Diff(DELETE,"4-54-59-878"), Diff(INSERT,"0-06-32-242"), Diff(EQUAL,".xml¶")]]]></diff>
  </Command>
  <Command __id="317" _type="ConsoleOutput" date="Fri Feb 26 14:38:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3547843" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\19\Eclipse\RestOld\Log2013-09-12-15-05-47-820.xml
Reading student Eclipse
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\1"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"3-09-53-29-705"), Diff(INSERT,"2-15-05-47-820"), Diff(EQUAL,".xml¶Reading student Eclipse¶"), Diff(DELETE,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\18\Eclipse\RestOld\Log2013-09-17-10-06-32-242.xml¶")]]]></diff>
  </Command>
  <Command __id="318" _type="ConsoleOutput" date="Fri Feb 26 14:38:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3547909" type="ConsoleOutput">
    <outputString><![CDATA[Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\20\Eclipse\RestOld\Log2013-09-12-10-40-05-321.xml
Reading student Eclipse
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading student Eclipse¶"), Diff(EQUAL,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"19"), Diff(INSERT,"20"), Diff(EQUAL,"\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"19"), Diff(INSERT,"20"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-12-1"), Diff(DELETE,"5-05-47-820"), Diff(INSERT,"0-40-05-321"), Diff(EQUAL,".xml¶Reading student Eclipse¶")]]]></diff>
  </Command>
  <Command __id="319" _type="ConsoleOutput" date="Fri Feb 26 14:38:02 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548013" type="ConsoleOutput">
    <outputString><![CDATA[Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\21\Eclipse\RestOld\Log2013-09-16-10-05-18-718.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"2"), Diff(INSERT,"6"), Diff(EQUAL,"-10-"), Diff(DELETE,"40-05-321"), Diff(INSERT,"05-18-718"), Diff(EQUAL,".xml¶Reading student Eclipse¶"), Diff(INSERT,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\22\Eclipse\RestOld\Log2013-09-15-15-38-06-069.xml¶")]]]></diff>
  </Command>
  <Command __id="320" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548130" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-09-48-24-508.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013-09-14-10-54-43-267.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-12-59-39-052.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-13-40-09-552.xml
Reading student Eclipse
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Reading student Eclipse¶"), Diff(EQUAL,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"\Eclipse\RestOld has "), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"6-10"), Diff(INSERT,"4-09-48-24-508.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\23\Eclipse\RestOld\Log2013"), Diff(EQUAL,"-0"), Diff(DELETE,"5"), Diff(INSERT,"9"), Diff(EQUAL,"-1"), Diff(DELETE,"8-718"), Diff(INSERT,"4-10-54-43-267"), Diff(EQUAL,".xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\RestOld has "), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"-1"), Diff(DELETE,"5"), Diff(INSERT,"2-59"), Diff(EQUAL,"-3"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,"-0"), Diff(DELETE,"6-069.xml"), Diff(INSERT,"52.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09-14-13-40-09-552.xml¶Reading student Eclipse"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="321" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548191" type="ConsoleOutput">
    <outputString><![CDATA[Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld has 2 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-14-39-04-982.xml
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-15-33-03-226.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\RestOld\Log2013-09-20-10-17-49-071.xml
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading student Eclipse¶"), Diff(EQUAL,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\RestOld has 2 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(INSERT,"18-"), Diff(EQUAL,"14-"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"9-"), Diff(DELETE,"48-24-508"), Diff(INSERT,"04-982"), Diff(EQUAL,".xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"4"), Diff(INSERT,"8"), Diff(EQUAL,"-1"), Diff(DELETE,"0-54-4"), Diff(INSERT,"5-33-0"), Diff(EQUAL,"3-"), Diff(INSERT,"2"), Diff(EQUAL,"26"), Diff(DELETE,"7"), Diff(EQUAL,".xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\RestOld has "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"14-12-59-39-052.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\24\Eclipse\RestOld\Log2013-09"), Diff(INSERT,"20"), Diff(EQUAL,"-1"), Diff(DELETE,"4"), Diff(INSERT,"0"), Diff(EQUAL,"-1"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"-4"), Diff(DELETE,"0"), Diff(INSERT,"9"), Diff(EQUAL,"-0"), Diff(DELETE,"9-552"), Diff(INSERT,"71"), Diff(EQUAL,".xml¶"), Diff(DELETE,"Reading student Eclipse¶")]]]></diff>
  </Command>
  <Command __id="322" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548315" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\28\Eclipse\RestOld\Log2013-09-20-14-30-38-379.xml
Reading student Eclipse
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Reading student Eclipse¶"), Diff(EQUAL,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\RestOld has "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL," file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"18"), Diff(INSERT,"20"), Diff(EQUAL,"-14-3"), Diff(DELETE,"9-04-982.xml¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\26\Eclipse\RestOld\Log2013-09-18-15-33-03-226.xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\27\Eclipse\RestOld\Log2013-09-20-10-17-49-071.xml"), Diff(INSERT,"0-38-379.xml¶Reading student Eclipse"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="323" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548376" type="ConsoleOutput">
    <outputString><![CDATA[Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\RestOld\Log2013-09-23-12-56-55-221.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\30\Eclipse\RestOld\Log2013-09-11-15-13-48-829.xml
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\29\Eclipse\RestOld\Log2013-09-23-12-56-55-221.xml¶"), Diff(EQUAL,"Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"28"), Diff(INSERT,"30"), Diff(EQUAL,"\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"28"), Diff(INSERT,"30"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"20-14-30-38-379.xml¶Reading student Eclipse"), Diff(INSERT,"11-15-13-48-829.xml"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="324" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548466" type="ConsoleOutput">
    <outputString><![CDATA[Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\RestOld\Log2013-09-06-16-07-40-790.xml
Reading student Eclipse
Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld has 1 file(s)
Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld\Log2013-09-13-12-11-53-568.xml
Reading student Eclipse
folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\RestOld
Reading student Eclipse
folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\RestOld
Reading student Eclipse
folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\RestOld
ExceptionCommand EHException  EventLogger utility command
Writing Experiment student 22to ExperimentOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Reading student Eclipse¶"), Diff(EQUAL,"Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"29"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\"), Diff(DELETE,"29"), Diff(INSERT,"31"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-"), Diff(DELETE,"23-12-56-55-221"), Diff(INSERT,"06-16-07-40-790"), Diff(EQUAL,".xml¶Reading student Eclipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\3"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\3"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"\Eclipse\RestOld\Log2013-09-1"), Diff(DELETE,"1-15-13-48-829.xml"), Diff(INSERT,"3-12-11-53-568.xml¶Reading student Eclipse¶folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\RestOld¶Reading student Eclipse¶folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd1\Eclipse\RestOld¶Reading student Eclipse¶folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\pd2\Eclipse\RestOld¶ExceptionCommand EHException  EventLogger utility command¶Writing Experiment student 22to ExperimentOld.csv"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="325" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548553" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 22to ExperimentOld.csv
Writing Experiment student 33to ExperimentOld.csv
written Experiment student 33to ExperimentOld.csv
Writing Experiment student 23to ExperimentOld.csv
written Experiment student 23to ExperimentOld.csv
Writing Experiment student 24to ExperimentOld.csv
written Experiment student 24to ExperimentOld.csv
Writing Experiment student 26to ExperimentOld.csv
written Experiment student 26to ExperimentOld.csv
Writing Experiment student 16to ExperimentOld.csv
written Experiment student 16to ExperimentOld.csv
Writing Experiment student 27to ExperimentOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Reading stud"), Diff(INSERT,"writt"), Diff(EQUAL,"en"), Diff(DELETE,"t"), Diff(EQUAL," E"), Diff(DELETE,"clipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\31\Eclipse\RestOld\Log2013-09-06-16-07-40-790.xml¶Reading stud"), Diff(INSERT,"xperiment student 22to ExperimentOld.csv¶Writing Experiment student 33to ExperimentOld.csv¶writt"), Diff(EQUAL,"en"), Diff(DELETE,"t"), Diff(EQUAL," E"), Diff(DELETE,"clipse¶Particpant C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld has 1 file(s)¶Reading C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\hermes\git\Hermes\Hermes\data\ExperimentalData\32\Eclipse\RestOld\Log2013-09-13-12-11-53-568.xml¶Reading stud"), Diff(INSERT,"xperiment student 33to ExperimentOld.csv¶Writing Experiment student 23to ExperimentOld.csv¶writt"), Diff(EQUAL,"en"), Diff(DELETE,"t"), Diff(EQUAL," E"), Diff(DELETE,"clipse¶folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\h"), Diff(INSERT,"xperiment student 23to Exp"), Diff(EQUAL,"er"), Diff(INSERT,"i"), Diff(EQUAL,"me"), Diff(DELETE,"s\git\Hermes\Hermes\data\ExperimentalData\33\Eclipse\RestOld¶Reading stud"), Diff(INSERT,"ntOld.csv¶Writing Experiment student 24to ExperimentOld.csv¶writt"), Diff(EQUAL,"en"), Diff(DELETE,"t"), Diff(EQUAL," E"), Diff(DELETE,"clipse¶folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\h"), Diff(INSERT,"xperiment student 24to Exp"), Diff(EQUAL,"er"), Diff(INSERT,"i"), Diff(EQUAL,"me"), Diff(DELETE,"s\git\H"), Diff(INSERT,"ntOld.csv¶Writing Exp"), Diff(EQUAL,"er"), Diff(INSERT,"i"), Diff(EQUAL,"me"), Diff(DELETE,"s\Hermes\data\ExperimentalData\pd1\Eclipse\RestOld¶Reading stud"), Diff(INSERT,"nt student 26to ExperimentOld.csv¶writt"), Diff(EQUAL,"en"), Diff(DELETE,"t"), Diff(EQUAL," E"), Diff(DELETE,"clipse¶folder does not exist:C:\Users\Zhizhou\OneDrive\UNC CH\Junior 1st Sem\h"), Diff(INSERT,"xperiment student 26to Exp"), Diff(EQUAL,"er"), Diff(INSERT,"i"), Diff(EQUAL,"me"), Diff(DELETE,"s\git\H"), Diff(INSERT,"ntOld.csv¶Writing Exp"), Diff(EQUAL,"er"), Diff(INSERT,"i"), Diff(EQUAL,"me"), Diff(DELETE,"s\Hermes\data\ExperimentalData\pd2\Eclipse\RestOld¶ExceptionCommand EHException  EventLogger utility command"), Diff(INSERT,"nt student 16to ExperimentOld.csv¶written Experiment student 16to ExperimentOld.csv"), Diff(EQUAL,"¶Writing Experiment student 2"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,"to ExperimentOld.csv¶")]]]></diff>
  </Command>
  <Command __id="326" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548615" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 27to ExperimentOld.csv
Writing Experiment student 17to ExperimentOld.csv
written Experiment student 17to ExperimentOld.csv
Writing Experiment student 28to ExperimentOld.csv
written Experiment student 28to ExperimentOld.csv
Writing Experiment student 18to ExperimentOld.csv
written Experiment student 18to ExperimentOld.csv
Writing Experiment student 29to ExperimentOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student 2"), Diff(DELETE,"2to ExperimentOld.csv¶Writing Experiment student 33to ExperimentOld.csv¶written Experiment student 33to ExperimentOld.csv¶Writing Experiment student 23to ExperimentOld.csv¶written Experiment student 23"), Diff(INSERT,"7"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student "), Diff(DELETE,"24"), Diff(INSERT,"17"), Diff(EQUAL,"to ExperimentOld.csv¶written Experiment student "), Diff(DELETE,"24"), Diff(INSERT,"17"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student 2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"to ExperimentOld.csv¶written Experiment student 2"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student 1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"to ExperimentOld.csv¶written Experiment student 1"), Diff(DELETE,"6"), Diff(INSERT,"8"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student 2"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"to ExperimentOld.csv¶")]]]></diff>
  </Command>
  <Command __id="327" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548670" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 29to ExperimentOld.csv
Writing Experiment student 19to ExperimentOld.csv
written Experiment student 19to ExperimentOld.csv
Writing Experiment student pd1to ExperimentOld.csv
written Experiment student pd1to ExperimentOld.csv
Writing Experiment student 30to ExperimentOld.csv
written Experiment student 30to ExperimentOld.csv
Writing Experiment student 20to ExperimentOld.csv
written Experiment student 20to ExperimentOld.csv
Writing Experiment student 31to ExperimentOld.csv
written Experiment student 31to ExperimentOld.csv
Writing Experiment student 21to ExperimentOld.csv
written Experiment student 21to ExperimentOld.csv
Writing Experiment student 32to ExperimentOld.csv
written Experiment student 32to ExperimentOld.csv
Writing Experiment student pd2to ExperimentOld.csv
written Experiment student pd2to ExperimentOld.csv
Writing Experiment student 22 to ExperimentDistributionOld.csv
written Experiment student 22to ExperimentDistributionOld.csv
Writing Experiment student 33 to ExperimentDistributionOld.csv
Writing Experiment student 23 to ExperimentDistributionOld.csv
written Experiment student 23to ExperimentDistributionOld.csv
Writing Experiment student 24 to ExperimentDistributionOld.csv
written Experiment student 24to ExperimentDistributionOld.csv
Writing Experiment student 26 to ExperimentDistributionOld.csv
written Experiment student 26to ExperimentDistributionOld.csv
Writing Experiment student 16 to ExperimentDistributionOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student 2"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student 1"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,"to ExperimentOld.csv¶written Experiment student 1"), Diff(DELETE,"7"), Diff(INSERT,"9to ExperimentOld.csv¶Writing Experiment student pd1to ExperimentOld.csv¶written Experiment student pd1to ExperimentOld.csv¶Writing Experiment student 30to ExperimentOld.csv¶written Experiment student 30"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student 2"), Diff(DELETE,"8"), Diff(INSERT,"0"), Diff(EQUAL,"to ExperimentOld.csv¶written Experiment student 2"), Diff(DELETE,"8"), Diff(INSERT,"0"), Diff(EQUAL,"to ExperimentOld.csv¶Writing Experiment student "), Diff(INSERT,"3"), Diff(EQUAL,"1"), Diff(DELETE,"8"), Diff(EQUAL,"to ExperimentOld.csv¶written Experiment student "), Diff(DELETE,"18"), Diff(INSERT,"31to ExperimentOld.csv¶Writing Experiment student 21to ExperimentOld.csv¶written Experiment student 21to ExperimentOld.csv¶Writing Experiment student 32to ExperimentOld.csv¶written Experiment student 32to ExperimentOld.csv¶Writing Experiment student pd2to ExperimentOld.csv¶written Experiment student pd2to ExperimentOld.csv¶Writing Experiment student 22 to ExperimentDistributionOld.csv¶written Experiment student 22to ExperimentDistributionOld.csv¶Writing Experiment student 33 to ExperimentDistributionOld.csv¶Writing Experiment student 23 to ExperimentDistributionOld.csv¶written Experiment student 23to ExperimentDistributionOld.csv¶Writing Experiment student 24 to ExperimentDistributionOld.csv¶written Experiment student 24"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student 2"), Diff(DELETE,"9"), Diff(INSERT,"6 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"DistributionOld.csv¶written Experiment student 26to ExperimentDistributionOld.csv¶Writing Experiment student 16 to ExperimentDistribution"), Diff(EQUAL,"Old.csv¶")]]]></diff>
  </Command>
  <Command __id="328" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548726" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 16to ExperimentDistributionOld.csv
Writing Experiment student 27 to ExperimentDistributionOld.csv
written Experiment student 27to ExperimentDistributionOld.csv
Writing Experiment student 17 to ExperimentDistributionOld.csv
written Experiment student 17to ExperimentDistributionOld.csv
Writing Experiment student 28 to ExperimentDistributionOld.csv
written Experiment student 28to ExperimentDistributionOld.csv
Writing Experiment student 18 to ExperimentDistributionOld.csv
written Experiment student 18to ExperimentDistributionOld.csv
Writing Experiment student 29 to ExperimentDistributionOld.csv
written Experiment student 29to ExperimentDistributionOld.csv
Writing Experiment student 19 to ExperimentDistributionOld.csv
written Experiment student 19to ExperimentDistributionOld.csv
Writing Experiment student pd1 to ExperimentDistributionOld.csv
Writing Experiment student 30 to ExperimentDistributionOld.csv
written Experiment student 30to ExperimentDistributionOld.csv
Writing Experiment student 20 to ExperimentDistributionOld.csv
written Experiment student 20to ExperimentDistributionOld.csv
Writing Experiment student 31 to ExperimentDistributionOld.csv
written Experiment student 31to ExperimentDistributionOld.csv
Writing Experiment student 21 to ExperimentDistributionOld.csv
written Experiment student 21to ExperimentDistributionOld.csv
Writing Experiment student 32 to ExperimentDistributionOld.csv
written Experiment student 32to ExperimentDistributionOld.csv
Writing Experiment student pd2 to ExperimentDistributionOld.csv
Writing Experiment student 22 to ExperimentPauseDistributionOld.csv
written Experiment student 22to ExperimentPauseDistributionOld.csv
Writing Experiment student 33 to ExperimentPauseDistributionOld.csv
written Experiment student 33to ExperimentPauseDistributionOld.csv
Writing Experiment student 23 to ExperimentPauseDistributionOld.csv
written Experiment student 23to ExperimentPauseDistributionOld.csv
Writing Experiment student 24 to ExperimentPauseDistributionOld.csv
written Experiment student 24to ExperimentPauseDistributionOld.csv
Writing Experiment student 26 to ExperimentPauseDistributionOld.csv
written Experiment student 26to ExperimentPauseDistributionOld.csv
Writing Experiment student 16 to ExperimentPauseDistributionOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student "), Diff(DELETE,"29"), Diff(INSERT,"16to ExperimentDistributionOld.csv¶Writing Experiment student 27 to ExperimentDistributionOld.csv¶written Experiment student 27"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student 1"), Diff(DELETE,"9"), Diff(INSERT,"7 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student 1"), Diff(DELETE,"9"), Diff(INSERT,"7"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student "), Diff(DELETE,"pd1"), Diff(INSERT,"28 to ExperimentDistributionOld.csv¶written Experiment student 28to ExperimentDistributionOld.csv¶Writing Experiment student 18 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student "), Diff(DELETE,"pd"), Diff(EQUAL,"1"), Diff(INSERT,"8"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student "), Diff(DELETE,"30"), Diff(INSERT,"29 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student "), Diff(DELETE,"30"), Diff(INSERT,"29"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student "), Diff(DELETE,"20"), Diff(INSERT,"19 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student "), Diff(DELETE,"20"), Diff(INSERT,"19to ExperimentDistributionOld.csv¶Writing Experiment student pd1 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student 3"), Diff(DELETE,"1"), Diff(INSERT,"0 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student 3"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student 2"), Diff(DELETE,"1"), Diff(INSERT,"0 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student 2"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student 3"), Diff(DELETE,"2"), Diff(INSERT,"1 "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶written Experiment student 3"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student "), Diff(DELETE,"pd2to ExperimentOld.csv¶written"), Diff(INSERT,"21 to ExperimentDistributionOld.csv¶written Experiment student 21to ExperimentDistributionOld.csv¶Writing Experiment student 32 to ExperimentDistributionOld.csv¶written Experiment student 32to ExperimentDistributionOld.csv¶Writing"), Diff(EQUAL," Experiment student pd2"), Diff(INSERT," "), Diff(EQUAL,"to Experiment"), Diff(INSERT,"Distribution"), Diff(EQUAL,"Old.csv¶Writing Experiment student 22 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 22to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 33 to Experiment"), Diff(INSERT,"PauseDistributionOld.csv¶written Experiment student 33to ExperimentPause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 23 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 23to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 24 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 24to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 26 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 26to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 16 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶")]]]></diff>
  </Command>
  <Command __id="329" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548786" type="ConsoleOutput">
    <outputString><![CDATA[written Experiment student 16to ExperimentPauseDistributionOld.csv
Writing Experiment student 27 to ExperimentPauseDistributionOld.csv
written Experiment student 27to ExperimentPauseDistributionOld.csv
Writing Experiment student 17 to ExperimentPauseDistributionOld.csv
written Experiment student 17to ExperimentPauseDistributionOld.csv
Writing Experiment student 28 to ExperimentPauseDistributionOld.csv
written Experiment student 28to ExperimentPauseDistributionOld.csv
Writing Experiment student 18 to ExperimentPauseDistributionOld.csv
written Experiment student 18to ExperimentPauseDistributionOld.csv
Writing Experiment student 29 to ExperimentPauseDistributionOld.csv
written Experiment student 29to ExperimentPauseDistributionOld.csv
Writing Experiment student 19 to ExperimentPauseDistributionOld.csv
written Experiment student 19to ExperimentPauseDistributionOld.csv
Writing Experiment student pd1 to ExperimentPauseDistributionOld.csv
written Experiment student pd1to ExperimentPauseDistributionOld.csv
Writing Experiment student 30 to ExperimentPauseDistributionOld.csv
written Experiment student 30to ExperimentPauseDistributionOld.csv
Writing Experiment student 20 to ExperimentPauseDistributionOld.csv
written Experiment student 20to ExperimentPauseDistributionOld.csv
Writing Experiment student 31 to ExperimentPauseDistributionOld.csv
written Experiment student 31to ExperimentPauseDistributionOld.csv
Writing Experiment student 21 to ExperimentPauseDistributionOld.csv
written Experiment student 21to ExperimentPauseDistributionOld.csv
Writing Experiment student 32 to ExperimentPauseDistributionOld.csv
written Experiment student 32to ExperimentPauseDistributionOld.csv
Writing Experiment student pd2 to ExperimentPauseDistributionOld.csv
written Experiment student pd2to ExperimentPauseDistributionOld.csv
Writing Experiment student 22 to ExperimentPauseDistributionOld.csv
written Experiment student 22to ExperimentPauseDistributionOld.csv
Writing Experiment student 33 to ExperimentPauseDistributionOld.csv
written Experiment student 33to ExperimentPauseDistributionOld.csv
Writing Experiment student 23 to ExperimentPauseDistributionOld.csv
written Experiment student 23to ExperimentPauseDistributionOld.csv
Writing Experiment student 24 to ExperimentPauseDistributionOld.csv
written Experiment student 24to ExperimentPauseDistributionOld.csv
Writing Experiment student 26 to ExperimentPauseDistributionOld.csv
written Experiment student 26to ExperimentPauseDistributionOld.csv
Writing Experiment student 16 to ExperimentPauseDistributionOld.csv
written Experiment student 16to ExperimentPauseDistributionOld.csv
Writing Experiment student 27 to ExperimentPauseDistributionOld.csv
written Experiment student 27to ExperimentPauseDistributionOld.csv
Writing Experiment student 17 to ExperimentPauseDistributionOld.csv
written Experiment student 17to ExperimentPauseDistributionOld.csv
Writing Experiment student 28 to ExperimentPauseDistributionOld.csv
written Experiment student 28to ExperimentPauseDistributionOld.csv
Writing Experiment student 18 to ExperimentPauseDistributionOld.csv
written Experiment student 18to ExperimentPauseDistributionOld.csv
Writing Experiment student 29 to ExperimentPauseDistributionOld.csv
written Experiment student 29to ExperimentPauseDistributionOld.csv
Writing Experiment student 19 to ExperimentPauseDistributionOld.csv
written Experiment student 19to ExperimentPauseDistributionOld.csv
Writing Experiment student pd1 to ExperimentPauseDistributionOld.csv
written Experiment student pd1to ExperimentPauseDistributionOld.csv
Writing Experiment student 30 to ExperimentPauseDistributionOld.csv
written Experiment student 30to ExperimentPauseDistributionOld.csv
Writing Experiment student 20 to ExperimentPauseDistributionOld.csv
written Experiment student 20to ExperimentPauseDistributionOld.csv
Writing Experiment student 31 to ExperimentPauseDistributionOld.csv
written Experiment student 31to ExperimentPauseDistributionOld.csv
Writing Experiment student 21 to ExperimentPauseDistributionOld.csv
written Experiment student 21to ExperimentPauseDistributionOld.csv
Writing Experiment student 32 to ExperimentPauseDistributionOld.csv
written Experiment student 32to ExperimentPauseDistributionOld.csv
Writing Experiment student pd2 to ExperimentPauseDistributionOld.csv
written Experiment student pd2to ExperimentPauseDistributionOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"written Experiment student 16to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 27 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 27to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 17 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 17to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 28 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 28to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 18 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 18to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 29 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 29to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 19 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 19to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student pd1 to Experiment"), Diff(INSERT,"PauseDistributionOld.csv¶written Experiment student pd1to ExperimentPause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 30 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 30to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 20 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 20to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 31 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 31to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 21 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 21to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 32 to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶written Experiment student 32to Experiment"), Diff(INSERT,"Pause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student pd2 to Experiment"), Diff(INSERT,"PauseDistributionOld.csv¶written Experiment student pd2to ExperimentPause"), Diff(EQUAL,"DistributionOld.csv¶Writing Experiment student 22 to ExperimentPauseDistributionOld.csv¶written Experiment student 22to ExperimentPauseDistributionOld.csv¶Writing Experiment student 33 to ExperimentPauseDistributionOld.csv¶written Experiment student 33to ExperimentPauseDistributionOld.csv¶Writing Experiment student 23 to ExperimentPauseDistributionOld.csv¶written Experiment student 23to ExperimentPauseDistributionOld.csv¶Writing Experiment student 24 to ExperimentPauseDistributionOld.csv¶written Experiment student 24to ExperimentPauseDistributionOld.csv¶Writing Experiment student 26 to ExperimentPauseDistributionOld.csv¶written Experiment student 26to ExperimentPauseDistributionOld.csv¶Writing Experiment student 16 to ExperimentPauseDistributionOld.csv¶"), Diff(INSERT,"written Experiment student 16to ExperimentPauseDistributionOld.csv¶Writing Experiment student 27 to ExperimentPauseDistributionOld.csv¶written Experiment student 27to ExperimentPauseDistributionOld.csv¶Writing Experiment student 17 to ExperimentPauseDistributionOld.csv¶written Experiment student 17to ExperimentPauseDistributionOld.csv¶Writing Experiment student 28 to ExperimentPauseDistributionOld.csv¶written Experiment student 28to ExperimentPauseDistributionOld.csv¶Writing Experiment student 18 to ExperimentPauseDistributionOld.csv¶written Experiment student 18to ExperimentPauseDistributionOld.csv¶Writing Experiment student 29 to ExperimentPauseDistributionOld.csv¶written Experiment student 29to ExperimentPauseDistributionOld.csv¶Writing Experiment student 19 to ExperimentPauseDistributionOld.csv¶written Experiment student 19to ExperimentPauseDistributionOld.csv¶Writing Experiment student pd1 to ExperimentPauseDistributionOld.csv¶written Experiment student pd1to ExperimentPauseDistributionOld.csv¶Writing Experiment student 30 to ExperimentPauseDistributionOld.csv¶written Experiment student 30to ExperimentPauseDistributionOld.csv¶Writing Experiment student 20 to ExperimentPauseDistributionOld.csv¶written Experiment student 20to ExperimentPauseDistributionOld.csv¶Writing Experiment student 31 to ExperimentPauseDistributionOld.csv¶written Experiment student 31to ExperimentPauseDistributionOld.csv¶Writing Experiment student 21 to ExperimentPauseDistributionOld.csv¶written Experiment student 21to ExperimentPauseDistributionOld.csv¶Writing Experiment student 32 to ExperimentPauseDistributionOld.csv¶written Experiment student 32to ExperimentPauseDistributionOld.csv¶Writing Experiment student pd2 to ExperimentPauseDistributionOld.csv¶written Experiment student pd2to ExperimentPauseDistributionOld.csv¶")]]]></diff>
  </Command>
  <Command __id="330" _type="ConsoleOutput" date="Fri Feb 26 14:38:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3548844" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 22 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"written Experiment student 16to ExperimentPauseDistributionOld.csv¶Writing Experiment student 27 to ExperimentPauseDistributionOld.csv¶written Experiment student 27to ExperimentPauseDistributionOld.csv¶Writing Experiment student 17 to ExperimentPauseDistributionOld.csv¶written Experiment student 17to ExperimentPauseDistributionOld.csv¶Writing Experiment student 28 to ExperimentPauseDistributionOld.csv¶written Experiment student 28to ExperimentPauseDistributionOld.csv¶Writing Experiment student 18 to ExperimentPauseDistributionOld.csv¶written Experiment student 18to ExperimentPauseDistributionOld.csv¶Writing Experiment student 29 to ExperimentPauseDistributionOld.csv¶written Experiment student 29to ExperimentPauseDistributionOld.csv¶Writing Experiment student 19 to ExperimentPauseDistributionOld.csv¶written Experiment student 19to ExperimentPauseDistributionOld.csv¶Writing Experiment student pd1 to ExperimentPauseDistributionOld.csv¶written Experiment student pd1to ExperimentPauseDistributionOld.csv¶Writing Experiment student 30 to ExperimentPauseDistributionOld.csv¶written Experiment student 30to ExperimentPauseDistributionOld.csv¶Writing Experiment student 20 to ExperimentPauseDistributionOld.csv¶written Experiment student 20to ExperimentPauseDistributionOld.csv¶Writing Experiment student 31 to ExperimentPauseDistributionOld.csv¶written Experiment student 31to ExperimentPauseDistributionOld.csv¶Writing Experiment student 21 to ExperimentPauseDistributionOld.csv¶written Experiment student 21to ExperimentPauseDistributionOld.csv¶Writing Experiment student 32 to ExperimentPauseDistributionOld.csv¶written Experiment student 32to ExperimentPauseDistributionOld.csv¶Writing Experiment student pd2 to ExperimentPauseDistributionOld.csv¶written Experiment student pd2to ExperimentPauseDistributionOld.csv¶Writing Experiment student 22 to ExperimentPauseDistributionOld.csv¶written Experiment student 22to ExperimentPauseDistributionOld.csv¶Writing Experiment student 33 to ExperimentPauseDistributionOld.csv¶written Experiment student 33to ExperimentPauseDistributionOld.csv¶Writing Experiment student 23 to ExperimentPauseDistributionOld.csv¶written Experiment student 23to ExperimentPauseDistributionOld.csv¶Writing Experiment student 24 to ExperimentPauseDistributionOld.csv¶written Experiment student 24to ExperimentPauseDistributionOld.csv¶Writing Experiment student 26 to ExperimentPauseDistributionOld.csv¶written Experiment student 26to ExperimentPauseDistributionOld.csv¶Writing Experiment student 16 to ExperimentPauseDistributionOld.csv¶written Experiment student 16to ExperimentPauseDistributionOld.csv¶Writing Experiment student 27 to ExperimentPauseDistributionOld.csv¶written Experiment student 27to ExperimentPauseDistributionOld.csv¶Writing Experiment student 17 to ExperimentPauseDistributionOld.csv¶written Experiment student 17to ExperimentPauseDistributionOld.csv¶Writing Experiment student 28 to ExperimentPauseDistributionOld.csv¶written Experiment student 28to ExperimentPauseDistributionOld.csv¶Writing Experiment student 18 to ExperimentPauseDistributionOld.csv¶written Experiment student 18to ExperimentPauseDistributionOld.csv¶Writing Experiment student 29 to ExperimentPauseDistributionOld.csv¶written Experiment student 29to ExperimentPauseDistributionOld.csv¶Writing Experiment student 19 to ExperimentPauseDistributionOld.csv¶written Experiment student 19to ExperimentPauseDistributionOld.csv¶Writing Experiment student pd1 to ExperimentPauseDistributionOld.csv¶written Experiment student pd1to ExperimentPauseDistributionOld.csv¶Writing Experiment student 30 to ExperimentPauseDistributionOld.csv¶written Experiment student 30to ExperimentPauseDistributionOld.csv¶Writing Experiment student 20 to ExperimentPauseDistributionOld.csv¶written Experiment student 20to ExperimentPauseDistributionOld.csv¶Writing Experiment student 31 to ExperimentPauseDistributionOld.csv¶written Experiment student 31to ExperimentPauseDistributionOld.csv¶Writing Experiment student 21 to ExperimentPauseDistributionOld.csv¶written Experiment student 21to ExperimentPauseDistributionOld.csv¶Writing Experiment student 32 to ExperimentPauseDistributionOld.csv¶written Experiment student 32to ExperimentPauseDistributionOld.csv¶Writing Experiment student pd2 to ExperimentPauseDistributionOld.csv¶written Experiment student pd2to ExperimentPauseDistribution"), Diff(INSERT,"Writing Experiment student 22 to ExperimentWebStats"), Diff(EQUAL,"Old.csv¶")]]]></diff>
  </Command>
  <Command __id="331" _type="ShellCommand" date="Fri Feb 26 14:38:03 EST 2021" starttimestamp="1614364734870" timestamp="3549050" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="333" _type="PauseCommand" date="Fri Feb 26 14:38:06 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3551610">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2560]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="332" _type="ConsoleOutput" date="Fri Feb 26 14:38:06 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3551610" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 33 to ExperimentWebStatsOld.csv
Writing Experiment student 23 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"22"), Diff(INSERT,"33 to ExperimentWebStatsOld.csv¶Writing Experiment student 23"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="335" _type="PauseCommand" date="Fri Feb 26 14:38:08 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3553607">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1997]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="334" _type="ConsoleOutput" date="Fri Feb 26 14:38:08 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3553607" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 24 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Writing Experiment student 33 to ExperimentWebStatsOld.csv¶"), Diff(EQUAL,"Writing Experiment student 2"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="336" _type="ExceptionCommand" date="Fri Feb 26 14:38:08 EST 2021" starttimestamp="1614364734870" timestamp="3554037" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: Server returned HTTP response code: 403 for URL: http://www.geom.uiuc.edu/~daeron/docs/apidocs/java.awt.Rectangle.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1900)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="338" _type="PauseCommand" date="Fri Feb 26 14:38:11 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3556270">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2233]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="337" _type="ExceptionCommand" date="Fri Feb 26 14:38:11 EST 2021" starttimestamp="1614364734870" timestamp="3556270" type="Exception">
    <exceptionString><![CDATA[java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="340" _type="PauseCommand" date="Fri Feb 26 14:38:14 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3559641">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3371]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="339" _type="ExceptionCommand" date="Fri Feb 26 14:38:14 EST 2021" starttimestamp="1614364734870" timestamp="3559641" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://stackoverflow.com/questions/628830/netbeans-tips-and-tricks
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="342" _type="PauseCommand" date="Fri Feb 26 14:38:17 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3562665">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3024]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="341" _type="ExceptionCommand" date="Fri Feb 26 14:38:17 EST 2021" starttimestamp="1614364734870" timestamp="3562665" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: http://javalessons.com/cgi-bin/fun/java-programming.cgi?1cd=mev&sid=ao789&j2ee=jsp
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="344" _type="PauseCommand" date="Fri Feb 26 14:38:18 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3563867">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1202]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="343" _type="ExceptionCommand" date="Fri Feb 26 14:38:18 EST 2021" starttimestamp="1614364734870" timestamp="3563867" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://javalessons.com/cgi-bin/fun/java-programming.cgi?1cd=mev&sid=ao789&j2ee=jsp
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="346" _type="PauseCommand" date="Fri Feb 26 14:38:39 EST 2021" range="20s-30s" starttimestamp="1614364734870" timestamp="3585006">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[21139]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="345" _type="ExceptionCommand" date="Fri Feb 26 14:38:39 EST 2021" starttimestamp="1614364734870" timestamp="3585006" type="Exception">
    <exceptionString><![CDATA[java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="348" _type="PauseCommand" date="Fri Feb 26 14:39:00 EST 2021" range="20s-30s" starttimestamp="1614364734870" timestamp="3606011">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[21005]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="347" _type="ExceptionCommand" date="Fri Feb 26 14:39:00 EST 2021" starttimestamp="1614364734870" timestamp="3606011" type="Exception">
    <exceptionString><![CDATA[java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="350" _type="PauseCommand" date="Fri Feb 26 14:39:06 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="3611962">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5951]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="349" _type="ConsoleOutput" date="Fri Feb 26 14:39:06 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3611962" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 26 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student 2"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="352" _type="PauseCommand" date="Fri Feb 26 14:39:14 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="3619430">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7468]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="351" _type="ConsoleOutput" date="Fri Feb 26 14:39:14 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3619430" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 16 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"6 to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="354" _type="PauseCommand" date="Fri Feb 26 14:39:24 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="3629906">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10476]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="353" _type="ExceptionCommand" date="Fri Feb 26 14:39:24 EST 2021" starttimestamp="1614364734870" timestamp="3629906" type="Exception">
    <exceptionString><![CDATA[java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at sun.security.ssl.InputRecord.readFully(InputRecord.java:465)
	at sun.security.ssl.InputRecord.read(InputRecord.java:503)
	at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:975)
	at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:933)
	at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:735)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1593)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="356" _type="PauseCommand" date="Fri Feb 26 14:39:27 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3632130">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2224]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="355" _type="ConsoleOutput" date="Fri Feb 26 14:39:27 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3632130" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 27 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"16"), Diff(INSERT,"27"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="358" _type="PauseCommand" date="Fri Feb 26 14:39:39 EST 2021" range="10s-20s" starttimestamp="1614364734870" timestamp="3644514">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12384]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="357" _type="ExceptionCommand" date="Fri Feb 26 14:39:39 EST 2021" starttimestamp="1614364734870" timestamp="3644514" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
Writing Experiment student 17 to ExperimentWebStatsOld.csv
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="359" _type="ConsoleOutput" date="Fri Feb 26 14:39:40 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3645426" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 28 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student 2"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="361" _type="PauseCommand" date="Fri Feb 26 14:39:44 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3649530">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4104]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="360" _type="ExceptionCommand" date="Fri Feb 26 14:39:44 EST 2021" starttimestamp="1614364734870" timestamp="3649530" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
java.net.UnknownHostException: www.apl.jhu.edu
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="363" _type="PauseCommand" date="Fri Feb 26 14:39:45 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3650949">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1419]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="362" _type="ConsoleOutput" date="Fri Feb 26 14:39:45 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3650949" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 18 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"8 to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="365" _type="PauseCommand" date="Fri Feb 26 14:39:49 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3654604">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3655]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="364" _type="ExceptionCommand" date="Fri Feb 26 14:39:49 EST 2021" starttimestamp="1614364734870" timestamp="3654604" type="Exception">
    <exceptionString><![CDATA[java.net.UnknownHostException: leepoint.net
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at java.net.Socket.connect(Socket.java:555)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
java.net.UnknownHostException: leepoint.net
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:666)
	at sun.security.ssl.BaseSSLSocketImpl.connect(BaseSSLSocketImpl.java:173)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.protocol.https.HttpsClient.<init>(HttpsClient.java:264)
	at sun.net.www.protocol.https.HttpsClient.New(HttpsClient.java:367)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.getNewHttpClient(AbstractDelegateHttpsURLConnection.java:191)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:177)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
Writing Experiment student 29 to ExperimentWebStatsOld.csv
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="367" _type="PauseCommand" date="Fri Feb 26 14:39:51 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3657068">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2464]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="366" _type="ConsoleOutput" date="Fri Feb 26 14:39:51 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3657068" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 19 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student 1"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="369" _type="PauseCommand" date="Fri Feb 26 14:39:54 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3659571">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2503]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="368" _type="ExceptionCommand" date="Fri Feb 26 14:39:54 EST 2021" starttimestamp="1614364734870" timestamp="3659571" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fGraphics2D.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="371" _type="PauseCommand" date="Fri Feb 26 14:39:55 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3660926">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1355]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="370" _type="ExceptionCommand" date="Fri Feb 26 14:39:55 EST 2021" starttimestamp="1614364734870" timestamp="3660926" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fShape.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="373" _type="PauseCommand" date="Fri Feb 26 14:39:57 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3662396">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1470]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="372" _type="ExceptionCommand" date="Fri Feb 26 14:39:57 EST 2021" starttimestamp="1614364734870" timestamp="3662396" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fpackage-tree.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="375" _type="PauseCommand" date="Fri Feb 26 14:40:02 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="3667843">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5447]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="374" _type="ExceptionCommand" date="Fri Feb 26 14:40:02 EST 2021" starttimestamp="1614364734870" timestamp="3667843" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fevent%2fKeyAdapter.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="376" _type="ConsoleOutput" date="Fri Feb 26 14:40:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3668222" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student pd1 to ExperimentWebStatsOld.csv
Writing Experiment student 30 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"19"), Diff(INSERT,"pd1 to ExperimentWebStatsOld.csv¶Writing Experiment student 30"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="377" _type="ConsoleOutput" date="Fri Feb 26 14:40:03 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3668381" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 20 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student "), Diff(DELETE,"pd1 to ExperimentWebStatsOld.csv¶Writing Experiment student 3"), Diff(INSERT,"2"), Diff(EQUAL,"0 to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="379" _type="PauseCommand" date="Fri Feb 26 14:40:05 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3670147">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1766]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="378" _type="ConsoleOutput" date="Fri Feb 26 14:40:05 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3670147" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 31 to ExperimentWebStatsOld.csv
Writing Experiment student 21 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Writing Experiment student 31 to ExperimentWebStatsOld.csv¶"), Diff(EQUAL,"Writing Experiment student 2"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="381" _type="PauseCommand" date="Fri Feb 26 14:40:08 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="3673531">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3384]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="380" _type="ExceptionCommand" date="Fri Feb 26 14:40:08 EST 2021" starttimestamp="1614364734870" timestamp="3673531" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fGraphics.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="382" _type="ExceptionCommand" date="Fri Feb 26 14:40:08 EST 2021" starttimestamp="1614364734870" timestamp="3673727" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fGraphics.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="384" _type="PauseCommand" date="Fri Feb 26 14:40:09 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3674932">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="383" _type="ExceptionCommand" date="Fri Feb 26 14:40:09 EST 2021" starttimestamp="1614364734870" timestamp="3674932" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fColor.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="386" _type="PauseCommand" date="Fri Feb 26 14:40:11 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3676269">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1337]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="385" _type="ExceptionCommand" date="Fri Feb 26 14:40:11 EST 2021" starttimestamp="1614364734870" timestamp="3676269" type="Exception">
    <exceptionString><![CDATA[java.io.FileNotFoundException: https://docs.oracle.com/pls/rdman/handle404?X_ORCL_404path=%2fjavase%2f1.4.2%2fdocs%2fapi%2fjava%2fawt%2fColor.html
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1896)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:268)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1023)
	at logAnalyzer.AExperimentalReplayer.readWebContent(AExperimentalReplayer.java:1040)
	at logAnalyzer.AExperimentalReplayer.createWebStats(AExperimentalReplayer.java:769)
	at logAnalyzer.AExperimentalReplayer.analyzeFolder(AExperimentalReplayer.java:309)
	at logAnalyzer.Driver.main(Driver.java:38)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="388" _type="PauseCommand" date="Fri Feb 26 14:40:12 EST 2021" range="1s-2s" starttimestamp="1614364734870" timestamp="3677379">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1110]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="387" _type="ConsoleOutput" date="Fri Feb 26 14:40:12 EST 2021" overflow="false" starttimestamp="1614364734870" timestamp="3677379" type="ConsoleOutput">
    <outputString><![CDATA[Writing Experiment student 32 to ExperimentWebStatsOld.csv
Writing Experiment student pd2 to ExperimentWebStatsOld.csv
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Writing Experiment student 3"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶Writing Experiment student "), Diff(INSERT,"pd"), Diff(EQUAL,"2"), Diff(DELETE,"1"), Diff(EQUAL," to ExperimentWebStatsOld.csv¶")]]]></diff>
  </Command>
  <Command __id="389" _type="RunCommand" date="Fri Feb 26 14:40:12 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="3677560" type="Run" />
  <Command __id="390" _type="RunCommand" date="Fri Feb 26 14:40:12 EST 2021" kind="HitBreakPoint" projectName="LogAnalyzer" starttimestamp="1614364734870" timestamp="3677560" type="Run" />
  <Command __id="392" _type="PauseCommand" date="Fri Feb 26 15:14:25 EST 2021" range="30m-60m" starttimestamp="1614364734870" timestamp="5731017">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2053457]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="391" _type="ShellCommand" date="Fri Feb 26 15:14:25 EST 2021" starttimestamp="1614364734870" timestamp="5731017" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="393" _type="ShellCommand" date="Fri Feb 26 15:14:25 EST 2021" starttimestamp="1614364734870" timestamp="5731110" type="ECLIPSE_MINIMIZED" />
  <Command __id="394" _type="ShellCommand" date="Fri Feb 26 15:14:25 EST 2021" starttimestamp="1614364734870" timestamp="5731119" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="396" _type="PauseCommand" date="Fri Feb 26 15:21:54 EST 2021" range="5m-10m" starttimestamp="1614364734870" timestamp="6179435">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[448316]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="395" _type="ShellCommand" date="Fri Feb 26 15:21:54 EST 2021" starttimestamp="1614364734870" timestamp="6179435" type="ECLIPSE_MAXIMIZED" />
  <Command __id="397" _type="ShellCommand" date="Fri Feb 26 15:21:54 EST 2021" starttimestamp="1614364734870" timestamp="6179498" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="399" _type="PauseCommand" date="Fri Feb 26 15:22:01 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="6186304">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6806]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="398" _type="MoveCaretCommand" caretOffset="1264" date="Fri Feb 26 15:22:01 EST 2021" docOffset="1561" starttimestamp="1614364734870" timestamp="6186304" />
  <Command __id="401" _type="PauseCommand" date="Fri Feb 26 15:22:04 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="6190128">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3824]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="400" _type="ShellCommand" date="Fri Feb 26 15:22:04 EST 2021" starttimestamp="1614364734870" timestamp="6190128" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="403" _type="PauseCommand" date="Fri Feb 26 16:12:01 EST 2021" range="30m-60m" starttimestamp="1614364734870" timestamp="9186203">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2996075]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="402" _type="ShellCommand" date="Fri Feb 26 16:12:01 EST 2021" starttimestamp="1614364734870" timestamp="9186203" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="405" _type="PauseCommand" date="Fri Feb 26 16:12:09 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="9195056">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8853]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="404" _type="MoveCaretCommand" caretOffset="704" date="Fri Feb 26 16:12:09 EST 2021" docOffset="1001" starttimestamp="1614364734870" timestamp="9195056" />
  <Command __id="407" _type="PauseCommand" date="Fri Feb 26 16:12:40 EST 2021" range="30s-1m" starttimestamp="1614364734870" timestamp="9225145">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[30089]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="406" _type="ShellCommand" date="Fri Feb 26 16:12:40 EST 2021" starttimestamp="1614364734870" timestamp="9225145" type="ECLIPSE_MINIMIZED" />
  <Command __id="408" _type="ShellCommand" date="Fri Feb 26 16:12:40 EST 2021" starttimestamp="1614364734870" timestamp="9225161" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="410" _type="PauseCommand" date="Fri Feb 26 16:12:45 EST 2021" range="5s-10s" starttimestamp="1614364734870" timestamp="9230281">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5120]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="409" _type="ShellCommand" date="Fri Feb 26 16:12:45 EST 2021" starttimestamp="1614364734870" timestamp="9230281" type="ECLIPSE_MAXIMIZED" />
  <Command __id="411" _type="ShellCommand" date="Fri Feb 26 16:12:45 EST 2021" starttimestamp="1614364734870" timestamp="9230391" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="413" _type="PauseCommand" date="Fri Feb 26 16:12:48 EST 2021" range="2s-5s" starttimestamp="1614364734870" timestamp="9233527">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3136]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="412" _type="ShellCommand" date="Fri Feb 26 16:12:48 EST 2021" starttimestamp="1614364734870" timestamp="9233527" type="ECLIPSE_MINIMIZED" />
  <Command __id="414" _type="ShellCommand" date="Fri Feb 26 16:12:48 EST 2021" starttimestamp="1614364734870" timestamp="9233545" type="ECLIPSE_LOST_FOCUS" />
</Events>
